ARM GAS  /tmp/cctZ3fzX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"deca_device.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._dwt_crc8init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_dwt_crc8init:
  26              	.LFB15:
  27              		.file 1 "Core/Src/deca_device.c"
   1:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
   2:Core/Src/deca_device.c ****  * @file    deca_device.c
   3:Core/Src/deca_device.c ****  * @brief   Decawave device configuration and control functions
   4:Core/Src/deca_device.c ****  *
   5:Core/Src/deca_device.c ****  * @attention
   6:Core/Src/deca_device.c ****  *
   7:Core/Src/deca_device.c ****  * Copyright 2013-2020 (c) Decawave Ltd, Dublin, Ireland.
   8:Core/Src/deca_device.c ****  *
   9:Core/Src/deca_device.c ****  * All rights reserved.
  10:Core/Src/deca_device.c ****  *
  11:Core/Src/deca_device.c ****  */
  12:Core/Src/deca_device.c **** 
  13:Core/Src/deca_device.c **** #include <assert.h>
  14:Core/Src/deca_device.c **** #include <stdlib.h>
  15:Core/Src/deca_device.c **** #include <stdint.h>
  16:Core/Src/deca_device.c **** 
  17:Core/Src/deca_device.c **** #include "deca_types.h"
  18:Core/Src/deca_device.c **** #include "deca_regs.h"
  19:Core/Src/deca_device.c **** #include "deca_device_api.h"
  20:Core/Src/deca_device.c **** #include "deca_version.h"
  21:Core/Src/deca_device.c **** 
  22:Core/Src/deca_device.c **** // ------------------------------------------------------------------------------------------------
  23:Core/Src/deca_device.c **** // Module Macro definitions and enumerations
  24:Core/Src/deca_device.c **** //
  25:Core/Src/deca_device.c **** 
  26:Core/Src/deca_device.c **** //#define DWT_API_ERROR_CHECK  /* API checks config input parameters */
  27:Core/Src/deca_device.c **** 
  28:Core/Src/deca_device.c **** /* STS Minimum Threshold (STS_MNTH) needs to be adjusted with changing STS length.
  29:Core/Src/deca_device.c **** To adjust the STS_MNTH following formula can be used: STS_MNTH = SQRT(X/Y)*default_STS_MNTH
  30:Core/Src/deca_device.c **** default_STS_MNTH is 0x10
  31:Core/Src/deca_device.c **** X is the length of the STS in units of 8 (i.e. 8 for 64 length, 16 for 128 length etc.)
ARM GAS  /tmp/cctZ3fzX.s 			page 2


  32:Core/Src/deca_device.c **** Y is either 8 or 16, 8 when no PDOA or PDOA mode 1 and 16 for PDOA mode 3
  33:Core/Src/deca_device.c **** 
  34:Core/Src/deca_device.c **** The API does not use the formula and the STS_MNTH value is derived from approximation formula as gi
  35:Core/Src/deca_device.c **** function. The API here supports STS lengths as listed in: dwt_sts_lengths_e enum, which are: 32, 64
  36:Core/Src/deca_device.c **** The enum value is used as the index into sts_length_factors array. The array has values which are g
  37:Core/Src/deca_device.c **** val = SQRT(stsLength/16)*2048
  38:Core/Src/deca_device.c **** */
  39:Core/Src/deca_device.c **** const uint16_t sts_length_factors[STS_LEN_SUPPORTED]=
  40:Core/Src/deca_device.c **** {
  41:Core/Src/deca_device.c ****     1024,1448,2048,2896,4096,5793,8192
  42:Core/Src/deca_device.c **** };
  43:Core/Src/deca_device.c **** 
  44:Core/Src/deca_device.c **** static uint16_t get_sts_mnth(uint16_t sts, uint8_t default_threshold, uint8_t shift_val);
  45:Core/Src/deca_device.c **** 
  46:Core/Src/deca_device.c **** //DW-IC SPI CRC-8 polynomial
  47:Core/Src/deca_device.c **** #define POLYNOMIAL  0x07    /* x^8 + x^2 + x^1 + x^0 */
  48:Core/Src/deca_device.c **** #define TOPBIT      (1 << (8 - 1))
  49:Core/Src/deca_device.c **** 
  50:Core/Src/deca_device.c **** // OTP addresses definitions
  51:Core/Src/deca_device.c **** #define LDOTUNELO_ADDRESS (0x04)
  52:Core/Src/deca_device.c **** #define LDOTUNEHI_ADDRESS (0x05)
  53:Core/Src/deca_device.c **** #define PARTID_ADDRESS  (0x06)
  54:Core/Src/deca_device.c **** #define LOTID_ADDRESS   (0x07)
  55:Core/Src/deca_device.c **** #define VBAT_ADDRESS    (0x08)
  56:Core/Src/deca_device.c **** #define VTEMP_ADDRESS   (0x09)
  57:Core/Src/deca_device.c **** #define XTRIM_ADDRESS   (0x1E)
  58:Core/Src/deca_device.c **** #define OTPREV_ADDRESS  (0x1F)
  59:Core/Src/deca_device.c **** #define BIAS_TUNE_ADDRESS (0xA)
  60:Core/Src/deca_device.c **** #define DGC_TUNE_ADDRESS (0x20)
  61:Core/Src/deca_device.c **** 
  62:Core/Src/deca_device.c **** // dwt_readcarrierintegrator defines
  63:Core/Src/deca_device.c **** #define B20_SIGN_EXTEND_TEST (0x00100000UL)
  64:Core/Src/deca_device.c **** #define B20_SIGN_EXTEND_MASK (0xFFF00000UL)
  65:Core/Src/deca_device.c **** #define DRX_CARRIER_INT_LEN  (3)
  66:Core/Src/deca_device.c **** 
  67:Core/Src/deca_device.c **** #define CIA_MANUALLOWERBOUND_TH_64  (0x10) //cia lower bound threshold values for 64 MHz PRF
  68:Core/Src/deca_device.c **** #define STSQUAL_THRESH_64 (0.90f)
  69:Core/Src/deca_device.c ****  //STS quality threshold values for 64 MHz PRF
  70:Core/Src/deca_device.c ****  //when using 64 MHz PRF the stsCpQual should be > 90 % of STS length
  71:Core/Src/deca_device.c **** 
  72:Core/Src/deca_device.c **** // dwt_readclockoffset defines
  73:Core/Src/deca_device.c **** #define B11_SIGN_EXTEND_TEST (0x1000UL)
  74:Core/Src/deca_device.c **** #define B11_SIGN_EXTEND_MASK (0xE000UL)
  75:Core/Src/deca_device.c **** 
  76:Core/Src/deca_device.c **** // dwt_readpdoa defines
  77:Core/Src/deca_device.c **** #define B12_SIGN_EXTEND_TEST (0x2000UL)
  78:Core/Src/deca_device.c **** #define B12_SIGN_EXTEND_MASK (0xC000UL)
  79:Core/Src/deca_device.c **** 
  80:Core/Src/deca_device.c **** // ------------------------------------------------------------------------------------------------
  81:Core/Src/deca_device.c **** // Macros and Enumerations for SPI & CLock blocks
  82:Core/Src/deca_device.c **** //
  83:Core/Src/deca_device.c **** #define DW3000_SPI_FAC      (0<<6 | 1<<0)
  84:Core/Src/deca_device.c **** #define DW3000_SPI_FARW     (0<<6 | 0<<0)
  85:Core/Src/deca_device.c **** #define DW3000_SPI_EAMRW    (1<<6)
  86:Core/Src/deca_device.c **** 
  87:Core/Src/deca_device.c **** // Defines for enable_clocks function
  88:Core/Src/deca_device.c **** #define FORCE_CLK_SYS_TX        (1)
ARM GAS  /tmp/cctZ3fzX.s 			page 3


  89:Core/Src/deca_device.c **** #define FORCE_CLK_AUTO          (5)
  90:Core/Src/deca_device.c **** //SYSCLK
  91:Core/Src/deca_device.c **** #define FORCE_SYSCLK_PLL        (2)
  92:Core/Src/deca_device.c **** #define FORCE_SYSCLK_FOSCDIV4   (1)
  93:Core/Src/deca_device.c **** #define FORCE_SYSCLK_FOSC       (3)
  94:Core/Src/deca_device.c **** //RX and TX CLK
  95:Core/Src/deca_device.c **** #define FORCE_CLK_PLL           (2)
  96:Core/Src/deca_device.c **** 
  97:Core/Src/deca_device.c **** #define SEL_CHANNEL5            (5)
  98:Core/Src/deca_device.c **** #define SEL_CHANNEL9            (9)
  99:Core/Src/deca_device.c **** 
 100:Core/Src/deca_device.c **** // ------------------------------------------------------------------------------------------------
 101:Core/Src/deca_device.c **** // Internal functions prototypes for controlling and configuring the device
 102:Core/Src/deca_device.c **** //
 103:Core/Src/deca_device.c **** static void dwt_force_clocks(int clocks);
 104:Core/Src/deca_device.c **** static uint32_t _dwt_otpread(uint16_t address);                     // Read non-volatile memory
 105:Core/Src/deca_device.c **** static void _dwt_otpprogword32(uint32_t data, uint16_t address);  // Program the non-volatile memor
 106:Core/Src/deca_device.c **** 
 107:Core/Src/deca_device.c **** // ------------------------------------------------------------------------------------------------
 108:Core/Src/deca_device.c **** // Data for DW3000 Decawave Transceiver control
 109:Core/Src/deca_device.c **** //
 110:Core/Src/deca_device.c **** // Structure to hold the device data
 111:Core/Src/deca_device.c **** typedef struct
 112:Core/Src/deca_device.c **** {
 113:Core/Src/deca_device.c ****     uint32_t      partID ;            // IC Part ID - read during initialisation
 114:Core/Src/deca_device.c ****     uint32_t      lotID ;             // IC Lot ID - read during initialisation
 115:Core/Src/deca_device.c ****     uint8_t       bias_tune;          // bias tune code
 116:Core/Src/deca_device.c ****     uint8_t       dgc_otp_set;        // Flag to check if DGC values are programmed in OTP
 117:Core/Src/deca_device.c ****     uint8_t       vBatP;              // IC V bat read during production and stored in OTP (Vmeas @
 118:Core/Src/deca_device.c ****     uint8_t       tempP;              // IC temp read during production and stored in OTP (Tmeas @ 
 119:Core/Src/deca_device.c ****     uint8_t       longFrames ;        // Flag in non-standard long frame mode
 120:Core/Src/deca_device.c ****     uint8_t       otprev ;            // OTP revision number (read during initialisation)
 121:Core/Src/deca_device.c ****     uint8_t       init_xtrim;         // initial XTAL trim value read from OTP (or defaulted to mid
 122:Core/Src/deca_device.c ****     uint8_t       dblbuffon;          // Double RX buffer mode and DB status flag
 123:Core/Src/deca_device.c ****     uint16_t      sleep_mode;         // Used for automatic reloading of LDO tune and microcode at 
 124:Core/Src/deca_device.c ****     int16_t       ststhreshold;       // Threshold for deciding if received STS is good or bad
 125:Core/Src/deca_device.c ****     dwt_spi_crc_mode_e   spicrc;      // Use SPI CRC when this flag is true
 126:Core/Src/deca_device.c ****     uint8_t       stsconfig;          // STS configuration mode
 127:Core/Src/deca_device.c ****     uint8_t       cia_diagnostic;     // CIA dignostic logging level
 128:Core/Src/deca_device.c ****     dwt_cb_data_t cbData;             // Callback data structure
 129:Core/Src/deca_device.c ****     dwt_spierrcb_t cbSPIRDErr;        // Callback for SPI read error events
 130:Core/Src/deca_device.c ****     dwt_cb_t    cbTxDone;             // Callback for TX confirmation event
 131:Core/Src/deca_device.c ****     dwt_cb_t    cbRxOk;               // Callback for RX good frame event
 132:Core/Src/deca_device.c ****     dwt_cb_t    cbRxTo;               // Callback for RX timeout events
 133:Core/Src/deca_device.c ****     dwt_cb_t    cbRxErr;              // Callback for RX error events
 134:Core/Src/deca_device.c ****     dwt_cb_t    cbSPIErr;             // Callback for SPI error events
 135:Core/Src/deca_device.c ****     dwt_cb_t    cbSPIRdy;             // Callback for SPI ready events
 136:Core/Src/deca_device.c **** } dwt_local_data_t ;
 137:Core/Src/deca_device.c **** 
 138:Core/Src/deca_device.c **** 
 139:Core/Src/deca_device.c **** // ------------------------------------------------------------------------------------------------
 140:Core/Src/deca_device.c **** // Local variables
 141:Core/Src/deca_device.c **** //
 142:Core/Src/deca_device.c **** static dwt_local_data_t   DW3000local[DWT_NUM_DW_DEV] ; // Local device data, can be an array to su
 143:Core/Src/deca_device.c **** static dwt_local_data_t *pdw3000local = &DW3000local[0];   // Local data structure pointer
 144:Core/Src/deca_device.c **** static uint8_t crcTable[256];
 145:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 4


 146:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 147:Core/Src/deca_device.c ****  * @brief This function returns the version of the API as defined by DW3000_DRIVER_VERSION
 148:Core/Src/deca_device.c ****  *
 149:Core/Src/deca_device.c ****  * input parameters
 150:Core/Src/deca_device.c ****  *
 151:Core/Src/deca_device.c ****  * output parameters
 152:Core/Src/deca_device.c ****  *
 153:Core/Src/deca_device.c ****  * returns version (DW3000_DRIVER_VERSION)
 154:Core/Src/deca_device.c ****  */
 155:Core/Src/deca_device.c **** int32_t dwt_apiversion(void)
 156:Core/Src/deca_device.c **** {
 157:Core/Src/deca_device.c ****     return DW3000_DRIVER_VERSION;
 158:Core/Src/deca_device.c **** }
 159:Core/Src/deca_device.c **** 
 160:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 161:Core/Src/deca_device.c ****  * @brief This function sets the local data structure pointer to point to the element in the local 
 162:Core/Src/deca_device.c ****  *
 163:Core/Src/deca_device.c ****  * input parameters
 164:Core/Src/deca_device.c ****  * @param index    - selects the array element to point to. Must be within the array bounds, i.e. <
 165:Core/Src/deca_device.c ****  *
 166:Core/Src/deca_device.c ****  * output parameters
 167:Core/Src/deca_device.c ****  *
 168:Core/Src/deca_device.c ****  * returns DWT_SUCCESS for success, or DWT_ERROR for error
 169:Core/Src/deca_device.c ****  */
 170:Core/Src/deca_device.c **** int dwt_setlocaldataptr(unsigned int index)
 171:Core/Src/deca_device.c **** {
 172:Core/Src/deca_device.c ****     // Check the index is within the array bounds
 173:Core/Src/deca_device.c ****     if (DWT_NUM_DW_DEV <= index) // return error if index outside the array bounds
 174:Core/Src/deca_device.c ****     {
 175:Core/Src/deca_device.c ****         return DWT_ERROR ;
 176:Core/Src/deca_device.c ****     }
 177:Core/Src/deca_device.c **** 
 178:Core/Src/deca_device.c ****     pdw3000local = &DW3000local[index];
 179:Core/Src/deca_device.c **** 
 180:Core/Src/deca_device.c ****     return DWT_SUCCESS ;
 181:Core/Src/deca_device.c **** }
 182:Core/Src/deca_device.c **** 
 183:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 184:Core/Src/deca_device.c **** * @brief  this function is used to read/write to the DW3000 device registers
 185:Core/Src/deca_device.c **** *
 186:Core/Src/deca_device.c **** * input parameters:
 187:Core/Src/deca_device.c **** * @param recordNumber  - ID of register file or buffer being accessed
 188:Core/Src/deca_device.c **** * @param index         - byte index into register file or buffer being accessed
 189:Core/Src/deca_device.c **** * @param length        - number of bytes being written
 190:Core/Src/deca_device.c **** * @param buffer        - pointer to buffer containing the 'length' bytes to be written
 191:Core/Src/deca_device.c **** * @param rw            - DW3000_SPI_WR_BIT/DW3000_SPI_RD_BIT
 192:Core/Src/deca_device.c **** *
 193:Core/Src/deca_device.c **** * no return value
 194:Core/Src/deca_device.c **** */
 195:Core/Src/deca_device.c **** static
 196:Core/Src/deca_device.c **** void dwt_xfer3000
 197:Core/Src/deca_device.c **** (
 198:Core/Src/deca_device.c ****     const uint32_t    regFileID,  //0x0, 0x04-0x7F ; 0x10000, 0x10004, 0x10008-0x1007F; 0x20000 etc
 199:Core/Src/deca_device.c ****     const uint16_t    indx,       //sub-index, calculated from regFileID 0..0x7F,
 200:Core/Src/deca_device.c ****     const uint16_t    length,
 201:Core/Src/deca_device.c ****     uint8_t           *buffer,
 202:Core/Src/deca_device.c ****     const spi_modes_e mode
ARM GAS  /tmp/cctZ3fzX.s 			page 5


 203:Core/Src/deca_device.c **** )
 204:Core/Src/deca_device.c **** {
 205:Core/Src/deca_device.c ****     uint8_t  header[2];           // Buffer to compose header in
 206:Core/Src/deca_device.c ****     uint16_t cnt = 0;             // Counter for length of a header
 207:Core/Src/deca_device.c **** 
 208:Core/Src/deca_device.c ****     uint16_t reg_file     = 0x1F & ((regFileID + indx) >> 16);
 209:Core/Src/deca_device.c ****     uint16_t reg_offset   = 0x7F &  (regFileID + indx);
 210:Core/Src/deca_device.c **** 
 211:Core/Src/deca_device.c ****     assert(reg_file     <= 0x1F);
 212:Core/Src/deca_device.c ****     assert(reg_offset   <= 0x7F);
 213:Core/Src/deca_device.c ****     assert(length       < 0x3100);
 214:Core/Src/deca_device.c ****     assert(mode == DW3000_SPI_WR_BIT ||\
 215:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 216:Core/Src/deca_device.c ****            mode == DW3000_SPI_AND_OR_8 ||\
 217:Core/Src/deca_device.c ****            mode == DW3000_SPI_AND_OR_16 ||\
 218:Core/Src/deca_device.c ****            mode == DW3000_SPI_AND_OR_32);
 219:Core/Src/deca_device.c **** 
 220:Core/Src/deca_device.c ****     // Write message header selecting WRITE operation and addresses as appropriate
 221:Core/Src/deca_device.c ****     uint16_t  addr;
 222:Core/Src/deca_device.c ****     addr = (reg_file << 9) | (reg_offset << 2);
 223:Core/Src/deca_device.c **** 
 224:Core/Src/deca_device.c ****     header[0] = (uint8_t)((mode | addr) >> 8);//  & 0xFF; //bit7 + addr[4:0] + sub_addr[6:6]
 225:Core/Src/deca_device.c ****     header[1] = (uint8_t)(addr | (mode & 0x03));// & 0xFF; //EAM: subaddr[5:0]+ R/W/AND_OR
 226:Core/Src/deca_device.c **** 
 227:Core/Src/deca_device.c ****     if (/*reg_offset == 0 && */length == 0)
 228:Core/Src/deca_device.c ****     {   /* Fast Access Commands (FAC)
 229:Core/Src/deca_device.c ****          * only write operation is possible for this mode
 230:Core/Src/deca_device.c ****          * bit_7=one is W operation, bit_6=zero: FastAccess command, bit_[5..1] addr, bits_0=one: M
 231:Core/Src/deca_device.c ****          */
 232:Core/Src/deca_device.c ****         assert(mode == DW3000_SPI_WR_BIT);
 233:Core/Src/deca_device.c **** 
 234:Core/Src/deca_device.c ****         header[0] = (uint8_t)((DW3000_SPI_WR_BIT>>8) | (regFileID<<1) | DW3000_SPI_FAC);
 235:Core/Src/deca_device.c ****         cnt = 1;
 236:Core/Src/deca_device.c ****     }
 237:Core/Src/deca_device.c ****     else if (reg_offset == 0 /*&& length > 0*/ && (mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_
 238:Core/Src/deca_device.c ****     {   /* Fast Access Commands with Read/Write support (FACRW)
 239:Core/Src/deca_device.c ****          * bit_7 is R/W operation, bit_6=zero: FastAccess command, bit_[5..1] addr, bits_0=zero: MO
 240:Core/Src/deca_device.c ****          */
 241:Core/Src/deca_device.c ****         header[0] |= DW3000_SPI_FARW;
 242:Core/Src/deca_device.c ****         cnt = 1;
 243:Core/Src/deca_device.c ****     }
 244:Core/Src/deca_device.c ****     else
 245:Core/Src/deca_device.c ****     {   /* Extended Address Mode with Read/Write support (EAMRW)
 246:Core/Src/deca_device.c ****          * b[0] = bit_7 is R/W operation, bit_6 one = ExtendedAddressMode;
 247:Core/Src/deca_device.c ****          * b[1] = addr<<2 | (mode&0x3)
 248:Core/Src/deca_device.c ****          */
 249:Core/Src/deca_device.c ****         header[0] |= DW3000_SPI_EAMRW;
 250:Core/Src/deca_device.c ****         cnt = 2;
 251:Core/Src/deca_device.c ****     }
 252:Core/Src/deca_device.c **** 
 253:Core/Src/deca_device.c ****     switch (mode)
 254:Core/Src/deca_device.c ****     {
 255:Core/Src/deca_device.c ****     case    DW3000_SPI_AND_OR_8:
 256:Core/Src/deca_device.c ****     case    DW3000_SPI_AND_OR_16:
 257:Core/Src/deca_device.c ****     case    DW3000_SPI_AND_OR_32:
 258:Core/Src/deca_device.c ****     case    DW3000_SPI_WR_BIT:
 259:Core/Src/deca_device.c ****     {
ARM GAS  /tmp/cctZ3fzX.s 			page 6


 260:Core/Src/deca_device.c ****         uint8_t crc8 = 0;
 261:Core/Src/deca_device.c ****         if (pdw3000local->spicrc != DWT_SPI_CRC_MODE_NO)
 262:Core/Src/deca_device.c ****         {
 263:Core/Src/deca_device.c ****             //generate 8 bit CRC
 264:Core/Src/deca_device.c ****             crc8 = dwt_generatecrc8(header, cnt, 0);
 265:Core/Src/deca_device.c ****             crc8 = dwt_generatecrc8(buffer, length, crc8);
 266:Core/Src/deca_device.c **** 
 267:Core/Src/deca_device.c ****             // Write it to the SPI
 268:Core/Src/deca_device.c ****             writetospiwithcrc(cnt, header, length, buffer, crc8);
 269:Core/Src/deca_device.c ****         }
 270:Core/Src/deca_device.c ****         else
 271:Core/Src/deca_device.c ****         {
 272:Core/Src/deca_device.c ****             // Write it to the SPI
 273:Core/Src/deca_device.c ****             writetospi(cnt, header, length, buffer);
 274:Core/Src/deca_device.c ****         }
 275:Core/Src/deca_device.c ****         break;
 276:Core/Src/deca_device.c ****     }
 277:Core/Src/deca_device.c ****     case DW3000_SPI_RD_BIT:
 278:Core/Src/deca_device.c ****         {
 279:Core/Src/deca_device.c ****             readfromspi(cnt, header, length, buffer);
 280:Core/Src/deca_device.c **** 
 281:Core/Src/deca_device.c ****             //check that the SPI read has correct CRC-8 byte
 282:Core/Src/deca_device.c ****             //also don't do for SPICRC_CFG_ID register itself to prevent infinite recursion
 283:Core/Src/deca_device.c ****             if ((pdw3000local->spicrc == DWT_SPI_CRC_MODE_WRRD) && (regFileID != SPICRC_CFG_ID))
 284:Core/Src/deca_device.c ****             {
 285:Core/Src/deca_device.c ****                 uint8_t crc8, dwcrc8;
 286:Core/Src/deca_device.c ****                 //generate 8 bit CRC from the read data
 287:Core/Src/deca_device.c ****                 crc8 = dwt_generatecrc8(header, cnt, 0);
 288:Core/Src/deca_device.c ****                 crc8 = dwt_generatecrc8(buffer, length, crc8);
 289:Core/Src/deca_device.c **** 
 290:Core/Src/deca_device.c ****                 //read the CRC that was generated in the DW3000 for the read transaction
 291:Core/Src/deca_device.c ****                 dwcrc8 = dwt_read8bitoffsetreg(SPICRC_CFG_ID, 0);
 292:Core/Src/deca_device.c **** 
 293:Core/Src/deca_device.c ****                 //if the two CRC don't match report SPI read error
 294:Core/Src/deca_device.c ****                 //potential problem in callback if it will try to read/write SPI with CRC again.
 295:Core/Src/deca_device.c ****                 if (crc8 != dwcrc8)
 296:Core/Src/deca_device.c ****                 {
 297:Core/Src/deca_device.c ****                     if (pdw3000local->cbSPIRDErr != NULL)
 298:Core/Src/deca_device.c ****                         pdw3000local->cbSPIRDErr();
 299:Core/Src/deca_device.c ****                 }
 300:Core/Src/deca_device.c **** 
 301:Core/Src/deca_device.c ****             }
 302:Core/Src/deca_device.c ****             break;
 303:Core/Src/deca_device.c ****         }
 304:Core/Src/deca_device.c ****     default:
 305:Core/Src/deca_device.c ****         while(1);
 306:Core/Src/deca_device.c ****         break;
 307:Core/Src/deca_device.c ****     }
 308:Core/Src/deca_device.c **** 
 309:Core/Src/deca_device.c **** } // end dwt_xfer3000()
 310:Core/Src/deca_device.c **** 
 311:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 312:Core/Src/deca_device.c ****  * @brief  this function is used to write to the DW3000 device registers
 313:Core/Src/deca_device.c ****  *
 314:Core/Src/deca_device.c ****  * input parameters:
 315:Core/Src/deca_device.c ****  * @param recordNumber  - ID of register file or buffer being accessed
 316:Core/Src/deca_device.c ****  * @param index         - byte index into register file or buffer being accessed
ARM GAS  /tmp/cctZ3fzX.s 			page 7


 317:Core/Src/deca_device.c ****  * @param length        - number of bytes being written
 318:Core/Src/deca_device.c ****  * @param buffer        - pointer to buffer containing the 'length' bytes to be written
 319:Core/Src/deca_device.c ****  *
 320:Core/Src/deca_device.c ****  * output parameters
 321:Core/Src/deca_device.c ****  *
 322:Core/Src/deca_device.c ****  * no return value
 323:Core/Src/deca_device.c ****  */
 324:Core/Src/deca_device.c **** //static
 325:Core/Src/deca_device.c **** void dwt_writetodevice
 326:Core/Src/deca_device.c **** (
 327:Core/Src/deca_device.c ****     uint32_t      regFileID,
 328:Core/Src/deca_device.c ****     uint16_t      index,
 329:Core/Src/deca_device.c ****     uint16_t      length,
 330:Core/Src/deca_device.c ****     uint8_t       *buffer
 331:Core/Src/deca_device.c **** )
 332:Core/Src/deca_device.c **** {
 333:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_WR_BIT);
 334:Core/Src/deca_device.c **** }
 335:Core/Src/deca_device.c **** 
 336:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 337:Core/Src/deca_device.c ****  * @brief  This function wakeup device by an IO pin. DW3000 SPI_CS or WAKEUP pins can be used for t
 338:Core/Src/deca_device.c ****  *         wakeup_device_with_io() which is external to this file and is platform dependant and it 
 339:Core/Src/deca_device.c ****  *         toggle the correct pin depending on the HW/MCU connections with DW3000.
 340:Core/Src/deca_device.c ****  *
 341:Core/Src/deca_device.c ****  * @param None
 342:Core/Src/deca_device.c ****  *
 343:Core/Src/deca_device.c ****  * output parameters
 344:Core/Src/deca_device.c ****  *
 345:Core/Src/deca_device.c ****  * no return value
 346:Core/Src/deca_device.c ****  */
 347:Core/Src/deca_device.c **** void dwt_wakeup_ic(void)
 348:Core/Src/deca_device.c **** {
 349:Core/Src/deca_device.c ****     wakeup_device_with_io();
 350:Core/Src/deca_device.c **** }
 351:Core/Src/deca_device.c **** 
 352:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 353:Core/Src/deca_device.c ****  * @brief  this function is used to read from the DW3000 device registers
 354:Core/Src/deca_device.c ****  *
 355:Core/Src/deca_device.c ****  * @param recordNumber  - ID of register file or buffer being accessed
 356:Core/Src/deca_device.c ****  * @param index         - byte index into register file or buffer being accessed
 357:Core/Src/deca_device.c ****  * @param length        - number of bytes being read
 358:Core/Src/deca_device.c ****  * @param buffer        - pointer to buffer in which to return the read data.
 359:Core/Src/deca_device.c ****  *
 360:Core/Src/deca_device.c ****  * output parameters
 361:Core/Src/deca_device.c ****  *
 362:Core/Src/deca_device.c ****  * no return value
 363:Core/Src/deca_device.c ****  */
 364:Core/Src/deca_device.c **** //static
 365:Core/Src/deca_device.c **** void dwt_readfromdevice
 366:Core/Src/deca_device.c **** (
 367:Core/Src/deca_device.c ****     uint32_t  regFileID,
 368:Core/Src/deca_device.c ****     uint16_t  index,
 369:Core/Src/deca_device.c ****     uint16_t  length,
 370:Core/Src/deca_device.c ****     uint8_t   *buffer
 371:Core/Src/deca_device.c **** )
 372:Core/Src/deca_device.c **** {
 373:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_RD_BIT);
ARM GAS  /tmp/cctZ3fzX.s 			page 8


 374:Core/Src/deca_device.c **** }
 375:Core/Src/deca_device.c **** 
 376:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 377:Core/Src/deca_device.c ****  * @brief  this function is used to read 32-bit value from the DW3000 device registers
 378:Core/Src/deca_device.c ****  *
 379:Core/Src/deca_device.c ****  * input parameters:
 380:Core/Src/deca_device.c ****  * @param regFileID - ID of register file or buffer being accessed
 381:Core/Src/deca_device.c ****  * @param regOffset - the index into register file or buffer being accessed
 382:Core/Src/deca_device.c ****  *
 383:Core/Src/deca_device.c ****  * output parameters
 384:Core/Src/deca_device.c ****  *
 385:Core/Src/deca_device.c ****  * returns 32 bit register value
 386:Core/Src/deca_device.c ****  */
 387:Core/Src/deca_device.c **** uint32_t dwt_read32bitoffsetreg(int regFileID, int regOffset)
 388:Core/Src/deca_device.c **** {
 389:Core/Src/deca_device.c ****     int     j ;
 390:Core/Src/deca_device.c ****     uint32_t  regval = 0 ;
 391:Core/Src/deca_device.c ****     uint8_t   buffer[4] ;
 392:Core/Src/deca_device.c **** 
 393:Core/Src/deca_device.c ****     dwt_readfromdevice(regFileID,regOffset,4,buffer); // Read 4 bytes (32-bits) register into buffe
 394:Core/Src/deca_device.c **** 
 395:Core/Src/deca_device.c ****     for (j = 3 ; j >= 0 ; j --)
 396:Core/Src/deca_device.c ****     {
 397:Core/Src/deca_device.c ****         regval = (regval << 8) + buffer[j] ;
 398:Core/Src/deca_device.c ****     }
 399:Core/Src/deca_device.c **** 
 400:Core/Src/deca_device.c ****     return (regval);
 401:Core/Src/deca_device.c **** 
 402:Core/Src/deca_device.c **** } // end dwt_read32bitoffsetreg()
 403:Core/Src/deca_device.c **** 
 404:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 405:Core/Src/deca_device.c ****  * @brief  this function is used to read 16-bit value from the DW3000 device registers
 406:Core/Src/deca_device.c ****  *
 407:Core/Src/deca_device.c ****  * input parameters:
 408:Core/Src/deca_device.c ****  * @param regFileID - ID of register file or buffer being accessed
 409:Core/Src/deca_device.c ****  * @param regOffset - the index into register file or buffer being accessed
 410:Core/Src/deca_device.c ****  *
 411:Core/Src/deca_device.c ****  * output parameters
 412:Core/Src/deca_device.c ****  *
 413:Core/Src/deca_device.c ****  * returns 16 bit register value
 414:Core/Src/deca_device.c ****  */
 415:Core/Src/deca_device.c **** uint16_t dwt_read16bitoffsetreg(int regFileID,int regOffset)
 416:Core/Src/deca_device.c **** {
 417:Core/Src/deca_device.c ****     uint16_t  regval = 0 ;
 418:Core/Src/deca_device.c ****     uint8_t   buffer[2] ;
 419:Core/Src/deca_device.c **** 
 420:Core/Src/deca_device.c ****     dwt_readfromdevice(regFileID,regOffset,2,buffer); // Read 2 bytes (16-bits) register into buffe
 421:Core/Src/deca_device.c **** 
 422:Core/Src/deca_device.c ****     regval = ((uint16_t)buffer[1] << 8) + buffer[0] ;
 423:Core/Src/deca_device.c ****     return regval ;
 424:Core/Src/deca_device.c **** 
 425:Core/Src/deca_device.c **** } // end dwt_read16bitoffsetreg()
 426:Core/Src/deca_device.c **** 
 427:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 428:Core/Src/deca_device.c ****  * @brief  this function is used to read an 8-bit value from the DW3000 device registers
 429:Core/Src/deca_device.c ****  *
 430:Core/Src/deca_device.c ****  * input parameters:
ARM GAS  /tmp/cctZ3fzX.s 			page 9


 431:Core/Src/deca_device.c ****  * @param regFileID - ID of register file or buffer being accessed
 432:Core/Src/deca_device.c ****  * @param regOffset - the index into register file or buffer being accessed
 433:Core/Src/deca_device.c ****  *
 434:Core/Src/deca_device.c ****  * output parameters
 435:Core/Src/deca_device.c ****  *
 436:Core/Src/deca_device.c ****  * returns 8-bit register value
 437:Core/Src/deca_device.c ****  */
 438:Core/Src/deca_device.c **** uint8_t dwt_read8bitoffsetreg(int regFileID, int regOffset)
 439:Core/Src/deca_device.c **** {
 440:Core/Src/deca_device.c ****     uint8_t regval;
 441:Core/Src/deca_device.c **** 
 442:Core/Src/deca_device.c ****     dwt_readfromdevice(regFileID, regOffset, 1, &regval);
 443:Core/Src/deca_device.c **** 
 444:Core/Src/deca_device.c ****     return regval ;
 445:Core/Src/deca_device.c **** }
 446:Core/Src/deca_device.c **** 
 447:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 448:Core/Src/deca_device.c ****  * @brief  this function is used to write 32-bit value to the DW3000 device registers
 449:Core/Src/deca_device.c ****  *
 450:Core/Src/deca_device.c ****  * input parameters:
 451:Core/Src/deca_device.c ****  * @param regFileID - ID of register file or buffer being accessed
 452:Core/Src/deca_device.c ****  * @param regOffset - the index into register file or buffer being accessed
 453:Core/Src/deca_device.c ****  * @param regval    - the value to write
 454:Core/Src/deca_device.c ****  *
 455:Core/Src/deca_device.c ****  * output parameters
 456:Core/Src/deca_device.c ****  *
 457:Core/Src/deca_device.c ****  * no return value
 458:Core/Src/deca_device.c ****  */
 459:Core/Src/deca_device.c **** void dwt_write32bitoffsetreg(int regFileID, int regOffset, uint32_t regval)
 460:Core/Src/deca_device.c **** {
 461:Core/Src/deca_device.c ****     int     j ;
 462:Core/Src/deca_device.c ****     uint8_t   buffer[4] ;
 463:Core/Src/deca_device.c **** 
 464:Core/Src/deca_device.c ****     for ( j = 0 ; j < 4 ; j++ )
 465:Core/Src/deca_device.c ****     {
 466:Core/Src/deca_device.c ****         buffer[j] = (uint8_t)regval;
 467:Core/Src/deca_device.c ****         regval >>= 8 ;
 468:Core/Src/deca_device.c ****     }
 469:Core/Src/deca_device.c **** 
 470:Core/Src/deca_device.c ****     dwt_writetodevice(regFileID,regOffset,4,buffer);
 471:Core/Src/deca_device.c **** } // end dwt_write32bitoffsetreg()
 472:Core/Src/deca_device.c **** 
 473:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 474:Core/Src/deca_device.c ****  * @brief  this function is used to write 16-bit value to the DW3000 device registers
 475:Core/Src/deca_device.c ****  *
 476:Core/Src/deca_device.c ****  * input parameters:
 477:Core/Src/deca_device.c ****  * @param regFileID - ID of register file or buffer being accessed
 478:Core/Src/deca_device.c ****  * @param regOffset - the index into register file or buffer being accessed
 479:Core/Src/deca_device.c ****  * @param regval    - the value to write
 480:Core/Src/deca_device.c ****  *
 481:Core/Src/deca_device.c ****  * output parameters
 482:Core/Src/deca_device.c ****  *
 483:Core/Src/deca_device.c ****  * no return value
 484:Core/Src/deca_device.c ****  */
 485:Core/Src/deca_device.c **** void dwt_write16bitoffsetreg(int regFileID, int regOffset, uint16_t regval)
 486:Core/Src/deca_device.c **** {
 487:Core/Src/deca_device.c ****     uint8_t   buffer[2] ;
ARM GAS  /tmp/cctZ3fzX.s 			page 10


 488:Core/Src/deca_device.c **** 
 489:Core/Src/deca_device.c ****     buffer[0] = (uint8_t)regval;
 490:Core/Src/deca_device.c ****     buffer[1] = regval >> 8 ;
 491:Core/Src/deca_device.c **** 
 492:Core/Src/deca_device.c ****     dwt_writetodevice(regFileID,regOffset,2,buffer);
 493:Core/Src/deca_device.c **** } // end dwt_write16bitoffsetreg()
 494:Core/Src/deca_device.c **** 
 495:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 496:Core/Src/deca_device.c ****  * @brief  this function is used to write an 8-bit value to the DW3000 device registers
 497:Core/Src/deca_device.c ****  *
 498:Core/Src/deca_device.c ****  * input parameters:
 499:Core/Src/deca_device.c ****  * @param regFileID - ID of register file or buffer being accessed
 500:Core/Src/deca_device.c ****  * @param regOffset - the index into register file or buffer being accessed
 501:Core/Src/deca_device.c ****  * @param regval    - the value to write
 502:Core/Src/deca_device.c ****  *
 503:Core/Src/deca_device.c ****  * output parameters
 504:Core/Src/deca_device.c ****  *
 505:Core/Src/deca_device.c ****  * no return value
 506:Core/Src/deca_device.c ****  */
 507:Core/Src/deca_device.c **** void dwt_write8bitoffsetreg(int regFileID, int regOffset, uint8_t regval)
 508:Core/Src/deca_device.c **** {
 509:Core/Src/deca_device.c ****     //uint8_t   buf[1];
 510:Core/Src/deca_device.c ****     //buf[0] = regval;
 511:Core/Src/deca_device.c ****     dwt_writetodevice(regFileID, regOffset, 1, &regval);
 512:Core/Src/deca_device.c **** }
 513:Core/Src/deca_device.c **** 
 514:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 515:Core/Src/deca_device.c ****  * @brief  this function is used to modify a 32-bit value to the DW3000 device registers
 516:Core/Src/deca_device.c ****  *
 517:Core/Src/deca_device.c ****  * input parameters:
 518:Core/Src/deca_device.c ****  * @param regFileID :   ID of register file or buffer being accessed
 519:Core/Src/deca_device.c ****  * @param regOffset :   the index into register file or buffer being accessed
 520:Core/Src/deca_device.c ****  * @param regval_and:   the value to AND to register
 521:Core/Src/deca_device.c ****  * @param regval_or :   the value to OR to register
 522:Core/Src/deca_device.c ****  * @output          :   no return value
 523:Core/Src/deca_device.c ****  */
 524:Core/Src/deca_device.c **** void dwt_modify32bitoffsetreg(const int regFileID, const int regOffset, const uint32_t _and, const 
 525:Core/Src/deca_device.c **** {
 526:Core/Src/deca_device.c ****     uint8_t buf[8];
 527:Core/Src/deca_device.c ****     buf[0] = (uint8_t)_and;//       &0xFF;
 528:Core/Src/deca_device.c ****     buf[1] = (uint8_t)(_and>>8);//  &0xFF;
 529:Core/Src/deca_device.c ****     buf[2] = (uint8_t)(_and>>16);// &0xFF;
 530:Core/Src/deca_device.c ****     buf[3] = (uint8_t)(_and>>24);// &0xFF;
 531:Core/Src/deca_device.c ****     buf[4] = (uint8_t)_or;//        &0xFF;
 532:Core/Src/deca_device.c ****     buf[5] = (uint8_t)(_or>>8);//   &0xFF;
 533:Core/Src/deca_device.c ****     buf[6] = (uint8_t)(_or>>16);//  &0xFF;
 534:Core/Src/deca_device.c ****     buf[7] = (uint8_t)(_or>>24);//  &0xFF;
 535:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_32);
 536:Core/Src/deca_device.c **** }
 537:Core/Src/deca_device.c **** 
 538:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 539:Core/Src/deca_device.c ****  * @brief  this function is used to modify a 16-bit value to the DW3000 device registers
 540:Core/Src/deca_device.c ****  *
 541:Core/Src/deca_device.c ****  * input parameters:
 542:Core/Src/deca_device.c ****  * @param regFileID :   ID of register file or buffer being accessed
 543:Core/Src/deca_device.c ****  * @param regOffset :   the index into register file or buffer being accessed
 544:Core/Src/deca_device.c ****  * @param regval_and:   the value to AND to register
ARM GAS  /tmp/cctZ3fzX.s 			page 11


 545:Core/Src/deca_device.c ****  * @param regval_or :   the value to OR to register
 546:Core/Src/deca_device.c ****  * @output          :   no return value
 547:Core/Src/deca_device.c ****  */
 548:Core/Src/deca_device.c **** void dwt_modify16bitoffsetreg(const int regFileID, const int regOffset, const uint16_t _and, const 
 549:Core/Src/deca_device.c **** {
 550:Core/Src/deca_device.c ****     uint8_t buf[4];
 551:Core/Src/deca_device.c ****     buf[0] = (uint8_t)_and;//       &0xFF;
 552:Core/Src/deca_device.c ****     buf[1] = (uint8_t)(_and>>8);//  &0xFF;
 553:Core/Src/deca_device.c ****     buf[2] = (uint8_t)_or;//        &0xFF;
 554:Core/Src/deca_device.c ****     buf[3] = (uint8_t)(_or>>8);//   &0xFF;
 555:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_16);
 556:Core/Src/deca_device.c **** }
 557:Core/Src/deca_device.c **** 
 558:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 559:Core/Src/deca_device.c ****  * @brief  this function is used to modify a 8-bit value to the DW3000 device registers
 560:Core/Src/deca_device.c ****  *
 561:Core/Src/deca_device.c ****  * input parameters:
 562:Core/Src/deca_device.c ****  * @param regFileID :   ID of register file or buffer being accessed
 563:Core/Src/deca_device.c ****  * @param regOffset :   the index into register file or buffer being accessed
 564:Core/Src/deca_device.c ****  * @param regval_and:   the value to AND to register
 565:Core/Src/deca_device.c ****  * @param regval_or :   the value to OR to register
 566:Core/Src/deca_device.c ****  * @output          :   no return value
 567:Core/Src/deca_device.c ****  */
 568:Core/Src/deca_device.c **** void dwt_modify8bitoffsetreg(const int regFileID, const int regOffset, const uint8_t _and, const ui
 569:Core/Src/deca_device.c **** {
 570:Core/Src/deca_device.c ****     uint8_t buf[2];
 571:Core/Src/deca_device.c ****     buf[0] = _and;
 572:Core/Src/deca_device.c ****     buf[1] = _or;
 573:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf),buf, DW3000_SPI_AND_OR_8);
 574:Core/Src/deca_device.c **** }
 575:Core/Src/deca_device.c **** 
 576:Core/Src/deca_device.c **** static
 577:Core/Src/deca_device.c **** void _dwt_crc8init(void)
 578:Core/Src/deca_device.c **** {
  28              		.loc 1 578 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 579:Core/Src/deca_device.c ****     uint8_t  remainder;
  33              		.loc 1 579 5 view .LVU1
 580:Core/Src/deca_device.c ****     int dividend;
  34              		.loc 1 580 5 view .LVU2
 581:Core/Src/deca_device.c **** 
 582:Core/Src/deca_device.c ****     /*
 583:Core/Src/deca_device.c ****     * Compute the remainder of each possible dividend.
 584:Core/Src/deca_device.c ****     */
 585:Core/Src/deca_device.c ****     for (dividend = 0; dividend < 256; ++dividend)
  35              		.loc 1 585 5 view .LVU3
  36              	.LVL0:
  37              		.loc 1 585 19 is_stmt 0 view .LVU4
  38 0000 0021     		movs	r1, #0
  39              		.loc 1 585 5 view .LVU5
  40 0002 0FE0     		b	.L2
  41              	.LVL1:
  42              	.L4:
  43              	.LBB2:
ARM GAS  /tmp/cctZ3fzX.s 			page 12


 586:Core/Src/deca_device.c ****     {
 587:Core/Src/deca_device.c ****         /*
 588:Core/Src/deca_device.c ****         * Start with the dividend followed by zeros.
 589:Core/Src/deca_device.c ****         */
 590:Core/Src/deca_device.c ****         remainder = dividend;
 591:Core/Src/deca_device.c **** 
 592:Core/Src/deca_device.c ****         /*
 593:Core/Src/deca_device.c ****         * Perform modulo-2 division, a bit at a time.
 594:Core/Src/deca_device.c ****         */
 595:Core/Src/deca_device.c ****         for (uint8_t bit = 8; bit > 0; --bit)
 596:Core/Src/deca_device.c ****         {
 597:Core/Src/deca_device.c ****             /*
 598:Core/Src/deca_device.c ****             * Try to divide the current data bit.
 599:Core/Src/deca_device.c ****             */
 600:Core/Src/deca_device.c ****             if (remainder & TOPBIT)
 601:Core/Src/deca_device.c ****             {
 602:Core/Src/deca_device.c ****                 remainder = (remainder << 1) ^ POLYNOMIAL;
 603:Core/Src/deca_device.c ****             }
 604:Core/Src/deca_device.c ****             else
 605:Core/Src/deca_device.c ****             {
 606:Core/Src/deca_device.c ****                 remainder = (remainder << 1);
  44              		.loc 1 606 17 is_stmt 1 view .LVU6
  45              		.loc 1 606 27 is_stmt 0 view .LVU7
  46 0004 5B00     		lsls	r3, r3, #1
  47              	.LVL2:
  48              		.loc 1 606 27 view .LVU8
  49 0006 DBB2     		uxtb	r3, r3
  50              	.LVL3:
  51              	.L5:
 595:Core/Src/deca_device.c ****         {
  52              		.loc 1 595 40 is_stmt 1 discriminator 2 view .LVU9
  53 0008 013A     		subs	r2, r2, #1
  54              	.LVL4:
 595:Core/Src/deca_device.c ****         {
  55              		.loc 1 595 40 is_stmt 0 discriminator 2 view .LVU10
  56 000a D2B2     		uxtb	r2, r2
  57              	.LVL5:
  58              	.L3:
 595:Core/Src/deca_device.c ****         {
  59              		.loc 1 595 31 is_stmt 1 discriminator 1 view .LVU11
 595:Core/Src/deca_device.c ****         {
  60              		.loc 1 595 9 is_stmt 0 discriminator 1 view .LVU12
  61 000c 3AB1     		cbz	r2, .L8
 600:Core/Src/deca_device.c ****             {
  62              		.loc 1 600 13 is_stmt 1 view .LVU13
 600:Core/Src/deca_device.c ****             {
  63              		.loc 1 600 16 is_stmt 0 view .LVU14
  64 000e 13F0800F 		tst	r3, #128
  65 0012 F7D0     		beq	.L4
 602:Core/Src/deca_device.c ****             }
  66              		.loc 1 602 17 is_stmt 1 view .LVU15
 602:Core/Src/deca_device.c ****             }
  67              		.loc 1 602 40 is_stmt 0 view .LVU16
  68 0014 5B00     		lsls	r3, r3, #1
  69              	.LVL6:
 602:Core/Src/deca_device.c ****             }
  70              		.loc 1 602 46 view .LVU17
ARM GAS  /tmp/cctZ3fzX.s 			page 13


  71 0016 83F00703 		eor	r3, r3, #7
 602:Core/Src/deca_device.c ****             }
  72              		.loc 1 602 27 view .LVU18
  73 001a DBB2     		uxtb	r3, r3
  74              	.LVL7:
 602:Core/Src/deca_device.c ****             }
  75              		.loc 1 602 27 view .LVU19
  76 001c F4E7     		b	.L5
  77              	.L8:
 602:Core/Src/deca_device.c ****             }
  78              		.loc 1 602 27 view .LVU20
  79              	.LBE2:
 607:Core/Src/deca_device.c ****             }
 608:Core/Src/deca_device.c ****         }
 609:Core/Src/deca_device.c **** 
 610:Core/Src/deca_device.c ****         /*
 611:Core/Src/deca_device.c ****         * Store the result into the table.
 612:Core/Src/deca_device.c ****         */
 613:Core/Src/deca_device.c ****         crcTable[dividend] = remainder;
  80              		.loc 1 613 9 is_stmt 1 discriminator 2 view .LVU21
  81              		.loc 1 613 28 is_stmt 0 discriminator 2 view .LVU22
  82 001e 044A     		ldr	r2, .L10
  83              	.LVL8:
  84              		.loc 1 613 28 discriminator 2 view .LVU23
  85 0020 5354     		strb	r3, [r2, r1]
 585:Core/Src/deca_device.c ****     {
  86              		.loc 1 585 40 is_stmt 1 discriminator 2 view .LVU24
  87 0022 0131     		adds	r1, r1, #1
  88              	.LVL9:
  89              	.L2:
 585:Core/Src/deca_device.c ****     {
  90              		.loc 1 585 24 discriminator 1 view .LVU25
 585:Core/Src/deca_device.c ****     {
  91              		.loc 1 585 5 is_stmt 0 discriminator 1 view .LVU26
  92 0024 FF29     		cmp	r1, #255
  93 0026 02DC     		bgt	.L9
 590:Core/Src/deca_device.c **** 
  94              		.loc 1 590 9 is_stmt 1 view .LVU27
 590:Core/Src/deca_device.c **** 
  95              		.loc 1 590 19 is_stmt 0 view .LVU28
  96 0028 CBB2     		uxtb	r3, r1
  97              	.LVL10:
 595:Core/Src/deca_device.c ****         {
  98              		.loc 1 595 9 is_stmt 1 view .LVU29
  99              	.LBB3:
 595:Core/Src/deca_device.c ****         {
 100              		.loc 1 595 14 view .LVU30
 595:Core/Src/deca_device.c ****         {
 101              		.loc 1 595 22 is_stmt 0 view .LVU31
 102 002a 0822     		movs	r2, #8
 595:Core/Src/deca_device.c ****         {
 103              		.loc 1 595 9 view .LVU32
 104 002c EEE7     		b	.L3
 105              	.LVL11:
 106              	.L9:
 595:Core/Src/deca_device.c ****         {
 107              		.loc 1 595 9 view .LVU33
ARM GAS  /tmp/cctZ3fzX.s 			page 14


 108              	.LBE3:
 614:Core/Src/deca_device.c ****     }
 615:Core/Src/deca_device.c **** 
 616:Core/Src/deca_device.c **** }   /* _dwt_crc8init() */
 109              		.loc 1 616 1 view .LVU34
 110 002e 7047     		bx	lr
 111              	.L11:
 112              		.align	2
 113              	.L10:
 114 0030 00000000 		.word	.LANCHOR0
 115              		.cfi_endproc
 116              	.LFE15:
 118              		.section	.text.get_sts_mnth,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv4-sp-d16
 125              	get_sts_mnth:
 126              	.LVL12:
 127              	.LFB37:
 617:Core/Src/deca_device.c **** 
 618:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 619:Core/Src/deca_device.c **** * @brief  this function is used to calculate 8-bit CRC, it uses 100000111 polynomial (i.e. P(x) = x
 620:Core/Src/deca_device.c **** * this function has been optimized to use crcTable[] and calculate the CRC on byte by byte basis.
 621:Core/Src/deca_device.c **** *
 622:Core/Src/deca_device.c **** * input parameters:
 623:Core/Src/deca_device.c **** * @param byteArray         - data to calculate CRC for
 624:Core/Src/deca_device.c **** * @param len               - length of byteArray
 625:Core/Src/deca_device.c **** * @param crcRemainderInit  - the remainder is the crc, also it is initially set to the initialisati
 626:Core/Src/deca_device.c **** *
 627:Core/Src/deca_device.c **** * output parameters
 628:Core/Src/deca_device.c **** *
 629:Core/Src/deca_device.c **** * returns 8-bit calculate CRC value
 630:Core/Src/deca_device.c **** */
 631:Core/Src/deca_device.c **** uint8_t dwt_generatecrc8(const uint8_t* byteArray, int len, uint8_t crcRemainderInit)
 632:Core/Src/deca_device.c **** {
 633:Core/Src/deca_device.c ****     uint8_t data;
 634:Core/Src/deca_device.c ****     int byte;
 635:Core/Src/deca_device.c **** 
 636:Core/Src/deca_device.c ****     /*
 637:Core/Src/deca_device.c ****     * Divide the message by the polynomial, a byte at a time.
 638:Core/Src/deca_device.c ****     */
 639:Core/Src/deca_device.c ****     for (byte = 0; byte < len; ++byte)
 640:Core/Src/deca_device.c ****     {
 641:Core/Src/deca_device.c ****         data = byteArray[byte] ^ crcRemainderInit;
 642:Core/Src/deca_device.c ****         crcRemainderInit = crcTable[data];// ^ (crcRemainderInit << 8);
 643:Core/Src/deca_device.c ****     }
 644:Core/Src/deca_device.c **** 
 645:Core/Src/deca_device.c ****     /*
 646:Core/Src/deca_device.c ****     * The final remainder is the CRC.
 647:Core/Src/deca_device.c ****     */
 648:Core/Src/deca_device.c ****     return(crcRemainderInit);
 649:Core/Src/deca_device.c **** }
 650:Core/Src/deca_device.c **** 
 651:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 652:Core/Src/deca_device.c **** * @brief This is used to enable SPI CRC check in DW3000
ARM GAS  /tmp/cctZ3fzX.s 			page 15


 653:Core/Src/deca_device.c **** *
 654:Core/Src/deca_device.c **** * input parameters
 655:Core/Src/deca_device.c **** * @param crc_mode - if set to DWT_SPI_CRC_MODE_WR then SPI CRC checking will be performed in DW3000
 656:Core/Src/deca_device.c **** *                   last byte of the SPI write transaction needs to be the 8-bit CRC, if it does no
 657:Core/Src/deca_device.c **** *                   the one calculated by DW3000 SPI CRC ERROR event will be set in the status regi
 658:Core/Src/deca_device.c **** *
 659:Core/Src/deca_device.c **** * @param spireaderr_cb - this needs to contain the callback function pointer which will be called w
 660:Core/Src/deca_device.c **** *                        is detected (when the DW3000 generated CRC does not match the one calculat
 661:Core/Src/deca_device.c **** *                        following the SPI read transaction)
 662:Core/Src/deca_device.c **** *
 663:Core/Src/deca_device.c **** * output parameters
 664:Core/Src/deca_device.c **** *
 665:Core/Src/deca_device.c **** * no return value
 666:Core/Src/deca_device.c **** */
 667:Core/Src/deca_device.c **** void dwt_enablespicrccheck(dwt_spi_crc_mode_e crc_mode, dwt_spierrcb_t spireaderr_cb)
 668:Core/Src/deca_device.c **** {
 669:Core/Src/deca_device.c ****     if (crc_mode != DWT_SPI_CRC_MODE_NO) //enable CRC check in DW3000
 670:Core/Src/deca_device.c ****     {
 671:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(SYS_CFG_ID, 0, SYS_CFG_SPI_CRC_BIT_MASK);
 672:Core/Src/deca_device.c **** 
 673:Core/Src/deca_device.c ****         if (crc_mode == DWT_SPI_CRC_MODE_WRRD) //enable CRC generation on SPI read transaction whic
 674:Core/Src/deca_device.c ****         {
 675:Core/Src/deca_device.c ****             pdw3000local->cbSPIRDErr = spireaderr_cb;
 676:Core/Src/deca_device.c ****         }
 677:Core/Src/deca_device.c ****         //initialise the crc calculation lookup table
 678:Core/Src/deca_device.c ****         _dwt_crc8init();
 679:Core/Src/deca_device.c ****     }
 680:Core/Src/deca_device.c ****     else
 681:Core/Src/deca_device.c ****     {
 682:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(SYS_CFG_ID, 0, (uint8_t)~SYS_CFG_SPI_CRC_BIT_MASK);
 683:Core/Src/deca_device.c ****     }
 684:Core/Src/deca_device.c ****     pdw3000local->spicrc = crc_mode;
 685:Core/Src/deca_device.c **** }
 686:Core/Src/deca_device.c **** 
 687:Core/Src/deca_device.c **** static
 688:Core/Src/deca_device.c **** void _dwt_prog_ldo_and_bias_tune(void)
 689:Core/Src/deca_device.c **** {
 690:Core/Src/deca_device.c ****     dwt_or16bitoffsetreg(OTP_CFG_ID, 0, LDO_BIAS_KICK);
 691:Core/Src/deca_device.c ****     dwt_and_or16bitoffsetreg(BIAS_CTRL_ID, 0, (uint16_t)~BIAS_CTRL_BIAS_MASK, pdw3000local->bias_tu
 692:Core/Src/deca_device.c **** }
 693:Core/Src/deca_device.c **** 
 694:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 695:Core/Src/deca_device.c **** * @brief This function is a static function used to 'kick' the desired operating parameter set (OPS
 696:Core/Src/deca_device.c **** *        It will load the required OPS table configuration based upon what OPS table was set to be 
 697:Core/Src/deca_device.c **** *
 698:Core/Src/deca_device.c **** * input parameters
 699:Core/Src/deca_device.c **** *
 700:Core/Src/deca_device.c **** * output parameters
 701:Core/Src/deca_device.c **** *
 702:Core/Src/deca_device.c **** * no return value
 703:Core/Src/deca_device.c **** */
 704:Core/Src/deca_device.c **** static
 705:Core/Src/deca_device.c **** void _dwt_kick_ops_table_on_wakeup(void)
 706:Core/Src/deca_device.c **** {
 707:Core/Src/deca_device.c ****     /* Restore OPS table config and kick. */
 708:Core/Src/deca_device.c ****     /* Correct sleep mode should be set by dwt_configure() */
 709:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 16


 710:Core/Src/deca_device.c ****     /* Using the mask of all available OPS table options, check for OPS table options in the sleep 
 711:Core/Src/deca_device.c ****     switch (pdw3000local->sleep_mode & (DWT_ALT_OPS | DWT_SEL_OPS0 | DWT_SEL_OPS1 | DWT_SEL_OPS2 | 
 712:Core/Src/deca_device.c ****     {
 713:Core/Src/deca_device.c ****     /* If preamble length >= 256 and set by dwt_configure(), the OPS table should be kicked off lik
 714:Core/Src/deca_device.c ****     case (DWT_ALT_OPS | DWT_SEL_OPS0):
 715:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_LONG | OTP_CF
 716:Core/Src/deca_device.c ****         break;
 717:Core/Src/deca_device.c ****     /* If SCP mode is enabled by dwt_configure(), the OPS table should be kicked off like so upon w
 718:Core/Src/deca_device.c ****     case (DWT_ALT_OPS | DWT_SEL_OPS1):
 719:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_SCP | OTP_CFG
 720:Core/Src/deca_device.c ****         break;
 721:Core/Src/deca_device.c ****     default:
 722:Core/Src/deca_device.c ****         break;
 723:Core/Src/deca_device.c ****     }
 724:Core/Src/deca_device.c **** }
 725:Core/Src/deca_device.c **** 
 726:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 727:Core/Src/deca_device.c **** * @brief This function is a static function used to 'kick' the DGC upon wakeup from sleep. It will 
 728:Core/Src/deca_device.c **** *        required DGC configuration from OTP based upon what channel was set to be used in dwt_conf
 729:Core/Src/deca_device.c **** *
 730:Core/Src/deca_device.c **** * input parameters
 731:Core/Src/deca_device.c **** * @param channel - specifies the operating channel (e.g. 5 or 9)
 732:Core/Src/deca_device.c **** *
 733:Core/Src/deca_device.c **** * output parameters
 734:Core/Src/deca_device.c **** *
 735:Core/Src/deca_device.c **** * no return value
 736:Core/Src/deca_device.c **** */
 737:Core/Src/deca_device.c **** static
 738:Core/Src/deca_device.c **** void _dwt_kick_dgc_on_wakeup(int8_t channel)
 739:Core/Src/deca_device.c **** {
 740:Core/Src/deca_device.c ****     /* The DGC_SEL bit must be set to '0' for channel 5 and '1' for channel 9 */
 741:Core/Src/deca_device.c ****     if (channel == 5)
 742:Core/Src/deca_device.c ****     {
 743:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_DGC_SEL_BIT_MASK),
 744:Core/Src/deca_device.c ****                 (DWT_DGC_SEL_CH5 << OTP_CFG_DGC_SEL_BIT_OFFSET) | OTP_CFG_DGC_KICK_BIT_MASK);
 745:Core/Src/deca_device.c ****     }
 746:Core/Src/deca_device.c ****     else if (channel == 9)
 747:Core/Src/deca_device.c ****     {
 748:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_DGC_SEL_BIT_MASK),
 749:Core/Src/deca_device.c ****                 (DWT_DGC_SEL_CH9 << OTP_CFG_DGC_SEL_BIT_OFFSET) | OTP_CFG_DGC_KICK_BIT_MASK);
 750:Core/Src/deca_device.c ****     }
 751:Core/Src/deca_device.c **** }
 752:Core/Src/deca_device.c **** 
 753:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 754:Core/Src/deca_device.c ****  * @brief This function initialises the DW3000 transceiver:
 755:Core/Src/deca_device.c ****  * it reads its DEV_ID register (address 0x00) to verify the IC is one supported
 756:Core/Src/deca_device.c ****  * by this software (e.g. DW3000 32-bit device ID value is 0xDECA03xx).  Then it
 757:Core/Src/deca_device.c ****  * does any initial once only device configurations needed for use and initialises
 758:Core/Src/deca_device.c ****  * as necessary any static data items belonging to this low-level driver.
 759:Core/Src/deca_device.c ****  *
 760:Core/Src/deca_device.c ****  * NOTES:
 761:Core/Src/deca_device.c ****  * 1.it also reads and applies LDO and BIAS tune and crystal trim values from OTP memory
 762:Core/Src/deca_device.c ****  * 2.it is assumed this function is called after a reset or on power up of the DW3000
 763:Core/Src/deca_device.c ****  *
 764:Core/Src/deca_device.c ****  * input parameters
 765:Core/Src/deca_device.c ****  * @param mode - mask which defines which OTP values to read.
 766:Core/Src/deca_device.c ****  *
ARM GAS  /tmp/cctZ3fzX.s 			page 17


 767:Core/Src/deca_device.c ****  * output parameters
 768:Core/Src/deca_device.c ****  *
 769:Core/Src/deca_device.c ****  * returns DWT_SUCCESS for success, or DWT_ERROR for error
 770:Core/Src/deca_device.c ****  */
 771:Core/Src/deca_device.c **** int dwt_initialise(int mode)
 772:Core/Src/deca_device.c **** {
 773:Core/Src/deca_device.c ****    //uint16_t otp_addr;
 774:Core/Src/deca_device.c ****    //uint32_t devid;
 775:Core/Src/deca_device.c ****     uint32_t ldo_tune_lo;
 776:Core/Src/deca_device.c ****     uint32_t ldo_tune_hi;
 777:Core/Src/deca_device.c **** 
 778:Core/Src/deca_device.c ****     pdw3000local->dblbuffon = DBL_BUFF_OFF; // Double buffer mode off by default / clear the flag
 779:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = DWT_RUNSAR;  // Configure RUN_SAR on wake by default as it is needed
 780:Core/Src/deca_device.c ****     pdw3000local->spicrc = 0;
 781:Core/Src/deca_device.c ****     pdw3000local->stsconfig = 0; //STS off
 782:Core/Src/deca_device.c ****     pdw3000local->vBatP = 0;
 783:Core/Src/deca_device.c ****     pdw3000local->tempP = 0;
 784:Core/Src/deca_device.c **** 
 785:Core/Src/deca_device.c ****     pdw3000local->cbTxDone = NULL;
 786:Core/Src/deca_device.c ****     pdw3000local->cbRxOk = NULL;
 787:Core/Src/deca_device.c ****     pdw3000local->cbRxTo = NULL;
 788:Core/Src/deca_device.c ****     pdw3000local->cbRxErr = NULL;
 789:Core/Src/deca_device.c ****     pdw3000local->cbSPIRdy = NULL;
 790:Core/Src/deca_device.c ****     pdw3000local->cbSPIErr = NULL;
 791:Core/Src/deca_device.c **** 
 792:Core/Src/deca_device.c ****     // Read and validate device ID return -1 if not recognised
 793:Core/Src/deca_device.c ****     if (dwt_check_dev_id()!=DWT_SUCCESS)
 794:Core/Src/deca_device.c ****     {
 795:Core/Src/deca_device.c ****         return DWT_ERROR;
 796:Core/Src/deca_device.c ****     }
 797:Core/Src/deca_device.c **** 
 798:Core/Src/deca_device.c ****     //Read LDO_TUNE and BIAS_TUNE from OTP
 799:Core/Src/deca_device.c ****     ldo_tune_lo = _dwt_otpread(LDOTUNELO_ADDRESS);
 800:Core/Src/deca_device.c ****     ldo_tune_hi = _dwt_otpread(LDOTUNEHI_ADDRESS);
 801:Core/Src/deca_device.c ****     pdw3000local->bias_tune = (_dwt_otpread(BIAS_TUNE_ADDRESS) >> 16) & BIAS_CTRL_BIAS_MASK;
 802:Core/Src/deca_device.c **** 
 803:Core/Src/deca_device.c ****     if ((ldo_tune_lo != 0) && (ldo_tune_hi != 0) && (pdw3000local->bias_tune != 0))
 804:Core/Src/deca_device.c ****     {
 805:Core/Src/deca_device.c ****         _dwt_prog_ldo_and_bias_tune();
 806:Core/Src/deca_device.c ****     }
 807:Core/Src/deca_device.c **** 
 808:Core/Src/deca_device.c ****     // Read DGC_CFG from OTP
 809:Core/Src/deca_device.c ****     if (_dwt_otpread(DGC_TUNE_ADDRESS) == DWT_DGC_CFG0)
 810:Core/Src/deca_device.c ****     {
 811:Core/Src/deca_device.c ****         pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_OTP;
 812:Core/Src/deca_device.c ****     }
 813:Core/Src/deca_device.c ****     else
 814:Core/Src/deca_device.c ****     {
 815:Core/Src/deca_device.c ****         pdw3000local->dgc_otp_set = DWT_DGC_LOAD_FROM_SW;
 816:Core/Src/deca_device.c ****     }
 817:Core/Src/deca_device.c **** 
 818:Core/Src/deca_device.c ****     // Load Part and Lot ID from OTP
 819:Core/Src/deca_device.c ****     if(mode & DWT_READ_OTP_PID)
 820:Core/Src/deca_device.c ****         pdw3000local->partID = _dwt_otpread(PARTID_ADDRESS);
 821:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_LID)
 822:Core/Src/deca_device.c ****         pdw3000local->lotID = _dwt_otpread(LOTID_ADDRESS);
 823:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_BAT)
ARM GAS  /tmp/cctZ3fzX.s 			page 18


 824:Core/Src/deca_device.c ****         pdw3000local->vBatP = (uint8_t)_dwt_otpread(VBAT_ADDRESS);
 825:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_TMP)
 826:Core/Src/deca_device.c ****         pdw3000local->tempP = (uint8_t)_dwt_otpread(VTEMP_ADDRESS);
 827:Core/Src/deca_device.c **** 
 828:Core/Src/deca_device.c **** 
 829:Core/Src/deca_device.c ****     if(pdw3000local->tempP == 0) //if the reference temperature has not been programmed in OTP (ear
 830:Core/Src/deca_device.c ****     {
 831:Core/Src/deca_device.c ****         pdw3000local->tempP = 0x85 ; //@temp of 20 deg
 832:Core/Src/deca_device.c ****     }
 833:Core/Src/deca_device.c **** 
 834:Core/Src/deca_device.c ****     if(pdw3000local->vBatP == 0) //if the reference voltage has not been programmed in OTP (early e
 835:Core/Src/deca_device.c ****     {
 836:Core/Src/deca_device.c ****         pdw3000local->vBatP = 0x74 ;  //@Vref of 3.0V
 837:Core/Src/deca_device.c ****     }
 838:Core/Src/deca_device.c **** 
 839:Core/Src/deca_device.c ****     pdw3000local->otprev = (uint8_t) _dwt_otpread(OTPREV_ADDRESS);
 840:Core/Src/deca_device.c **** 
 841:Core/Src/deca_device.c ****     pdw3000local->init_xtrim = _dwt_otpread(XTRIM_ADDRESS) & 0x7f;
 842:Core/Src/deca_device.c ****     if(pdw3000local->init_xtrim == 0)
 843:Core/Src/deca_device.c ****     {
 844:Core/Src/deca_device.c ****         pdw3000local->init_xtrim = 0x2E ; //set default value
 845:Core/Src/deca_device.c ****     }
 846:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(XTAL_ID, 0, pdw3000local->init_xtrim);
 847:Core/Src/deca_device.c **** 
 848:Core/Src/deca_device.c **** 
 849:Core/Src/deca_device.c ****     return DWT_SUCCESS ;
 850:Core/Src/deca_device.c **** 
 851:Core/Src/deca_device.c **** } // end dwt_initialise()
 852:Core/Src/deca_device.c **** 
 853:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 854:Core/Src/deca_device.c ****  * @brief This function can place DW3000 into IDLE/IDLE_PLL or IDLE_RC mode when it is not actively
 855:Core/Src/deca_device.c ****  *
 856:Core/Src/deca_device.c ****  * input parameters
 857:Core/Src/deca_device.c ****  * @param state - DWT_DW_IDLE (1) to put DW3000 into IDLE/IDLE_PLL state; DWT_DW_INIT (0) to put DW
 858:Core/Src/deca_device.c ****  *                DWT_DW_IDLE_RC (2) to put DW3000 into IDLE_RC state.
 859:Core/Src/deca_device.c ****  *
 860:Core/Src/deca_device.c ****  * output parameters none
 861:Core/Src/deca_device.c ****  *
 862:Core/Src/deca_device.c ****  * no return value
 863:Core/Src/deca_device.c ****  */
 864:Core/Src/deca_device.c **** void dwt_setdwstate(int state)
 865:Core/Src/deca_device.c **** {
 866:Core/Src/deca_device.c ****     if (state == DWT_DW_IDLE) // Set the auto INIT2IDLE bit so that DW3000 enters IDLE mode before 
 867:Core/Src/deca_device.c ****     //NOTE: PLL should be configured prior to this, and the device should be in IDLE_RC (if the PLL
 868:Core/Src/deca_device.c ****     {
 869:Core/Src/deca_device.c ****         //switch clock to auto - if coming here from INIT_RC the clock will be FOSC/4, need to swit
 870:Core/Src/deca_device.c ****         dwt_force_clocks(FORCE_CLK_AUTO);
 871:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(SEQ_CTRL_ID, 0x01, SEQ_CTRL_AINIT2IDLE_BIT_MASK>>8);
 872:Core/Src/deca_device.c ****     }
 873:Core/Src/deca_device.c ****     else if(state == DWT_DW_IDLE_RC)  //Change state to IDLE_RC and clear auto INIT2IDLE bit
 874:Core/Src/deca_device.c ****     {
 875:Core/Src/deca_device.c ****         //switch clock to FOSC
 876:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(CLK_CTRL_ID, 0, FORCE_SYSCLK_FOSC);
 877:Core/Src/deca_device.c ****         //clear the auto INIT2IDLE bit and set FORCE2INIT
 878:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(SEQ_CTRL_ID, 0x0, (uint32_t) ~SEQ_CTRL_AINIT2IDLE_BIT_MASK, SEQ_CT
 879:Core/Src/deca_device.c ****         //clear force bits (device will stay in IDLE_RC)
 880:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(SEQ_CTRL_ID, 0x2, (uint8_t) ~(SEQ_CTRL_FORCE2INIT_BIT_MASK>>16));
ARM GAS  /tmp/cctZ3fzX.s 			page 19


 881:Core/Src/deca_device.c ****         //switch clock to auto
 882:Core/Src/deca_device.c ****         dwt_force_clocks(FORCE_CLK_AUTO);
 883:Core/Src/deca_device.c ****     }
 884:Core/Src/deca_device.c ****     else
 885:Core/Src/deca_device.c ****     //NOTE: the SPI rate needs to be <= 7MHz as device is switching to INIT_RC state
 886:Core/Src/deca_device.c ****     {
 887:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(CLK_CTRL_ID, 0, FORCE_SYSCLK_FOSCDIV4);
 888:Core/Src/deca_device.c ****         //clear the auto INIT2IDLE bit and set FORCE2INIT
 889:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(SEQ_CTRL_ID, 0x0, (uint32_t) ~SEQ_CTRL_AINIT2IDLE_BIT_MASK, SEQ_CT
 890:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(SEQ_CTRL_ID, 0x2, (uint8_t) ~(SEQ_CTRL_FORCE2INIT_BIT_MASK>>16));
 891:Core/Src/deca_device.c ****     }
 892:Core/Src/deca_device.c **** }
 893:Core/Src/deca_device.c **** 
 894:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 895:Core/Src/deca_device.c ****  * @brief This is used to enable GPIO clocks. The clocks are needed to ensure correct GPIO operatio
 896:Core/Src/deca_device.c ****  *
 897:Core/Src/deca_device.c ****  * input parameters
 898:Core/Src/deca_device.c ****  *
 899:Core/Src/deca_device.c ****  * output parameters
 900:Core/Src/deca_device.c ****  *
 901:Core/Src/deca_device.c ****  * no return value
 902:Core/Src/deca_device.c ****  */
 903:Core/Src/deca_device.c **** void dwt_enablegpioclocks(void)
 904:Core/Src/deca_device.c **** {
 905:Core/Src/deca_device.c ****     dwt_or32bitoffsetreg(CLK_CTRL_ID, 0, CLK_CTRL_GPIO_CLK_EN_BIT_MASK);
 906:Core/Src/deca_device.c **** }
 907:Core/Src/deca_device.c **** 
 908:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 909:Core/Src/deca_device.c ****  * @brief This is used to return the read OTP revision
 910:Core/Src/deca_device.c ****  *
 911:Core/Src/deca_device.c ****  * NOTE: dwt_initialise() must be called prior to this function so that it can return a relevant va
 912:Core/Src/deca_device.c ****  *
 913:Core/Src/deca_device.c ****  * input parameters
 914:Core/Src/deca_device.c ****  *
 915:Core/Src/deca_device.c ****  * output parameters
 916:Core/Src/deca_device.c ****  *
 917:Core/Src/deca_device.c ****  * returns the read OTP revision value
 918:Core/Src/deca_device.c ****  */
 919:Core/Src/deca_device.c **** uint8_t dwt_otprevision(void)
 920:Core/Src/deca_device.c **** {
 921:Core/Src/deca_device.c ****     return pdw3000local->otprev ;
 922:Core/Src/deca_device.c **** }
 923:Core/Src/deca_device.c **** 
 924:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 925:Core/Src/deca_device.c ****  * @brief This function enables/disables the fine grain TX sequencing (this is enabled by default i
 926:Core/Src/deca_device.c ****  *
 927:Core/Src/deca_device.c ****  * input parameters
 928:Core/Src/deca_device.c ****  * @param enable - 1 to enable fine grain TX sequencing, 0 to disable it.
 929:Core/Src/deca_device.c ****  *
 930:Core/Src/deca_device.c ****  * output parameters none
 931:Core/Src/deca_device.c ****  *
 932:Core/Src/deca_device.c ****  * no return value
 933:Core/Src/deca_device.c ****  */
 934:Core/Src/deca_device.c **** void dwt_setfinegraintxseq(int enable)
 935:Core/Src/deca_device.c **** {
 936:Core/Src/deca_device.c ****     if (enable)
 937:Core/Src/deca_device.c ****     {
ARM GAS  /tmp/cctZ3fzX.s 			page 20


 938:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(PWR_UP_TIMES_LO_ID, 2, PMSC_TXFINESEQ_ENABLE);
 939:Core/Src/deca_device.c ****     }
 940:Core/Src/deca_device.c ****     else
 941:Core/Src/deca_device.c ****     {
 942:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(PWR_UP_TIMES_LO_ID, 2, PMSC_TXFINESEQ_DISABLE);
 943:Core/Src/deca_device.c ****     }
 944:Core/Src/deca_device.c **** }
 945:Core/Src/deca_device.c **** 
 946:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 947:Core/Src/deca_device.c ****  * @brief This is used to enable GPIO for external LNA or PA functionality - HW dependent, consult 
 948:Core/Src/deca_device.c ****  *        This can also be used for debug as enabling TX and RX GPIOs is quite handy to monitor DW3
 949:Core/Src/deca_device.c ****  *
 950:Core/Src/deca_device.c ****  * NOTE: Enabling PA functionality requires that fine grain TX sequencing is deactivated. This can 
 951:Core/Src/deca_device.c ****  *       dwt_setfinegraintxseq().
 952:Core/Src/deca_device.c ****  *
 953:Core/Src/deca_device.c ****  * input parameters
 954:Core/Src/deca_device.c ****  * @param lna_pa - bit field: bit 0 if set will enable LNA functionality,
 955:Core/Src/deca_device.c ****  *                          : bit 1 if set will enable PA functionality,
 956:Core/Src/deca_device.c ****  *                          : to disable LNA/PA set the bits to 0
 957:Core/Src/deca_device.c ****  * output parameters
 958:Core/Src/deca_device.c ****  *
 959:Core/Src/deca_device.c ****  * no return value
 960:Core/Src/deca_device.c ****  */
 961:Core/Src/deca_device.c **** void dwt_setlnapamode(int lna_pa)
 962:Core/Src/deca_device.c **** {
 963:Core/Src/deca_device.c ****     uint32_t gpio_mode = dwt_read32bitreg(GPIO_MODE_ID);
 964:Core/Src/deca_device.c ****     gpio_mode &= (~(GPIO_MODE_MSGP0_MODE_BIT_MASK | GPIO_MODE_MSGP1_MODE_BIT_MASK
 965:Core/Src/deca_device.c ****             | GPIO_MODE_MSGP4_MODE_BIT_MASK | GPIO_MODE_MSGP5_MODE_BIT_MASK | GPIO_MODE_MSGP6_MODE_
 966:Core/Src/deca_device.c ****     if (lna_pa & DWT_LNA_ENABLE)
 967:Core/Src/deca_device.c ****     {
 968:Core/Src/deca_device.c ****         gpio_mode |= GPIO_PIN6_EXTRX;   
 969:Core/Src/deca_device.c ****     }
 970:Core/Src/deca_device.c ****     if (lna_pa & DWT_PA_ENABLE)
 971:Core/Src/deca_device.c ****     {
 972:Core/Src/deca_device.c ****         gpio_mode |= (GPIO_PIN4_EXTDA | GPIO_PIN5_EXTTX);
 973:Core/Src/deca_device.c ****     }
 974:Core/Src/deca_device.c ****     if (lna_pa & DWT_TXRX_EN)
 975:Core/Src/deca_device.c ****     {
 976:Core/Src/deca_device.c ****         gpio_mode |= (GPIO_PIN0_EXTTXE | GPIO_PIN1_EXTRXE);
 977:Core/Src/deca_device.c ****     }
 978:Core/Src/deca_device.c **** 
 979:Core/Src/deca_device.c ****     dwt_write32bitreg(GPIO_MODE_ID, gpio_mode);
 980:Core/Src/deca_device.c **** }
 981:Core/Src/deca_device.c **** 
 982:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 983:Core/Src/deca_device.c ****  * @brief Returns the PG delay value of the TX
 984:Core/Src/deca_device.c ****  *
 985:Core/Src/deca_device.c ****  * input parameters
 986:Core/Src/deca_device.c ****  *
 987:Core/Src/deca_device.c ****  * output parameters
 988:Core/Src/deca_device.c ****  *
 989:Core/Src/deca_device.c ****  * returns uint8_t
 990:Core/Src/deca_device.c ****  */
 991:Core/Src/deca_device.c **** uint8_t dwt_readpgdelay(void)
 992:Core/Src/deca_device.c **** {
 993:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(TX_CTRL_HI_ID, 0);
 994:Core/Src/deca_device.c **** }
ARM GAS  /tmp/cctZ3fzX.s 			page 21


 995:Core/Src/deca_device.c **** 
 996:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 997:Core/Src/deca_device.c ****  * @brief This is used to return the read V measured @ 3.3 V value recorded in OTP address 0x8 (VBA
 998:Core/Src/deca_device.c ****  *
 999:Core/Src/deca_device.c ****  * NOTE: dwt_initialise() must be called prior to this function so that it can return a relevant va
1000:Core/Src/deca_device.c ****  *
1001:Core/Src/deca_device.c ****  * input parameters
1002:Core/Src/deca_device.c ****  *
1003:Core/Src/deca_device.c ****  * output parameters
1004:Core/Src/deca_device.c ****  *
1005:Core/Src/deca_device.c ****  * returns the 8 bit V bat value as programmed in the factory
1006:Core/Src/deca_device.c ****  */
1007:Core/Src/deca_device.c **** uint8_t dwt_geticrefvolt(void)
1008:Core/Src/deca_device.c **** {
1009:Core/Src/deca_device.c ****     return pdw3000local->vBatP;
1010:Core/Src/deca_device.c **** }
1011:Core/Src/deca_device.c **** 
1012:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1013:Core/Src/deca_device.c **** * @brief This is used to return the read T measured @ 23 C value recorded in OTP address 0x9 (VTEMP
1014:Core/Src/deca_device.c **** *
1015:Core/Src/deca_device.c **** * NOTE: dwt_initialise() must be called prior to this function so that it can return a relevant val
1016:Core/Src/deca_device.c **** *
1017:Core/Src/deca_device.c **** * input parameters
1018:Core/Src/deca_device.c **** *
1019:Core/Src/deca_device.c **** * output parameters
1020:Core/Src/deca_device.c **** *
1021:Core/Src/deca_device.c **** * returns the 8 bit V temp value as programmed in the factory
1022:Core/Src/deca_device.c **** */
1023:Core/Src/deca_device.c **** uint8_t dwt_geticreftemp(void)
1024:Core/Src/deca_device.c **** {
1025:Core/Src/deca_device.c ****     return pdw3000local->tempP;
1026:Core/Src/deca_device.c **** }
1027:Core/Src/deca_device.c **** 
1028:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1029:Core/Src/deca_device.c ****  * @brief This is used to return the read part ID of the device
1030:Core/Src/deca_device.c ****  *
1031:Core/Src/deca_device.c ****  * NOTE: dwt_initialise() must be called prior to this function so that it can return a relevant va
1032:Core/Src/deca_device.c ****  *
1033:Core/Src/deca_device.c ****  * input parameters
1034:Core/Src/deca_device.c ****  *
1035:Core/Src/deca_device.c ****  * output parameters
1036:Core/Src/deca_device.c ****  *
1037:Core/Src/deca_device.c ****  * returns the 32 bit part ID value as programmed in the factory
1038:Core/Src/deca_device.c ****  */
1039:Core/Src/deca_device.c **** uint32_t dwt_getpartid(void)
1040:Core/Src/deca_device.c **** {
1041:Core/Src/deca_device.c ****     return pdw3000local->partID;
1042:Core/Src/deca_device.c **** }
1043:Core/Src/deca_device.c **** 
1044:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1045:Core/Src/deca_device.c ****  * @brief This is used to return the read lot ID of the device
1046:Core/Src/deca_device.c ****  *
1047:Core/Src/deca_device.c ****  * NOTE: dwt_initialise() must be called prior to this function so that it can return a relevant va
1048:Core/Src/deca_device.c ****  *
1049:Core/Src/deca_device.c ****  * input parameters
1050:Core/Src/deca_device.c ****  *
1051:Core/Src/deca_device.c ****  * output parameters
ARM GAS  /tmp/cctZ3fzX.s 			page 22


1052:Core/Src/deca_device.c ****  *
1053:Core/Src/deca_device.c ****  * returns the 32 bit lot ID value as programmed in the factory
1054:Core/Src/deca_device.c ****  */
1055:Core/Src/deca_device.c **** uint32_t dwt_getlotid(void)
1056:Core/Src/deca_device.c **** {
1057:Core/Src/deca_device.c ****     return pdw3000local->lotID;
1058:Core/Src/deca_device.c **** }
1059:Core/Src/deca_device.c **** 
1060:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1061:Core/Src/deca_device.c ****  * @brief This is used to return the read device type and revision information of the DW3000 device
1062:Core/Src/deca_device.c ****  *
1063:Core/Src/deca_device.c ****  * input parameters
1064:Core/Src/deca_device.c ****  *
1065:Core/Src/deca_device.c ****  * output parameters
1066:Core/Src/deca_device.c ****  *
1067:Core/Src/deca_device.c ****  * returns the read value which for DW3000 is 0xDECA0312/0xDECA0302
1068:Core/Src/deca_device.c ****  */
1069:Core/Src/deca_device.c **** uint32_t dwt_readdevid(void)
1070:Core/Src/deca_device.c **** {
1071:Core/Src/deca_device.c ****     return dwt_read32bitoffsetreg(DEV_ID_ID, 0);
1072:Core/Src/deca_device.c **** }
1073:Core/Src/deca_device.c **** 
1074:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1075:Core/Src/deca_device.c ****  * @brief This function provides the API for the configuration of the TX spectrum
1076:Core/Src/deca_device.c ****  * including the power and pulse generator delay. The input is a pointer to the data structure
1077:Core/Src/deca_device.c ****  * of type dwt_txconfig_t that holds all the configurable items.
1078:Core/Src/deca_device.c ****  *
1079:Core/Src/deca_device.c ****  * input parameters
1080:Core/Src/deca_device.c ****  * @param config    -   pointer to the txrf configuration structure, which contains the tx rf confi
1081:Core/Src/deca_device.c ****  *                      If config->PGcount == 0 the PGdelay value will be used, else the PG calibra
1082:Core/Src/deca_device.c ****  *
1083:Core/Src/deca_device.c ****  * output parameters
1084:Core/Src/deca_device.c ****  *
1085:Core/Src/deca_device.c ****  * no return value
1086:Core/Src/deca_device.c ****  */
1087:Core/Src/deca_device.c **** void dwt_configuretxrf(dwt_txconfig_t *config)
1088:Core/Src/deca_device.c **** {
1089:Core/Src/deca_device.c ****     if (config->PGcount == 0) {
1090:Core/Src/deca_device.c ****         // Configure RF TX PG_DELAY
1091:Core/Src/deca_device.c ****         dwt_write8bitoffsetreg(TX_CTRL_HI_ID, 0, config->PGdly);
1092:Core/Src/deca_device.c ****     }
1093:Core/Src/deca_device.c ****     else
1094:Core/Src/deca_device.c ****     {
1095:Core/Src/deca_device.c ****         uint8_t channel = 5;
1096:Core/Src/deca_device.c ****         if (dwt_read8bitoffsetreg(CHAN_CTRL_ID, 0) & 0x1)
1097:Core/Src/deca_device.c ****         {
1098:Core/Src/deca_device.c ****             channel = 9;
1099:Core/Src/deca_device.c ****         }
1100:Core/Src/deca_device.c ****         dwt_calcbandwidthadj(config->PGcount, channel);
1101:Core/Src/deca_device.c ****     }
1102:Core/Src/deca_device.c **** 
1103:Core/Src/deca_device.c ****     // Configure TX power
1104:Core/Src/deca_device.c ****     dwt_write32bitreg(TX_POWER_ID, config->power);
1105:Core/Src/deca_device.c **** }
1106:Core/Src/deca_device.c **** 
1107:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1108:Core/Src/deca_device.c ****  * @brief This function configures the STS AES 128 bit key value.
ARM GAS  /tmp/cctZ3fzX.s 			page 23


1109:Core/Src/deca_device.c ****  * the default value is [31:00]c9a375fa,
1110:Core/Src/deca_device.c ****  *                      [63:32]8df43a20,
1111:Core/Src/deca_device.c ****  *                      [95:64]b5e5a4ed,
1112:Core/Src/deca_device.c ****  *                     [127:96]0738123b
1113:Core/Src/deca_device.c ****  *
1114:Core/Src/deca_device.c ****  * input parameters
1115:Core/Src/deca_device.c ****  * @param pStsKey - the pointer to the structure of dwt_sts_cp_key_t type, which holds the AES128 k
1116:Core/Src/deca_device.c ****  *
1117:Core/Src/deca_device.c ****  * output parameters
1118:Core/Src/deca_device.c ****  *
1119:Core/Src/deca_device.c ****  * no return value
1120:Core/Src/deca_device.c ****  */
1121:Core/Src/deca_device.c **** void dwt_configurestskey(dwt_sts_cp_key_t* pStsKey)
1122:Core/Src/deca_device.c **** {
1123:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY0_ID, pStsKey->key0);
1124:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY1_ID, pStsKey->key1);
1125:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY2_ID, pStsKey->key2);
1126:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY3_ID, pStsKey->key3);
1127:Core/Src/deca_device.c **** }
1128:Core/Src/deca_device.c **** 
1129:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1130:Core/Src/deca_device.c ****  * @brief This function configures the STS AES 128 bit initial value, the default value is 1, i.e. 
1131:Core/Src/deca_device.c ****  *
1132:Core/Src/deca_device.c ****  * input parameters
1133:Core/Src/deca_device.c ****  * @param pStsIv - the pointer to the structure of dwt_sts_cp_iv_t type, which holds the IV value t
1134:Core/Src/deca_device.c ****  *
1135:Core/Src/deca_device.c ****  * output parameters
1136:Core/Src/deca_device.c ****  *
1137:Core/Src/deca_device.c ****  * no return value
1138:Core/Src/deca_device.c ****  */
1139:Core/Src/deca_device.c **** void dwt_configurestsiv(dwt_sts_cp_iv_t* pStsIv)
1140:Core/Src/deca_device.c **** {
1141:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV0_ID, pStsIv->iv0);
1142:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV1_ID, pStsIv->iv1);
1143:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV2_ID, pStsIv->iv2);
1144:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV3_ID, pStsIv->iv3);
1145:Core/Src/deca_device.c **** }
1146:Core/Src/deca_device.c **** 
1147:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1148:Core/Src/deca_device.c ****  * @brief This function re-loads the STS initial value
1149:Core/Src/deca_device.c ****  *
1150:Core/Src/deca_device.c ****  * input parameters
1151:Core/Src/deca_device.c ****  *
1152:Core/Src/deca_device.c ****  * output parameters
1153:Core/Src/deca_device.c ****  *
1154:Core/Src/deca_device.c ****  * no return value
1155:Core/Src/deca_device.c ****  */
1156:Core/Src/deca_device.c **** void dwt_configurestsloadiv(void)
1157:Core/Src/deca_device.c **** {
1158:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(STS_CTRL_ID, 0, STS_CTRL_LOAD_IV_BIT_MASK);
1159:Core/Src/deca_device.c **** }
1160:Core/Src/deca_device.c **** 
1161:Core/Src/deca_device.c **** static
1162:Core/Src/deca_device.c **** uint16_t get_sts_mnth (uint16_t cipher, uint8_t threshold, uint8_t shift_val)
1163:Core/Src/deca_device.c **** {
 128              		.loc 1 1163 1 is_stmt 1 view -0
 129              		.cfi_startproc
ARM GAS  /tmp/cctZ3fzX.s 			page 24


 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
1164:Core/Src/deca_device.c ****     uint32_t  value;
 133              		.loc 1 1164 5 view .LVU36
1165:Core/Src/deca_device.c ****     uint16_t  mod_val;
 134              		.loc 1 1165 5 view .LVU37
1166:Core/Src/deca_device.c **** 
1167:Core/Src/deca_device.c ****     value = cipher* (uint32_t)threshold;
 135              		.loc 1 1167 5 view .LVU38
 136              		.loc 1 1167 11 is_stmt 0 view .LVU39
 137 0000 01FB00F0 		mul	r0, r1, r0
 138              	.LVL13:
1168:Core/Src/deca_device.c ****     if (shift_val == 3)
 139              		.loc 1 1168 5 is_stmt 1 view .LVU40
 140              		.loc 1 1168 8 is_stmt 0 view .LVU41
 141 0004 032A     		cmp	r2, #3
 142 0006 0AD0     		beq	.L15
 143              	.LVL14:
 144              	.L13:
1169:Core/Src/deca_device.c ****     {
1170:Core/Src/deca_device.c ****         value *= SQRT_FACTOR;//Factor to sqrt(2)
1171:Core/Src/deca_device.c ****         value >>= SQRT_SHIFT_VAL;
1172:Core/Src/deca_device.c ****     }
1173:Core/Src/deca_device.c **** 
1174:Core/Src/deca_device.c ****     mod_val = value % MOD_VALUE+ HALF_MOD;
 145              		.loc 1 1174 5 is_stmt 1 view .LVU42
 146              		.loc 1 1174 21 is_stmt 0 view .LVU43
 147 0008 C0F30A03 		ubfx	r3, r0, #0, #11
 148              		.loc 1 1174 13 view .LVU44
 149 000c 03F58063 		add	r3, r3, #1024
 150              	.LVL15:
1175:Core/Src/deca_device.c ****     value >>= SHIFT_VALUE;
 151              		.loc 1 1175 5 is_stmt 1 view .LVU45
 152              		.loc 1 1175 11 is_stmt 0 view .LVU46
 153 0010 C00A     		lsrs	r0, r0, #11
 154              	.LVL16:
1176:Core/Src/deca_device.c ****     /* Check if modulo greater than MOD_VALUE, if yes add 1 */
1177:Core/Src/deca_device.c ****     if (mod_val >= MOD_VALUE)
 155              		.loc 1 1177 5 is_stmt 1 view .LVU47
 156              		.loc 1 1177 8 is_stmt 0 view .LVU48
 157 0012 B3F5006F 		cmp	r3, #2048
 158 0016 00D3     		bcc	.L14
1178:Core/Src/deca_device.c ****         value += 1;
 159              		.loc 1 1178 9 is_stmt 1 view .LVU49
 160              		.loc 1 1178 15 is_stmt 0 view .LVU50
 161 0018 0130     		adds	r0, r0, #1
 162              	.LVL17:
 163              	.L14:
1179:Core/Src/deca_device.c **** 
1180:Core/Src/deca_device.c ****     return (uint16_t)value;
 164              		.loc 1 1180 5 is_stmt 1 view .LVU51
1181:Core/Src/deca_device.c **** }
 165              		.loc 1 1181 1 is_stmt 0 view .LVU52
 166 001a 80B2     		uxth	r0, r0
 167              	.LVL18:
 168              		.loc 1 1181 1 view .LVU53
ARM GAS  /tmp/cctZ3fzX.s 			page 25


 169 001c 7047     		bx	lr
 170              	.LVL19:
 171              	.L15:
1170:Core/Src/deca_device.c ****         value >>= SQRT_SHIFT_VAL;
 172              		.loc 1 1170 9 is_stmt 1 view .LVU54
1170:Core/Src/deca_device.c ****         value >>= SQRT_SHIFT_VAL;
 173              		.loc 1 1170 15 is_stmt 0 view .LVU55
 174 001e B521     		movs	r1, #181
 175              	.LVL20:
1170:Core/Src/deca_device.c ****         value >>= SQRT_SHIFT_VAL;
 176              		.loc 1 1170 15 view .LVU56
 177 0020 01FB00F0 		mul	r0, r1, r0
 178              	.LVL21:
1171:Core/Src/deca_device.c ****     }
 179              		.loc 1 1171 9 is_stmt 1 view .LVU57
1171:Core/Src/deca_device.c ****     }
 180              		.loc 1 1171 15 is_stmt 0 view .LVU58
 181 0024 C009     		lsrs	r0, r0, #7
 182              	.LVL22:
1171:Core/Src/deca_device.c ****     }
 183              		.loc 1 1171 15 view .LVU59
 184 0026 EFE7     		b	.L13
 185              		.cfi_endproc
 186              	.LFE37:
 188              		.section	.text.dwt_apiversion,"ax",%progbits
 189              		.align	1
 190              		.global	dwt_apiversion
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	dwt_apiversion:
 197              	.LFB0:
 156:Core/Src/deca_device.c ****     return DW3000_DRIVER_VERSION;
 198              		.loc 1 156 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 157:Core/Src/deca_device.c **** }
 203              		.loc 1 157 5 view .LVU61
 158:Core/Src/deca_device.c **** 
 204              		.loc 1 158 1 is_stmt 0 view .LVU62
 205 0000 4FF48020 		mov	r0, #262144
 206 0004 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE0:
 210              		.section	.text.dwt_setlocaldataptr,"ax",%progbits
 211              		.align	1
 212              		.global	dwt_setlocaldataptr
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	dwt_setlocaldataptr:
 219              	.LVL23:
 220              	.LFB1:
ARM GAS  /tmp/cctZ3fzX.s 			page 26


 171:Core/Src/deca_device.c ****     // Check the index is within the array bounds
 221              		.loc 1 171 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 173:Core/Src/deca_device.c ****     {
 226              		.loc 1 173 5 view .LVU64
 173:Core/Src/deca_device.c ****     {
 227              		.loc 1 173 8 is_stmt 0 view .LVU65
 228 0000 28B9     		cbnz	r0, .L19
 178:Core/Src/deca_device.c **** 
 229              		.loc 1 178 5 is_stmt 1 view .LVU66
 178:Core/Src/deca_device.c **** 
 230              		.loc 1 178 20 is_stmt 0 view .LVU67
 231 0002 044B     		ldr	r3, .L20
 232 0004 03EB8013 		add	r3, r3, r0, lsl #6
 178:Core/Src/deca_device.c **** 
 233              		.loc 1 178 18 view .LVU68
 234 0008 034A     		ldr	r2, .L20+4
 235 000a 1360     		str	r3, [r2]
 180:Core/Src/deca_device.c **** }
 236              		.loc 1 180 5 is_stmt 1 view .LVU69
 180:Core/Src/deca_device.c **** }
 237              		.loc 1 180 12 is_stmt 0 view .LVU70
 238 000c 7047     		bx	lr
 239              	.L19:
 175:Core/Src/deca_device.c ****     }
 240              		.loc 1 175 16 view .LVU71
 241 000e 4FF0FF30 		mov	r0, #-1
 242              	.LVL24:
 181:Core/Src/deca_device.c **** 
 243              		.loc 1 181 1 view .LVU72
 244 0012 7047     		bx	lr
 245              	.L21:
 246              		.align	2
 247              	.L20:
 248 0014 00000000 		.word	.LANCHOR1
 249 0018 00000000 		.word	.LANCHOR2
 250              		.cfi_endproc
 251              	.LFE1:
 253              		.section	.text.dwt_wakeup_ic,"ax",%progbits
 254              		.align	1
 255              		.global	dwt_wakeup_ic
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	dwt_wakeup_ic:
 262              	.LFB4:
 348:Core/Src/deca_device.c ****     wakeup_device_with_io();
 263              		.loc 1 348 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cctZ3fzX.s 			page 27


 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
 349:Core/Src/deca_device.c **** }
 271              		.loc 1 349 5 view .LVU74
 272 0002 FFF7FEFF 		bl	wakeup_device_with_io
 273              	.LVL25:
 350:Core/Src/deca_device.c **** 
 274              		.loc 1 350 1 is_stmt 0 view .LVU75
 275 0006 08BD     		pop	{r3, pc}
 276              		.cfi_endproc
 277              	.LFE4:
 279              		.section	.text.dwt_generatecrc8,"ax",%progbits
 280              		.align	1
 281              		.global	dwt_generatecrc8
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	dwt_generatecrc8:
 288              	.LVL26:
 289              	.LFB16:
 632:Core/Src/deca_device.c ****     uint8_t data;
 290              		.loc 1 632 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 632:Core/Src/deca_device.c ****     uint8_t data;
 294              		.loc 1 632 1 is_stmt 0 view .LVU77
 295 0000 00B5     		push	{lr}
 296              		.cfi_def_cfa_offset 4
 297              		.cfi_offset 14, -4
 298 0002 8646     		mov	lr, r0
 299 0004 1046     		mov	r0, r2
 300              	.LVL27:
 633:Core/Src/deca_device.c ****     int byte;
 301              		.loc 1 633 5 is_stmt 1 view .LVU78
 634:Core/Src/deca_device.c **** 
 302              		.loc 1 634 5 view .LVU79
 639:Core/Src/deca_device.c ****     {
 303              		.loc 1 639 5 view .LVU80
 639:Core/Src/deca_device.c ****     {
 304              		.loc 1 639 15 is_stmt 0 view .LVU81
 305 0006 0023     		movs	r3, #0
 639:Core/Src/deca_device.c ****     {
 306              		.loc 1 639 5 view .LVU82
 307 0008 07E0     		b	.L25
 308              	.LVL28:
 309              	.L26:
 641:Core/Src/deca_device.c ****         crcRemainderInit = crcTable[data];// ^ (crcRemainderInit << 8);
 310              		.loc 1 641 9 is_stmt 1 discriminator 3 view .LVU83
 641:Core/Src/deca_device.c ****         crcRemainderInit = crcTable[data];// ^ (crcRemainderInit << 8);
 311              		.loc 1 641 25 is_stmt 0 discriminator 3 view .LVU84
 312 000a 1EF803C0 		ldrb	ip, [lr, r3]	@ zero_extendqisi2
 641:Core/Src/deca_device.c ****         crcRemainderInit = crcTable[data];// ^ (crcRemainderInit << 8);
 313              		.loc 1 641 14 discriminator 3 view .LVU85
 314 000e 8CEA000C 		eor	ip, ip, r0
 315              	.LVL29:
ARM GAS  /tmp/cctZ3fzX.s 			page 28


 642:Core/Src/deca_device.c ****     }
 316              		.loc 1 642 9 is_stmt 1 discriminator 3 view .LVU86
 642:Core/Src/deca_device.c ****     }
 317              		.loc 1 642 26 is_stmt 0 discriminator 3 view .LVU87
 318 0012 044A     		ldr	r2, .L28
 319 0014 12F80C00 		ldrb	r0, [r2, ip]	@ zero_extendqisi2
 320              	.LVL30:
 639:Core/Src/deca_device.c ****     {
 321              		.loc 1 639 32 is_stmt 1 discriminator 3 view .LVU88
 322 0018 0133     		adds	r3, r3, #1
 323              	.LVL31:
 324              	.L25:
 639:Core/Src/deca_device.c ****     {
 325              		.loc 1 639 20 discriminator 1 view .LVU89
 639:Core/Src/deca_device.c ****     {
 326              		.loc 1 639 5 is_stmt 0 discriminator 1 view .LVU90
 327 001a 8B42     		cmp	r3, r1
 328 001c F5DB     		blt	.L26
 648:Core/Src/deca_device.c **** }
 329              		.loc 1 648 5 is_stmt 1 view .LVU91
 649:Core/Src/deca_device.c **** 
 330              		.loc 1 649 1 is_stmt 0 view .LVU92
 331 001e 5DF804FB 		ldr	pc, [sp], #4
 332              	.L29:
 333 0022 00BF     		.align	2
 334              	.L28:
 335 0024 00000000 		.word	.LANCHOR0
 336              		.cfi_endproc
 337              	.LFE16:
 339              		.section	.rodata.dwt_xfer3000.str1.4,"aMS",%progbits,1
 340              		.align	2
 341              	.LC0:
 342 0000 6C656E67 		.ascii	"length < 0x3100\000"
 342      7468203C 
 342      20307833 
 342      31303000 
 343              		.align	2
 344              	.LC1:
 345 0010 436F7265 		.ascii	"Core/Src/deca_device.c\000"
 345      2F537263 
 345      2F646563 
 345      615F6465 
 345      76696365 
 346 0027 00       		.align	2
 347              	.LC2:
 348 0028 6D6F6465 		.ascii	"mode == DW3000_SPI_WR_BIT || mode == DW3000_SPI_RD_"
 348      203D3D20 
 348      44573330 
 348      30305F53 
 348      50495F57 
 349 005b 42495420 		.ascii	"BIT || mode == DW3000_SPI_AND_OR_8 || mode == DW300"
 349      7C7C206D 
 349      6F646520 
 349      3D3D2044 
 349      57333030 
 350 008e 305F5350 		.ascii	"0_SPI_AND_OR_16 || mode == DW3000_SPI_AND_OR_32\000"
 350      495F414E 
ARM GAS  /tmp/cctZ3fzX.s 			page 29


 350      445F4F52 
 350      5F313620 
 350      7C7C206D 
 351 00be 0000     		.align	2
 352              	.LC3:
 353 00c0 6D6F6465 		.ascii	"mode == DW3000_SPI_WR_BIT\000"
 353      203D3D20 
 353      44573330 
 353      30305F53 
 353      50495F57 
 354              		.section	.text.dwt_xfer3000,"ax",%progbits
 355              		.align	1
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 359              		.fpu fpv4-sp-d16
 361              	dwt_xfer3000:
 362              	.LVL32:
 363              	.LFB2:
 204:Core/Src/deca_device.c ****     uint8_t  header[2];           // Buffer to compose header in
 364              		.loc 1 204 1 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 4, pretend = 0, frame = 8
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 204:Core/Src/deca_device.c ****     uint8_t  header[2];           // Buffer to compose header in
 368              		.loc 1 204 1 is_stmt 0 view .LVU94
 369 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 370              		.cfi_def_cfa_offset 20
 371              		.cfi_offset 4, -20
 372              		.cfi_offset 5, -16
 373              		.cfi_offset 6, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 85B0     		sub	sp, sp, #20
 377              		.cfi_def_cfa_offset 40
 378 0004 0646     		mov	r6, r0
 379 0006 1446     		mov	r4, r2
 380 0008 1D46     		mov	r5, r3
 381 000a BDF82820 		ldrh	r2, [sp, #40]
 382              	.LVL33:
 205:Core/Src/deca_device.c ****     uint16_t cnt = 0;             // Counter for length of a header
 383              		.loc 1 205 5 is_stmt 1 view .LVU95
 206:Core/Src/deca_device.c **** 
 384              		.loc 1 206 5 view .LVU96
 208:Core/Src/deca_device.c ****     uint16_t reg_offset   = 0x7F &  (regFileID + indx);
 385              		.loc 1 208 5 view .LVU97
 208:Core/Src/deca_device.c ****     uint16_t reg_offset   = 0x7F &  (regFileID + indx);
 386              		.loc 1 208 48 is_stmt 0 view .LVU98
 387 000e 0818     		adds	r0, r1, r0
 388              	.LVL34:
 208:Core/Src/deca_device.c ****     uint16_t reg_offset   = 0x7F &  (regFileID + indx);
 389              		.loc 1 208 14 view .LVU99
 390 0010 C0F30440 		ubfx	r0, r0, #16, #5
 391              	.LVL35:
 209:Core/Src/deca_device.c **** 
 392              		.loc 1 209 5 is_stmt 1 view .LVU100
 209:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 30


 393              		.loc 1 209 48 is_stmt 0 view .LVU101
 394 0014 8B19     		adds	r3, r1, r6
 395              	.LVL36:
 211:Core/Src/deca_device.c ****     assert(reg_offset   <= 0x7F);
 396              		.loc 1 211 5 is_stmt 1 view .LVU102
 212:Core/Src/deca_device.c ****     assert(length       < 0x3100);
 397              		.loc 1 212 5 view .LVU103
 213:Core/Src/deca_device.c ****     assert(mode == DW3000_SPI_WR_BIT ||\
 398              		.loc 1 213 5 view .LVU104
 399 0016 B4F5445F 		cmp	r4, #12544
 400 001a 46D2     		bcs	.L44
 401 001c 03F07F03 		and	r3, r3, #127
 402              	.LVL37:
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 403              		.loc 1 214 5 view .LVU105
 404 0020 B2F5004F 		cmp	r2, #32768
 405 0024 0CD0     		beq	.L32
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 406              		.loc 1 214 5 is_stmt 0 discriminator 1 view .LVU106
 407 0026 5AB1     		cbz	r2, .L32
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 408              		.loc 1 214 5 discriminator 2 view .LVU107
 409 0028 48F20101 		movw	r1, #32769
 410              	.LVL38:
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 411              		.loc 1 214 5 discriminator 2 view .LVU108
 412 002c 8A42     		cmp	r2, r1
 413 002e 07D0     		beq	.L32
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 414              		.loc 1 214 5 discriminator 3 view .LVU109
 415 0030 48F20201 		movw	r1, #32770
 416 0034 8A42     		cmp	r2, r1
 417 0036 03D0     		beq	.L32
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 418              		.loc 1 214 5 discriminator 4 view .LVU110
 419 0038 48F20301 		movw	r1, #32771
 420 003c 8A42     		cmp	r2, r1
 421 003e 3AD1     		bne	.L45
 422              	.L32:
 221:Core/Src/deca_device.c ****     addr = (reg_file << 9) | (reg_offset << 2);
 423              		.loc 1 221 5 is_stmt 1 view .LVU111
 222:Core/Src/deca_device.c **** 
 424              		.loc 1 222 5 view .LVU112
 222:Core/Src/deca_device.c **** 
 425              		.loc 1 222 42 is_stmt 0 view .LVU113
 426 0040 9900     		lsls	r1, r3, #2
 222:Core/Src/deca_device.c **** 
 427              		.loc 1 222 28 view .LVU114
 428 0042 41EA402C 		orr	ip, r1, r0, lsl #9
 222:Core/Src/deca_device.c **** 
 429              		.loc 1 222 10 view .LVU115
 430 0046 6146     		mov	r1, ip
 431              	.LVL39:
 224:Core/Src/deca_device.c ****     header[1] = (uint8_t)(addr | (mode & 0x03));// & 0xFF; //EAM: subaddr[5:0]+ R/W/AND_OR
 432              		.loc 1 224 5 is_stmt 1 view .LVU116
 224:Core/Src/deca_device.c ****     header[1] = (uint8_t)(addr | (mode & 0x03));// & 0xFF; //EAM: subaddr[5:0]+ R/W/AND_OR
 433              		.loc 1 224 17 is_stmt 0 view .LVU117
ARM GAS  /tmp/cctZ3fzX.s 			page 31


 434 0048 1143     		orrs	r1, r1, r2
 435 004a 090A     		lsrs	r1, r1, #8
 224:Core/Src/deca_device.c ****     header[1] = (uint8_t)(addr | (mode & 0x03));// & 0xFF; //EAM: subaddr[5:0]+ R/W/AND_OR
 436              		.loc 1 224 15 view .LVU118
 437 004c 8DF80C10 		strb	r1, [sp, #12]
 225:Core/Src/deca_device.c **** 
 438              		.loc 1 225 5 is_stmt 1 view .LVU119
 225:Core/Src/deca_device.c **** 
 439              		.loc 1 225 40 is_stmt 0 view .LVU120
 440 0050 02F00300 		and	r0, r2, #3
 441              	.LVL40:
 225:Core/Src/deca_device.c **** 
 442              		.loc 1 225 32 view .LVU121
 443 0054 40EA0C00 		orr	r0, r0, ip
 225:Core/Src/deca_device.c **** 
 444              		.loc 1 225 15 view .LVU122
 445 0058 8DF80D00 		strb	r0, [sp, #13]
 227:Core/Src/deca_device.c ****     {   /* Fast Access Commands (FAC)
 446              		.loc 1 227 5 is_stmt 1 view .LVU123
 227:Core/Src/deca_device.c ****     {   /* Fast Access Commands (FAC)
 447              		.loc 1 227 8 is_stmt 0 view .LVU124
 448 005c 002C     		cmp	r4, #0
 449 005e 36D1     		bne	.L33
 232:Core/Src/deca_device.c **** 
 450              		.loc 1 232 9 is_stmt 1 view .LVU125
 451 0060 B2F5004F 		cmp	r2, #32768
 452 0064 2DD1     		bne	.L46
 234:Core/Src/deca_device.c ****         cnt = 1;
 453              		.loc 1 234 9 view .LVU126
 234:Core/Src/deca_device.c ****         cnt = 1;
 454              		.loc 1 234 66 is_stmt 0 view .LVU127
 455 0066 7300     		lsls	r3, r6, #1
 234:Core/Src/deca_device.c ****         cnt = 1;
 456              		.loc 1 234 21 view .LVU128
 457 0068 63F07E03 		orn	r3, r3, #126
 234:Core/Src/deca_device.c ****         cnt = 1;
 458              		.loc 1 234 19 view .LVU129
 459 006c 8DF80C30 		strb	r3, [sp, #12]
 235:Core/Src/deca_device.c ****     }
 460              		.loc 1 235 9 is_stmt 1 view .LVU130
 461              	.LVL41:
 235:Core/Src/deca_device.c ****     }
 462              		.loc 1 235 13 is_stmt 0 view .LVU131
 463 0070 0127     		movs	r7, #1
 464              	.LVL42:
 465              	.L35:
 253:Core/Src/deca_device.c ****     {
 466              		.loc 1 253 5 is_stmt 1 view .LVU132
 467 0072 002A     		cmp	r2, #0
 468 0074 41D0     		beq	.L37
 469 0076 82F40041 		eor	r1, r2, #32768
 470 007a 0329     		cmp	r1, #3
 471 007c 64D8     		bhi	.L38
 472              	.LBB4:
 260:Core/Src/deca_device.c ****         if (pdw3000local->spicrc != DWT_SPI_CRC_MODE_NO)
 473              		.loc 1 260 9 view .LVU133
 474              	.LVL43:
ARM GAS  /tmp/cctZ3fzX.s 			page 32


 261:Core/Src/deca_device.c ****         {
 475              		.loc 1 261 9 view .LVU134
 261:Core/Src/deca_device.c ****         {
 476              		.loc 1 261 25 is_stmt 0 view .LVU135
 477 007e 334B     		ldr	r3, .L48
 478 0080 1B68     		ldr	r3, [r3]
 479 0082 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 261:Core/Src/deca_device.c ****         {
 480              		.loc 1 261 12 view .LVU136
 481 0084 93B3     		cbz	r3, .L39
 264:Core/Src/deca_device.c ****             crc8 = dwt_generatecrc8(buffer, length, crc8);
 482              		.loc 1 264 13 is_stmt 1 view .LVU137
 264:Core/Src/deca_device.c ****             crc8 = dwt_generatecrc8(buffer, length, crc8);
 483              		.loc 1 264 20 is_stmt 0 view .LVU138
 484 0086 0022     		movs	r2, #0
 485 0088 3946     		mov	r1, r7
 486 008a 03A8     		add	r0, sp, #12
 487 008c FFF7FEFF 		bl	dwt_generatecrc8
 488              	.LVL44:
 264:Core/Src/deca_device.c ****             crc8 = dwt_generatecrc8(buffer, length, crc8);
 489              		.loc 1 264 20 view .LVU139
 490 0090 0246     		mov	r2, r0
 491              	.LVL45:
 265:Core/Src/deca_device.c **** 
 492              		.loc 1 265 13 is_stmt 1 view .LVU140
 265:Core/Src/deca_device.c **** 
 493              		.loc 1 265 20 is_stmt 0 view .LVU141
 494 0092 2146     		mov	r1, r4
 495 0094 2846     		mov	r0, r5
 496 0096 FFF7FEFF 		bl	dwt_generatecrc8
 497              	.LVL46:
 268:Core/Src/deca_device.c ****         }
 498              		.loc 1 268 13 is_stmt 1 view .LVU142
 499 009a 0090     		str	r0, [sp]
 500 009c 2B46     		mov	r3, r5
 501 009e 2246     		mov	r2, r4
 502 00a0 03A9     		add	r1, sp, #12
 503 00a2 3846     		mov	r0, r7
 504              	.LVL47:
 268:Core/Src/deca_device.c ****         }
 505              		.loc 1 268 13 is_stmt 0 view .LVU143
 506 00a4 FFF7FEFF 		bl	writetospiwithcrc
 507              	.LVL48:
 508 00a8 32E0     		b	.L30
 509              	.LVL49:
 510              	.L44:
 268:Core/Src/deca_device.c ****         }
 511              		.loc 1 268 13 view .LVU144
 512              	.LBE4:
 213:Core/Src/deca_device.c ****     assert(mode == DW3000_SPI_WR_BIT ||\
 513              		.loc 1 213 5 discriminator 1 view .LVU145
 514 00aa 294B     		ldr	r3, .L48+4
 515              	.LVL50:
 213:Core/Src/deca_device.c ****     assert(mode == DW3000_SPI_WR_BIT ||\
 516              		.loc 1 213 5 discriminator 1 view .LVU146
 517 00ac 294A     		ldr	r2, .L48+8
 518 00ae D521     		movs	r1, #213
ARM GAS  /tmp/cctZ3fzX.s 			page 33


 519              	.LVL51:
 213:Core/Src/deca_device.c ****     assert(mode == DW3000_SPI_WR_BIT ||\
 520              		.loc 1 213 5 discriminator 1 view .LVU147
 521 00b0 2948     		ldr	r0, .L48+12
 522              	.LVL52:
 213:Core/Src/deca_device.c ****     assert(mode == DW3000_SPI_WR_BIT ||\
 523              		.loc 1 213 5 discriminator 1 view .LVU148
 524 00b2 FFF7FEFF 		bl	__assert_func
 525              	.LVL53:
 526              	.L45:
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 527              		.loc 1 214 5 discriminator 5 view .LVU149
 528 00b6 294B     		ldr	r3, .L48+16
 529 00b8 264A     		ldr	r2, .L48+8
 530 00ba D621     		movs	r1, #214
 531 00bc 2648     		ldr	r0, .L48+12
 532              	.LVL54:
 214:Core/Src/deca_device.c ****            mode == DW3000_SPI_RD_BIT ||\
 533              		.loc 1 214 5 discriminator 5 view .LVU150
 534 00be FFF7FEFF 		bl	__assert_func
 535              	.LVL55:
 536              	.L46:
 232:Core/Src/deca_device.c **** 
 537              		.loc 1 232 9 discriminator 1 view .LVU151
 538 00c2 274B     		ldr	r3, .L48+20
 539 00c4 234A     		ldr	r2, .L48+8
 540 00c6 E821     		movs	r1, #232
 541 00c8 2348     		ldr	r0, .L48+12
 542 00ca FFF7FEFF 		bl	__assert_func
 543              	.LVL56:
 544              	.L33:
 237:Core/Src/deca_device.c ****     {   /* Fast Access Commands with Read/Write support (FACRW)
 545              		.loc 1 237 10 is_stmt 1 view .LVU152
 237:Core/Src/deca_device.c ****     {   /* Fast Access Commands with Read/Write support (FACRW)
 546              		.loc 1 237 13 is_stmt 0 view .LVU153
 547 00ce 1BB9     		cbnz	r3, .L36
 237:Core/Src/deca_device.c ****     {   /* Fast Access Commands with Read/Write support (FACRW)
 548              		.loc 1 237 48 discriminator 1 view .LVU154
 549 00d0 B2F5004F 		cmp	r2, #32768
 550 00d4 06D0     		beq	.L41
 237:Core/Src/deca_device.c ****     {   /* Fast Access Commands with Read/Write support (FACRW)
 551              		.loc 1 237 78 discriminator 2 view .LVU155
 552 00d6 3AB1     		cbz	r2, .L42
 553              	.L36:
 249:Core/Src/deca_device.c ****         cnt = 2;
 554              		.loc 1 249 9 is_stmt 1 view .LVU156
 249:Core/Src/deca_device.c ****         cnt = 2;
 555              		.loc 1 249 19 is_stmt 0 view .LVU157
 556 00d8 41F04001 		orr	r1, r1, #64
 557 00dc 8DF80C10 		strb	r1, [sp, #12]
 250:Core/Src/deca_device.c ****     }
 558              		.loc 1 250 9 is_stmt 1 view .LVU158
 559              	.LVL57:
 250:Core/Src/deca_device.c ****     }
 560              		.loc 1 250 13 is_stmt 0 view .LVU159
 561 00e0 0227     		movs	r7, #2
 562 00e2 C6E7     		b	.L35
ARM GAS  /tmp/cctZ3fzX.s 			page 34


 563              	.LVL58:
 564              	.L41:
 242:Core/Src/deca_device.c ****     }
 565              		.loc 1 242 13 view .LVU160
 566 00e4 0127     		movs	r7, #1
 567 00e6 C4E7     		b	.L35
 568              	.L42:
 569 00e8 0127     		movs	r7, #1
 570 00ea C2E7     		b	.L35
 571              	.LVL59:
 572              	.L39:
 573              	.LBB5:
 273:Core/Src/deca_device.c ****         }
 574              		.loc 1 273 13 is_stmt 1 view .LVU161
 575 00ec 2B46     		mov	r3, r5
 576 00ee 2246     		mov	r2, r4
 577 00f0 03A9     		add	r1, sp, #12
 578 00f2 3846     		mov	r0, r7
 579 00f4 FFF7FEFF 		bl	writetospi
 580              	.LVL60:
 273:Core/Src/deca_device.c ****         }
 581              		.loc 1 273 13 is_stmt 0 view .LVU162
 582 00f8 0AE0     		b	.L30
 583              	.LVL61:
 584              	.L37:
 273:Core/Src/deca_device.c ****         }
 585              		.loc 1 273 13 view .LVU163
 586              	.LBE5:
 279:Core/Src/deca_device.c **** 
 587              		.loc 1 279 13 is_stmt 1 view .LVU164
 588 00fa 2B46     		mov	r3, r5
 589 00fc 2246     		mov	r2, r4
 590 00fe 03A9     		add	r1, sp, #12
 591 0100 3846     		mov	r0, r7
 592 0102 FFF7FEFF 		bl	readfromspi
 593              	.LVL62:
 283:Core/Src/deca_device.c ****             {
 594              		.loc 1 283 13 view .LVU165
 283:Core/Src/deca_device.c ****             {
 595              		.loc 1 283 30 is_stmt 0 view .LVU166
 596 0106 114B     		ldr	r3, .L48
 597 0108 1B68     		ldr	r3, [r3]
 598 010a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 283:Core/Src/deca_device.c ****             {
 599              		.loc 1 283 16 view .LVU167
 600 010c 022B     		cmp	r3, #2
 601 010e 01D0     		beq	.L47
 602              	.L30:
 309:Core/Src/deca_device.c **** 
 603              		.loc 1 309 1 view .LVU168
 604 0110 05B0     		add	sp, sp, #20
 605              		.cfi_remember_state
 606              		.cfi_def_cfa_offset 20
 607              		@ sp needed
 608 0112 F0BD     		pop	{r4, r5, r6, r7, pc}
 609              	.LVL63:
 610              	.L47:
ARM GAS  /tmp/cctZ3fzX.s 			page 35


 611              		.cfi_restore_state
 283:Core/Src/deca_device.c ****             {
 612              		.loc 1 283 65 discriminator 1 view .LVU169
 613 0114 182E     		cmp	r6, #24
 614 0116 FBD0     		beq	.L30
 615              	.LBB6:
 285:Core/Src/deca_device.c ****                 //generate 8 bit CRC from the read data
 616              		.loc 1 285 17 is_stmt 1 view .LVU170
 287:Core/Src/deca_device.c ****                 crc8 = dwt_generatecrc8(buffer, length, crc8);
 617              		.loc 1 287 17 view .LVU171
 287:Core/Src/deca_device.c ****                 crc8 = dwt_generatecrc8(buffer, length, crc8);
 618              		.loc 1 287 24 is_stmt 0 view .LVU172
 619 0118 0022     		movs	r2, #0
 620 011a 3946     		mov	r1, r7
 621 011c 03A8     		add	r0, sp, #12
 622 011e FFF7FEFF 		bl	dwt_generatecrc8
 623              	.LVL64:
 624 0122 0246     		mov	r2, r0
 625              	.LVL65:
 288:Core/Src/deca_device.c **** 
 626              		.loc 1 288 17 is_stmt 1 view .LVU173
 288:Core/Src/deca_device.c **** 
 627              		.loc 1 288 24 is_stmt 0 view .LVU174
 628 0124 2146     		mov	r1, r4
 629 0126 2846     		mov	r0, r5
 630 0128 FFF7FEFF 		bl	dwt_generatecrc8
 631              	.LVL66:
 288:Core/Src/deca_device.c **** 
 632              		.loc 1 288 24 view .LVU175
 633 012c 0446     		mov	r4, r0
 634              	.LVL67:
 291:Core/Src/deca_device.c **** 
 635              		.loc 1 291 17 is_stmt 1 view .LVU176
 291:Core/Src/deca_device.c **** 
 636              		.loc 1 291 26 is_stmt 0 view .LVU177
 637 012e 0021     		movs	r1, #0
 638 0130 1820     		movs	r0, #24
 639 0132 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 640              	.LVL68:
 295:Core/Src/deca_device.c ****                 {
 641              		.loc 1 295 17 is_stmt 1 view .LVU178
 295:Core/Src/deca_device.c ****                 {
 642              		.loc 1 295 20 is_stmt 0 view .LVU179
 643 0136 8442     		cmp	r4, r0
 644 0138 EAD0     		beq	.L30
 297:Core/Src/deca_device.c ****                         pdw3000local->cbSPIRDErr();
 645              		.loc 1 297 21 is_stmt 1 view .LVU180
 297:Core/Src/deca_device.c ****                         pdw3000local->cbSPIRDErr();
 646              		.loc 1 297 37 is_stmt 0 view .LVU181
 647 013a 044B     		ldr	r3, .L48
 648 013c 1B68     		ldr	r3, [r3]
 649 013e 5B6A     		ldr	r3, [r3, #36]
 297:Core/Src/deca_device.c ****                         pdw3000local->cbSPIRDErr();
 650              		.loc 1 297 24 view .LVU182
 651 0140 002B     		cmp	r3, #0
 652 0142 E5D0     		beq	.L30
 298:Core/Src/deca_device.c ****                 }
ARM GAS  /tmp/cctZ3fzX.s 			page 36


 653              		.loc 1 298 25 is_stmt 1 view .LVU183
 654 0144 9847     		blx	r3
 655              	.LVL69:
 298:Core/Src/deca_device.c ****                 }
 656              		.loc 1 298 25 is_stmt 0 view .LVU184
 657 0146 E3E7     		b	.L30
 658              	.LVL70:
 659              	.L38:
 298:Core/Src/deca_device.c ****                 }
 660              		.loc 1 298 25 view .LVU185
 661              	.LBE6:
 305:Core/Src/deca_device.c ****         break;
 662              		.loc 1 305 9 is_stmt 1 discriminator 1 view .LVU186
 305:Core/Src/deca_device.c ****         break;
 663              		.loc 1 305 17 discriminator 1 view .LVU187
 305:Core/Src/deca_device.c ****         break;
 664              		.loc 1 305 14 discriminator 1 view .LVU188
 665 0148 FEE7     		b	.L38
 666              	.L49:
 667 014a 00BF     		.align	2
 668              	.L48:
 669 014c 00000000 		.word	.LANCHOR2
 670 0150 00000000 		.word	.LC0
 671 0154 00000000 		.word	.LANCHOR3
 672 0158 10000000 		.word	.LC1
 673 015c 28000000 		.word	.LC2
 674 0160 C0000000 		.word	.LC3
 675              		.cfi_endproc
 676              	.LFE2:
 678              		.section	.text.dwt_writetodevice,"ax",%progbits
 679              		.align	1
 680              		.global	dwt_writetodevice
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	dwt_writetodevice:
 687              	.LVL71:
 688              	.LFB3:
 332:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_WR_BIT);
 689              		.loc 1 332 1 view -0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 332:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_WR_BIT);
 693              		.loc 1 332 1 is_stmt 0 view .LVU190
 694 0000 10B5     		push	{r4, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 14, -4
 698 0002 82B0     		sub	sp, sp, #8
 699              		.cfi_def_cfa_offset 16
 333:Core/Src/deca_device.c **** }
 700              		.loc 1 333 5 is_stmt 1 view .LVU191
 701 0004 4FF40044 		mov	r4, #32768
 702 0008 0094     		str	r4, [sp]
 703 000a FFF7FEFF 		bl	dwt_xfer3000
ARM GAS  /tmp/cctZ3fzX.s 			page 37


 704              	.LVL72:
 334:Core/Src/deca_device.c **** 
 705              		.loc 1 334 1 is_stmt 0 view .LVU192
 706 000e 02B0     		add	sp, sp, #8
 707              		.cfi_def_cfa_offset 8
 708              		@ sp needed
 709 0010 10BD     		pop	{r4, pc}
 710              		.cfi_endproc
 711              	.LFE3:
 713              		.section	.text.dwt_write32bitoffsetreg,"ax",%progbits
 714              		.align	1
 715              		.global	dwt_write32bitoffsetreg
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	dwt_write32bitoffsetreg:
 722              	.LVL73:
 723              	.LFB9:
 460:Core/Src/deca_device.c ****     int     j ;
 724              		.loc 1 460 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 8
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 460:Core/Src/deca_device.c ****     int     j ;
 728              		.loc 1 460 1 is_stmt 0 view .LVU194
 729 0000 00B5     		push	{lr}
 730              		.cfi_def_cfa_offset 4
 731              		.cfi_offset 14, -4
 732 0002 83B0     		sub	sp, sp, #12
 733              		.cfi_def_cfa_offset 16
 461:Core/Src/deca_device.c ****     uint8_t   buffer[4] ;
 734              		.loc 1 461 5 is_stmt 1 view .LVU195
 462:Core/Src/deca_device.c **** 
 735              		.loc 1 462 5 view .LVU196
 464:Core/Src/deca_device.c ****     {
 736              		.loc 1 464 5 view .LVU197
 737              	.LVL74:
 464:Core/Src/deca_device.c ****     {
 738              		.loc 1 464 13 is_stmt 0 view .LVU198
 739 0004 0023     		movs	r3, #0
 464:Core/Src/deca_device.c ****     {
 740              		.loc 1 464 5 view .LVU199
 741 0006 06E0     		b	.L53
 742              	.LVL75:
 743              	.L54:
 466:Core/Src/deca_device.c ****         regval >>= 8 ;
 744              		.loc 1 466 9 is_stmt 1 discriminator 3 view .LVU200
 466:Core/Src/deca_device.c ****         regval >>= 8 ;
 745              		.loc 1 466 19 is_stmt 0 discriminator 3 view .LVU201
 746 0008 03F1080C 		add	ip, r3, #8
 747 000c EC44     		add	ip, sp, ip
 748 000e 0CF8042C 		strb	r2, [ip, #-4]
 467:Core/Src/deca_device.c ****     }
 749              		.loc 1 467 9 is_stmt 1 discriminator 3 view .LVU202
 467:Core/Src/deca_device.c ****     }
 750              		.loc 1 467 16 is_stmt 0 discriminator 3 view .LVU203
ARM GAS  /tmp/cctZ3fzX.s 			page 38


 751 0012 120A     		lsrs	r2, r2, #8
 752              	.LVL76:
 464:Core/Src/deca_device.c ****     {
 753              		.loc 1 464 27 is_stmt 1 discriminator 3 view .LVU204
 464:Core/Src/deca_device.c ****     {
 754              		.loc 1 464 28 is_stmt 0 discriminator 3 view .LVU205
 755 0014 0133     		adds	r3, r3, #1
 756              	.LVL77:
 757              	.L53:
 464:Core/Src/deca_device.c ****     {
 758              		.loc 1 464 19 is_stmt 1 discriminator 1 view .LVU206
 464:Core/Src/deca_device.c ****     {
 759              		.loc 1 464 5 is_stmt 0 discriminator 1 view .LVU207
 760 0016 032B     		cmp	r3, #3
 761 0018 F6DD     		ble	.L54
 470:Core/Src/deca_device.c **** } // end dwt_write32bitoffsetreg()
 762              		.loc 1 470 5 is_stmt 1 view .LVU208
 763 001a 01AB     		add	r3, sp, #4
 764              	.LVL78:
 470:Core/Src/deca_device.c **** } // end dwt_write32bitoffsetreg()
 765              		.loc 1 470 5 is_stmt 0 view .LVU209
 766 001c 0422     		movs	r2, #4
 767              	.LVL79:
 470:Core/Src/deca_device.c **** } // end dwt_write32bitoffsetreg()
 768              		.loc 1 470 5 view .LVU210
 769 001e 89B2     		uxth	r1, r1
 770              	.LVL80:
 470:Core/Src/deca_device.c **** } // end dwt_write32bitoffsetreg()
 771              		.loc 1 470 5 view .LVU211
 772 0020 FFF7FEFF 		bl	dwt_writetodevice
 773              	.LVL81:
 471:Core/Src/deca_device.c **** 
 774              		.loc 1 471 1 view .LVU212
 775 0024 03B0     		add	sp, sp, #12
 776              		.cfi_def_cfa_offset 4
 777              		@ sp needed
 778 0026 5DF804FB 		ldr	pc, [sp], #4
 779              		.cfi_endproc
 780              	.LFE9:
 782              		.section	.text.dwt_disable_rftx_blocks,"ax",%progbits
 783              		.align	1
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu fpv4-sp-d16
 789              	dwt_disable_rftx_blocks:
 790              	.LFB120:
1182:Core/Src/deca_device.c **** 
1183:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1184:Core/Src/deca_device.c ****  * @brief This function sets the default values of the lookup tables depending on the channel selec
1185:Core/Src/deca_device.c ****  *
1186:Core/Src/deca_device.c ****  * input parameters
1187:Core/Src/deca_device.c ****  * @param[in] channel - Channel that the device will be transmitting/receiving on.
1188:Core/Src/deca_device.c ****  *
1189:Core/Src/deca_device.c ****  * no return value
1190:Core/Src/deca_device.c ****  */
1191:Core/Src/deca_device.c **** void dwt_configmrxlut(int channel)
ARM GAS  /tmp/cctZ3fzX.s 			page 39


1192:Core/Src/deca_device.c **** {
1193:Core/Src/deca_device.c **** 	uint32_t lut0, lut1, lut2, lut3, lut4, lut5, lut6 = 0;
1194:Core/Src/deca_device.c **** 
1195:Core/Src/deca_device.c ****     if (channel == 5)
1196:Core/Src/deca_device.c ****     {
1197:Core/Src/deca_device.c ****         lut0 = (uint32_t)CH5_DGC_LUT_0;
1198:Core/Src/deca_device.c ****         lut1 = (uint32_t)CH5_DGC_LUT_1;
1199:Core/Src/deca_device.c ****         lut2 = (uint32_t)CH5_DGC_LUT_2;
1200:Core/Src/deca_device.c ****         lut3 = (uint32_t)CH5_DGC_LUT_3;
1201:Core/Src/deca_device.c ****         lut4 = (uint32_t)CH5_DGC_LUT_4;
1202:Core/Src/deca_device.c ****         lut5 = (uint32_t)CH5_DGC_LUT_5;
1203:Core/Src/deca_device.c ****         lut6 = (uint32_t)CH5_DGC_LUT_6;
1204:Core/Src/deca_device.c ****     }
1205:Core/Src/deca_device.c ****     else
1206:Core/Src/deca_device.c ****     {
1207:Core/Src/deca_device.c ****         lut0 = (uint32_t)CH9_DGC_LUT_0;
1208:Core/Src/deca_device.c ****         lut1 = (uint32_t)CH9_DGC_LUT_1;
1209:Core/Src/deca_device.c ****         lut2 = (uint32_t)CH9_DGC_LUT_2;
1210:Core/Src/deca_device.c ****         lut3 = (uint32_t)CH9_DGC_LUT_3;
1211:Core/Src/deca_device.c ****         lut4 = (uint32_t)CH9_DGC_LUT_4;
1212:Core/Src/deca_device.c ****         lut5 = (uint32_t)CH9_DGC_LUT_5;
1213:Core/Src/deca_device.c ****         lut6 = (uint32_t)CH9_DGC_LUT_6;
1214:Core/Src/deca_device.c ****     }
1215:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_0_CFG_ID, 0x0, lut0);
1216:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_1_CFG_ID, 0x0, lut1);
1217:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_2_CFG_ID, 0x0, lut2);
1218:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_3_CFG_ID, 0x0, lut3);
1219:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_4_CFG_ID, 0x0, lut4);
1220:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_5_CFG_ID, 0x0, lut5);
1221:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_6_CFG_ID, 0x0, lut6);
1222:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_CFG0_ID, 0x0, DWT_DGC_CFG0);
1223:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_CFG1_ID, 0x0, DWT_DGC_CFG1);
1224:Core/Src/deca_device.c **** }
1225:Core/Src/deca_device.c **** 
1226:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1227:Core/Src/deca_device.c ****  * @brief This function needs to be called after device is woken up from DEEPSLEEP/SLEEP state, to 
1228:Core/Src/deca_device.c ****  * configuration which has not been automatically restored from AON
1229:Core/Src/deca_device.c ****  *
1230:Core/Src/deca_device.c ****  * input parameters
1231:Core/Src/deca_device.c ****  *
1232:Core/Src/deca_device.c ****  * return DWT_SUCCESS
1233:Core/Src/deca_device.c ****  *
1234:Core/Src/deca_device.c ****  */
1235:Core/Src/deca_device.c **** void dwt_restoreconfig(void)
1236:Core/Src/deca_device.c **** {
1237:Core/Src/deca_device.c ****     uint8_t channel = 5;
1238:Core/Src/deca_device.c ****     uint16_t chan_ctrl;
1239:Core/Src/deca_device.c **** 
1240:Core/Src/deca_device.c ****     if (pdw3000local->bias_tune != 0)
1241:Core/Src/deca_device.c ****     {
1242:Core/Src/deca_device.c ****         _dwt_prog_ldo_and_bias_tune();
1243:Core/Src/deca_device.c ****     }
1244:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(LDO_RLOAD_ID, 1, LDO_RLOAD_VAL_B1);
1245:Core/Src/deca_device.c ****     /*Restoring indirect access register B configuration as this is not preserved when device is in
1246:Core/Src/deca_device.c ****      * Indirect access register B is configured to point to the "Double buffer diagnostic SET 2"*/
1247:Core/Src/deca_device.c ****     dwt_write32bitreg(INDIRECT_ADDR_B_ID, (BUF1_RX_FINFO >> 16));
1248:Core/Src/deca_device.c ****     dwt_write32bitreg(ADDR_OFFSET_B_ID, BUF1_RX_FINFO & 0xffff);
ARM GAS  /tmp/cctZ3fzX.s 			page 40


1249:Core/Src/deca_device.c **** 
1250:Core/Src/deca_device.c ****     /* Restore OPS table configuration */
1251:Core/Src/deca_device.c ****     _dwt_kick_ops_table_on_wakeup();
1252:Core/Src/deca_device.c **** 
1253:Core/Src/deca_device.c ****     chan_ctrl = dwt_read16bitoffsetreg(CHAN_CTRL_ID, 0);
1254:Core/Src/deca_device.c **** 
1255:Core/Src/deca_device.c ****     //assume RX code is the same as TX (e.g. we will not RX on 16 MHz or SCP and TX on 64 MHz)
1256:Core/Src/deca_device.c ****     if( (((chan_ctrl>> CHAN_CTRL_TX_PCODE_BIT_OFFSET)&CHAN_CTRL_TX_PCODE_BIT_MASK) >= 9) && (((chan
1257:Core/Src/deca_device.c ****     {
1258:Core/Src/deca_device.c ****         if (chan_ctrl & 0x1)
1259:Core/Src/deca_device.c ****         {
1260:Core/Src/deca_device.c ****             channel = 9;
1261:Core/Src/deca_device.c ****         }
1262:Core/Src/deca_device.c **** 
1263:Core/Src/deca_device.c ****         /* If the OTP has DGC info programmed into it, do a manual kick from OTP. */
1264:Core/Src/deca_device.c ****         if (pdw3000local->dgc_otp_set == DWT_DGC_LOAD_FROM_OTP)
1265:Core/Src/deca_device.c ****         {
1266:Core/Src/deca_device.c ****             _dwt_kick_dgc_on_wakeup(channel);
1267:Core/Src/deca_device.c ****         }
1268:Core/Src/deca_device.c ****         /* Else we manually program hard-coded values into the DGC registers. */
1269:Core/Src/deca_device.c ****         else
1270:Core/Src/deca_device.c ****         {
1271:Core/Src/deca_device.c ****             dwt_configmrxlut(channel);
1272:Core/Src/deca_device.c ****         }
1273:Core/Src/deca_device.c ****     }
1274:Core/Src/deca_device.c **** }
1275:Core/Src/deca_device.c **** 
1276:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1277:Core/Src/deca_device.c ****  * @brief This function configures STS mode: e.g. DWT_STS_MODE_OFF, DWT_STS_MODE_1 etc
1278:Core/Src/deca_device.c ****  * The dwt_configure should be called prior to this to configure other parameters
1279:Core/Src/deca_device.c ****  *
1280:Core/Src/deca_device.c ****  * input parameters
1281:Core/Src/deca_device.c ****  * @param stsMode    -   e.g. DWT_STS_MODE_OFF, DWT_STS_MODE_1 etc.
1282:Core/Src/deca_device.c ****  *
1283:Core/Src/deca_device.c ****  * return DWT_SUCCESS
1284:Core/Src/deca_device.c ****  *
1285:Core/Src/deca_device.c ****  */
1286:Core/Src/deca_device.c **** void dwt_configurestsmode(uint8_t stsMode)
1287:Core/Src/deca_device.c **** {
1288:Core/Src/deca_device.c **** 
1289:Core/Src/deca_device.c ****     pdw3000local->stsconfig = stsMode;
1290:Core/Src/deca_device.c **** 
1291:Core/Src/deca_device.c ****     /////////////////////////////////////////////////////////////////////////
1292:Core/Src/deca_device.c ****     //SYS_CFG
1293:Core/Src/deca_device.c ****     //clear the PHR Mode, PHR Rate, STS Protocol, SDC, PDOA Mode,
1294:Core/Src/deca_device.c ****     //then set the relevant bits according to configuration of the PHR Mode, PHR Rate, STS Protocol
1295:Core/Src/deca_device.c ****     dwt_modify32bitoffsetreg(SYS_CFG_ID, 0, ~(SYS_CFG_CP_SPC_BIT_MASK | SYS_CFG_CP_SDC_BIT_MASK),
1296:Core/Src/deca_device.c ****         ((uint16_t)stsMode & DWT_STS_CONFIG_MASK) << SYS_CFG_CP_SPC_BIT_OFFSET);
1297:Core/Src/deca_device.c **** 
1298:Core/Src/deca_device.c ****     if((stsMode & DWT_STS_MODE_ND) == DWT_STS_MODE_ND)
1299:Core/Src/deca_device.c ****     {
1300:Core/Src/deca_device.c ****         //configure lower preamble detection threshold for no data STS mode
1301:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(DTUNE3_ID, 0, PD_THRESH_NO_DATA);
1302:Core/Src/deca_device.c ****     }
1303:Core/Src/deca_device.c ****     else
1304:Core/Src/deca_device.c ****     {
1305:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(DTUNE3_ID, 0, PD_THRESH_DEFAULT);
ARM GAS  /tmp/cctZ3fzX.s 			page 41


1306:Core/Src/deca_device.c ****     }
1307:Core/Src/deca_device.c **** }
1308:Core/Src/deca_device.c **** 
1309:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1310:Core/Src/deca_device.c ****  * @brief This function provides the main API for the configuration of the
1311:Core/Src/deca_device.c ****  * DW3000 and this low-level driver.  The input is a pointer to the data structure
1312:Core/Src/deca_device.c ****  * of type dwt_config_t that holds all the configurable items.
1313:Core/Src/deca_device.c ****  * The dwt_config_t structure shows which ones are supported
1314:Core/Src/deca_device.c ****  *
1315:Core/Src/deca_device.c ****  * input parameters
1316:Core/Src/deca_device.c ****  * @param config    -   pointer to the configuration structure, which contains the device configura
1317:Core/Src/deca_device.c ****  *
1318:Core/Src/deca_device.c ****  * return DWT_SUCCESS or DWT_ERROR
1319:Core/Src/deca_device.c ****  * Note: If the RX calibration routine fails the device receiver performance will be severely affec
1320:Core/Src/deca_device.c ****  * the application should reset device and try again
1321:Core/Src/deca_device.c ****  *
1322:Core/Src/deca_device.c ****  */
1323:Core/Src/deca_device.c **** int dwt_configure(dwt_config_t *config)
1324:Core/Src/deca_device.c **** {
1325:Core/Src/deca_device.c ****     uint8_t chan = config->chan,cnt,flag;
1326:Core/Src/deca_device.c ****     uint32_t temp;
1327:Core/Src/deca_device.c ****     uint8_t scp = ((config->rxCode > 24) || (config->txCode > 24)) ? 1 : 0;
1328:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
1329:Core/Src/deca_device.c ****     uint16_t sts_len;
1330:Core/Src/deca_device.c ****     int error = DWT_SUCCESS;
1331:Core/Src/deca_device.c **** 
1332:Core/Src/deca_device.c **** 
1333:Core/Src/deca_device.c **** #ifdef DWT_API_ERROR_CHECK
1334:Core/Src/deca_device.c ****     assert((config->dataRate == DWT_BR_6M8) || (config->dataRate == DWT_BR_850K));
1335:Core/Src/deca_device.c ****     assert(config->rxPAC <= DWT_PAC4);
1336:Core/Src/deca_device.c ****     assert((chan == 5) || (chan == 9));
1337:Core/Src/deca_device.c ****     assert((config->txPreambLength == DWT_PLEN_32) || (config->txPreambLength == DWT_PLEN_64) || (c
1338:Core/Src/deca_device.c ****            || (config->txPreambLength == DWT_PLEN_512) || (config->txPreambLength == DWT_PLEN_1024)
1339:Core/Src/deca_device.c ****            || (config->txPreambLength == DWT_PLEN_2048) || (config->txPreambLength == DWT_PLEN_4096
1340:Core/Src/deca_device.c ****     assert((config->phrMode == DWT_PHRMODE_STD) || (config->phrMode == DWT_PHRMODE_EXT));
1341:Core/Src/deca_device.c ****     assert((config->phrRate == DWT_PHRRATE_STD) || (config->phrRate == DWT_PHRRATE_DTA));
1342:Core/Src/deca_device.c ****     assert((config->pdoaMode == DWT_PDOA_M0) || (config->pdoaMode == DWT_PDOA_M1) || (config->pdoaM
1343:Core/Src/deca_device.c **** 	assert(((config->stsMode & DWT_STS_CONFIG_MASK) == DWT_STS_MODE_OFF) 
1344:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == DWT_STS_MODE_1) 
1345:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == DWT_STS_MODE_2)
1346:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == DWT_STS_MODE_ND)
1347:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == DWT_STS_MODE_SDC)
1348:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == (DWT_STS_MODE_1 | DWT_STS_MODE_SDC))
1349:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == (DWT_STS_MODE_2 | DWT_STS_MODE_SDC))
1350:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == (DWT_STS_MODE_ND | DWT_STS_MODE_SDC))
1351:Core/Src/deca_device.c ****         || ((config->stsMode & DWT_STS_CONFIG_MASK) == DWT_STS_CONFIG_MASK));
1352:Core/Src/deca_device.c **** #endif
1353:Core/Src/deca_device.c ****     int preamble_len;
1354:Core/Src/deca_device.c **** 
1355:Core/Src/deca_device.c ****     switch (config->txPreambLength)
1356:Core/Src/deca_device.c ****     {
1357:Core/Src/deca_device.c ****     case DWT_PLEN_32:
1358:Core/Src/deca_device.c ****         preamble_len = 32;
1359:Core/Src/deca_device.c ****         break;
1360:Core/Src/deca_device.c ****     case DWT_PLEN_64:
1361:Core/Src/deca_device.c ****         preamble_len = 64;
1362:Core/Src/deca_device.c ****         break;
ARM GAS  /tmp/cctZ3fzX.s 			page 42


1363:Core/Src/deca_device.c ****     case DWT_PLEN_72:
1364:Core/Src/deca_device.c ****         preamble_len = 72;
1365:Core/Src/deca_device.c ****         break;
1366:Core/Src/deca_device.c ****     case DWT_PLEN_128:
1367:Core/Src/deca_device.c ****         preamble_len = 128;
1368:Core/Src/deca_device.c ****         break;
1369:Core/Src/deca_device.c ****     default:
1370:Core/Src/deca_device.c ****         preamble_len = 256;
1371:Core/Src/deca_device.c ****         break;
1372:Core/Src/deca_device.c ****     }
1373:Core/Src/deca_device.c **** 
1374:Core/Src/deca_device.c ****     pdw3000local->sleep_mode &= (~(DWT_ALT_OPS | DWT_SEL_OPS3));  //clear the sleep mode ALT_OPS bi
1375:Core/Src/deca_device.c ****     pdw3000local->longFrames = config->phrMode ;
1376:Core/Src/deca_device.c ****     sts_len=GET_STS_REG_SET_VALUE((uint16_t)(config->stsLength));
1377:Core/Src/deca_device.c ****     pdw3000local->ststhreshold = (int16_t)((((uint32_t)sts_len) * 8) * STSQUAL_THRESH_64);
1378:Core/Src/deca_device.c ****     pdw3000local->stsconfig = config->stsMode;
1379:Core/Src/deca_device.c **** 
1380:Core/Src/deca_device.c ****     /////////////////////////////////////////////////////////////////////////
1381:Core/Src/deca_device.c ****     //SYS_CFG
1382:Core/Src/deca_device.c ****     //clear the PHR Mode, PHR Rate, STS Protocol, SDC, PDOA Mode,
1383:Core/Src/deca_device.c ****     //then set the relevant bits according to configuration of the PHR Mode, PHR Rate, STS Protocol
1384:Core/Src/deca_device.c ****     dwt_modify32bitoffsetreg(SYS_CFG_ID, 0, ~(SYS_CFG_PHR_MODE_BIT_MASK | SYS_CFG_PHR_6M8_BIT_MASK 
1385:Core/Src/deca_device.c ****         ((uint32_t)config->pdoaMode) << SYS_CFG_PDOA_MODE_BIT_OFFSET
1386:Core/Src/deca_device.c ****         | ((uint16_t)config->stsMode & DWT_STS_CONFIG_MASK) << SYS_CFG_CP_SPC_BIT_OFFSET
1387:Core/Src/deca_device.c ****         | (SYS_CFG_PHR_6M8_BIT_MASK & ((uint32_t)config->phrRate << SYS_CFG_PHR_6M8_BIT_OFFSET))
1388:Core/Src/deca_device.c ****         | mode);
1389:Core/Src/deca_device.c **** 
1390:Core/Src/deca_device.c **** 
1391:Core/Src/deca_device.c ****     if (scp)
1392:Core/Src/deca_device.c ****     {
1393:Core/Src/deca_device.c ****         //configure OPS tables for SCP mode
1394:Core/Src/deca_device.c ****         pdw3000local->sleep_mode |= DWT_ALT_OPS | DWT_SEL_OPS1;  //configure correct OPS table is k
1395:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_SCP | OTP_CFG
1396:Core/Src/deca_device.c **** 
1397:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(IP_CONFIG_LO_ID, 0, IP_CONFIG_LO_SCP);       //Set this if Ipatov a
1398:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(IP_CONFIG_HI_ID, 0, IP_CONFIG_HI_SCP);
1399:Core/Src/deca_device.c **** 
1400:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(STS_CONFIG_LO_ID, 0, STS_CONFIG_LO_SCP);
1401:Core/Src/deca_device.c ****         dwt_write8bitoffsetreg(STS_CONFIG_HI_ID, 0, STS_CONFIG_HI_SCP);
1402:Core/Src/deca_device.c ****     }
1403:Core/Src/deca_device.c ****     else //
1404:Core/Src/deca_device.c ****     {
1405:Core/Src/deca_device.c ****         uint16_t sts_mnth;
1406:Core/Src/deca_device.c ****         if (config->stsMode != DWT_STS_MODE_OFF)
1407:Core/Src/deca_device.c ****         {
1408:Core/Src/deca_device.c ****            
1409:Core/Src/deca_device.c ****             //configure CIA STS lower bound
1410:Core/Src/deca_device.c ****             if ((config->pdoaMode == DWT_PDOA_M1) || (config->pdoaMode == DWT_PDOA_M0))
1411:Core/Src/deca_device.c ****             {
1412:Core/Src/deca_device.c ****                 //In PDOA mode 1, number of accumulated symbols is the whole length of the STS
1413:Core/Src/deca_device.c ****                 sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLength)], CIA_MANUALL
1414:Core/Src/deca_device.c ****             }
1415:Core/Src/deca_device.c ****             else
1416:Core/Src/deca_device.c ****             {
1417:Core/Src/deca_device.c ****                 //In PDOA mode 3 number of accumulated symbols is half of the length of STS symbols
1418:Core/Src/deca_device.c ****                 sts_mnth=get_sts_mnth(sts_length_factors[(uint8_t)(config->stsLength)], CIA_MANUALL
1419:Core/Src/deca_device.c ****             }
ARM GAS  /tmp/cctZ3fzX.s 			page 43


1420:Core/Src/deca_device.c **** 
1421:Core/Src/deca_device.c ****             preamble_len += (sts_len) * 8;
1422:Core/Src/deca_device.c **** 
1423:Core/Src/deca_device.c ****             dwt_modify16bitoffsetreg(STS_CONFIG_LO_ID, 2, (uint16_t)~(STS_CONFIG_LO_STS_MAN_TH_BIT_
1424:Core/Src/deca_device.c **** 
1425:Core/Src/deca_device.c ****         }
1426:Core/Src/deca_device.c **** 
1427:Core/Src/deca_device.c ****         //configure OPS tables for non-SCP mode
1428:Core/Src/deca_device.c ****         if (preamble_len >= 256)
1429:Core/Src/deca_device.c ****         {
1430:Core/Src/deca_device.c ****             pdw3000local->sleep_mode |= DWT_ALT_OPS | DWT_SEL_OPS0;
1431:Core/Src/deca_device.c ****             dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_LONG | OT
1432:Core/Src/deca_device.c ****         }
1433:Core/Src/deca_device.c ****         else
1434:Core/Src/deca_device.c ****         {
1435:Core/Src/deca_device.c ****             dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_SHORT | O
1436:Core/Src/deca_device.c ****         }
1437:Core/Src/deca_device.c **** 
1438:Core/Src/deca_device.c ****     }
1439:Core/Src/deca_device.c **** 
1440:Core/Src/deca_device.c ****     dwt_modify8bitoffsetreg(DTUNE0_ID, 0, (uint8_t) ~DTUNE0_PRE_PAC_SYM_BIT_MASK, config->rxPAC);
1441:Core/Src/deca_device.c **** 
1442:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(STS_CFG0_ID, 0, sts_len-1);    /*Starts from 0 that is why -1*/
1443:Core/Src/deca_device.c **** 
1444:Core/Src/deca_device.c ****     if (config->txPreambLength == DWT_PLEN_72)
1445:Core/Src/deca_device.c ****     {
1446:Core/Src/deca_device.c ****         dwt_setplenfine(8); //value 8 sets fine preamble length to 72 symbols - this is needed to s
1447:Core/Src/deca_device.c ****     }
1448:Core/Src/deca_device.c ****     else
1449:Core/Src/deca_device.c ****     {
1450:Core/Src/deca_device.c ****         dwt_setplenfine(0); //clear the setting in the FINE_PLEN register.
1451:Core/Src/deca_device.c ****     }
1452:Core/Src/deca_device.c **** 
1453:Core/Src/deca_device.c ****     if((config->stsMode & DWT_STS_MODE_ND) == DWT_STS_MODE_ND)
1454:Core/Src/deca_device.c ****     {
1455:Core/Src/deca_device.c ****         //configure lower preamble detection threshold for no data STS mode
1456:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(DTUNE3_ID, 0, PD_THRESH_NO_DATA);
1457:Core/Src/deca_device.c ****     }
1458:Core/Src/deca_device.c ****     else
1459:Core/Src/deca_device.c ****     {
1460:Core/Src/deca_device.c ****         //configure default preamble detection threshold for other modes
1461:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(DTUNE3_ID, 0, PD_THRESH_DEFAULT);
1462:Core/Src/deca_device.c ****     }
1463:Core/Src/deca_device.c **** 
1464:Core/Src/deca_device.c ****     /////////////////////////////////////////////////////////////////////////
1465:Core/Src/deca_device.c ****     //CHAN_CTRL
1466:Core/Src/deca_device.c ****     temp = dwt_read32bitoffsetreg(CHAN_CTRL_ID, 0);
1467:Core/Src/deca_device.c ****     temp &= (~(CHAN_CTRL_RX_PCODE_BIT_MASK | CHAN_CTRL_TX_PCODE_BIT_MASK | CHAN_CTRL_SFD_TYPE_BIT_M
1468:Core/Src/deca_device.c **** 
1469:Core/Src/deca_device.c ****     if (chan == 9) temp |= CHAN_CTRL_RF_CHAN_BIT_MASK;
1470:Core/Src/deca_device.c **** 
1471:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_RX_PCODE_BIT_MASK & ((uint32_t)config->rxCode << CHAN_CTRL_RX_PCODE_BIT_OFFS
1472:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_TX_PCODE_BIT_MASK & ((uint32_t)config->txCode << CHAN_CTRL_TX_PCODE_BIT_OFFS
1473:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_SFD_TYPE_BIT_MASK & ((uint32_t)config->sfdType << CHAN_CTRL_SFD_TYPE_BIT_OFF
1474:Core/Src/deca_device.c **** 
1475:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(CHAN_CTRL_ID, 0, temp);
1476:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 44


1477:Core/Src/deca_device.c ****     /////////////////////////////////////////////////////////////////////////
1478:Core/Src/deca_device.c ****     //TX_FCTRL
1479:Core/Src/deca_device.c ****     // Set up TX Preamble Size, PRF and Data Rate
1480:Core/Src/deca_device.c ****     dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXBR_BIT_MASK | TX_FCTRL_TXPSR_BIT_MASK),
1481:Core/Src/deca_device.c ****                                               ((uint32_t)config->dataRate << TX_FCTRL_TXBR_BIT_OFFS
1482:Core/Src/deca_device.c ****                                               | ((uint32_t) config->txPreambLength) << TX_FCTRL_TXP
1483:Core/Src/deca_device.c **** 
1484:Core/Src/deca_device.c **** 
1485:Core/Src/deca_device.c ****     //DTUNE (SFD timeout)
1486:Core/Src/deca_device.c ****     // Don't allow 0 - SFD timeout will always be enabled
1487:Core/Src/deca_device.c ****     if (config->sfdTO == 0)
1488:Core/Src/deca_device.c ****     {
1489:Core/Src/deca_device.c ****         config->sfdTO = DWT_SFDTOC_DEF;
1490:Core/Src/deca_device.c ****     }
1491:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(DTUNE0_ID, 2, config->sfdTO);
1492:Core/Src/deca_device.c **** 
1493:Core/Src/deca_device.c **** 
1494:Core/Src/deca_device.c ****     ///////////////////////
1495:Core/Src/deca_device.c ****     // RF
1496:Core/Src/deca_device.c ****     if (chan == 9)
1497:Core/Src/deca_device.c ****     {
1498:Core/Src/deca_device.c ****         // Setup TX analog for ch9
1499:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(TX_CTRL_HI_ID, 0, RF_TXCTRL_CH9);
1500:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(PLL_CFG_ID, 0, RF_PLL_CFG_CH9);
1501:Core/Src/deca_device.c ****         // Setup RX analog for ch9
1502:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(RX_CTRL_HI_ID, 0, RF_RXCTRL_CH9);
1503:Core/Src/deca_device.c ****     }
1504:Core/Src/deca_device.c ****     else
1505:Core/Src/deca_device.c ****     {
1506:Core/Src/deca_device.c ****         // Setup TX analog for ch5
1507:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(TX_CTRL_HI_ID, 0, RF_TXCTRL_CH5);
1508:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(PLL_CFG_ID, 0, RF_PLL_CFG_CH5);
1509:Core/Src/deca_device.c ****     }
1510:Core/Src/deca_device.c **** 
1511:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(LDO_RLOAD_ID, 1, LDO_RLOAD_VAL_B1);
1512:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(TX_CTRL_LO_ID, 2, RF_TXCTRL_LO_B2);
1513:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(PLL_CAL_ID, 0, RF_PLL_CFG_LD);        // Extend the lock delay
1514:Core/Src/deca_device.c **** 
1515:Core/Src/deca_device.c ****     //Verify PLL lock bit is cleared
1516:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(SYS_STATUS_ID, 0, SYS_STATUS_CP_LOCK_BIT_MASK);
1517:Core/Src/deca_device.c **** 
1518:Core/Src/deca_device.c ****     ///////////////////////
1519:Core/Src/deca_device.c ****     // auto cal the PLL and change to IDLE_PLL state
1520:Core/Src/deca_device.c ****     dwt_setdwstate(DWT_DW_IDLE);
1521:Core/Src/deca_device.c **** 
1522:Core/Src/deca_device.c ****     for (flag=1,cnt=0;cnt<MAX_RETRIES_FOR_PLL;cnt++)
1523:Core/Src/deca_device.c ****     {
1524:Core/Src/deca_device.c ****         deca_usleep(DELAY_20uUSec);
1525:Core/Src/deca_device.c ****         if ((dwt_read8bitoffsetreg(SYS_STATUS_ID, 0) & SYS_STATUS_CP_LOCK_BIT_MASK))
1526:Core/Src/deca_device.c ****         {//PLL is locked
1527:Core/Src/deca_device.c ****             flag=0;
1528:Core/Src/deca_device.c ****             break;
1529:Core/Src/deca_device.c ****         }
1530:Core/Src/deca_device.c ****     }
1531:Core/Src/deca_device.c ****     if (flag)
1532:Core/Src/deca_device.c ****     {
1533:Core/Src/deca_device.c ****         return  DWT_ERROR;
ARM GAS  /tmp/cctZ3fzX.s 			page 45


1534:Core/Src/deca_device.c ****     }
1535:Core/Src/deca_device.c **** 
1536:Core/Src/deca_device.c ****     if ((config->rxCode >= 9) && (config->rxCode <= 24)) //only enable DGC for PRF 64
1537:Core/Src/deca_device.c ****     {
1538:Core/Src/deca_device.c ****         //load RX LUTs
1539:Core/Src/deca_device.c ****         /* If the OTP has DGC info programmed into it, do a manual kick from OTP. */
1540:Core/Src/deca_device.c ****         if (pdw3000local->dgc_otp_set == DWT_DGC_LOAD_FROM_OTP)
1541:Core/Src/deca_device.c ****         {
1542:Core/Src/deca_device.c ****             _dwt_kick_dgc_on_wakeup(chan);
1543:Core/Src/deca_device.c ****         }
1544:Core/Src/deca_device.c ****         /* Else we manually program hard-coded values into the DGC registers. */
1545:Core/Src/deca_device.c ****         else
1546:Core/Src/deca_device.c ****         {
1547:Core/Src/deca_device.c ****             dwt_configmrxlut(chan);
1548:Core/Src/deca_device.c ****         }
1549:Core/Src/deca_device.c ****         dwt_modify16bitoffsetreg(DGC_CFG_ID, 0x0, (uint16_t)~DGC_CFG_THR_64_BIT_MASK, DWT_DGC_CFG <
1550:Core/Src/deca_device.c ****     }
1551:Core/Src/deca_device.c ****     else
1552:Core/Src/deca_device.c ****     {
1553:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(DGC_CFG_ID, 0x0, (uint8_t)~DGC_CFG_RX_TUNE_EN_BIT_MASK);
1554:Core/Src/deca_device.c ****     }
1555:Core/Src/deca_device.c **** 
1556:Core/Src/deca_device.c ****     ///////////////////////
1557:Core/Src/deca_device.c ****     // PGF
1558:Core/Src/deca_device.c ****     error = dwt_pgf_cal(1);  //if the RX calibration routine fails the device receiver performance 
1559:Core/Src/deca_device.c **** 
1560:Core/Src/deca_device.c **** 
1561:Core/Src/deca_device.c ****     return error;
1562:Core/Src/deca_device.c **** } // end dwt_configure()
1563:Core/Src/deca_device.c **** 
1564:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1565:Core/Src/deca_device.c ****  *
1566:Core/Src/deca_device.c ****  * @brief This function runs the PGF calibration. This is needed prior to reception.
1567:Core/Src/deca_device.c ****  * Note: If the RX calibration routine fails the device receiver performance will be severely affec
1568:Core/Src/deca_device.c ****  *
1569:Core/Src/deca_device.c ****  * input parameters
1570:Core/Src/deca_device.c ****  * @param ldoen    -   if set to 1 the function will enable LDOs prior to calibration and disable a
1571:Core/Src/deca_device.c ****  *
1572:Core/Src/deca_device.c ****  * return result of PGF calibration (DWT_ERROR/-1 = error)
1573:Core/Src/deca_device.c ****  *
1574:Core/Src/deca_device.c ****  */
1575:Core/Src/deca_device.c **** int dwt_pgf_cal(int ldoen)
1576:Core/Src/deca_device.c **** {
1577:Core/Src/deca_device.c ****     int temp;
1578:Core/Src/deca_device.c ****     uint16_t val;
1579:Core/Src/deca_device.c **** 
1580:Core/Src/deca_device.c ****     //PGF needs LDOs turned on - ensure PGF LDOs are enabled
1581:Core/Src/deca_device.c ****     if (ldoen == 1)
1582:Core/Src/deca_device.c ****     {
1583:Core/Src/deca_device.c ****         val = dwt_read16bitoffsetreg(LDO_CTRL_ID, 0);
1584:Core/Src/deca_device.c **** 
1585:Core/Src/deca_device.c ****         dwt_or16bitoffsetreg(LDO_CTRL_ID, 0, (
1586:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDIF2_EN_BIT_MASK |
1587:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDMS3_EN_BIT_MASK |
1588:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDMS1_EN_BIT_MASK));
1589:Core/Src/deca_device.c ****     }
1590:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 46


1591:Core/Src/deca_device.c ****     //Run PGF Cal
1592:Core/Src/deca_device.c ****     temp = dwt_run_pgfcal();
1593:Core/Src/deca_device.c **** 
1594:Core/Src/deca_device.c ****     //Turn off RX LDOs if previously off
1595:Core/Src/deca_device.c ****     if (ldoen == 1)
1596:Core/Src/deca_device.c ****     {
1597:Core/Src/deca_device.c ****         dwt_and16bitoffsetreg(LDO_CTRL_ID, 0, val); // restore LDO values
1598:Core/Src/deca_device.c ****     }
1599:Core/Src/deca_device.c ****     return temp;
1600:Core/Src/deca_device.c **** }
1601:Core/Src/deca_device.c **** 
1602:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1603:Core/Src/deca_device.c ****  *
1604:Core/Src/deca_device.c ****  * @brief This function runs the PGF calibration. This is needed prior to reception.
1605:Core/Src/deca_device.c ****  *
1606:Core/Src/deca_device.c ****  * input parameters
1607:Core/Src/deca_device.c ****  *
1608:Core/Src/deca_device.c ****  * return result of PGF calibration (DWT_ERROR/-1 = error)
1609:Core/Src/deca_device.c ****  *
1610:Core/Src/deca_device.c ****  */
1611:Core/Src/deca_device.c **** int dwt_run_pgfcal(void)
1612:Core/Src/deca_device.c **** {
1613:Core/Src/deca_device.c ****     int result = DWT_SUCCESS;
1614:Core/Src/deca_device.c ****     uint32_t    data;
1615:Core/Src/deca_device.c ****     uint32_t    val = 0;
1616:Core/Src/deca_device.c ****     uint8_t     cnt,flag;
1617:Core/Src/deca_device.c ****     //put into cal mode
1618:Core/Src/deca_device.c ****     //Turn on delay mode
1619:Core/Src/deca_device.c ****     data = (((uint32_t)0x02) << RX_CAL_CFG_COMP_DLY_BIT_OFFSET) | (RX_CAL_CFG_CAL_MODE_BIT_MASK & 0
1620:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(RX_CAL_CFG_ID, 0x0, data);
1621:Core/Src/deca_device.c ****     // Trigger PGF Cal
1622:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(RX_CAL_CFG_ID, 0x0, RX_CAL_CFG_CAL_EN_BIT_MASK);
1623:Core/Src/deca_device.c ****     
1624:Core/Src/deca_device.c ****     for (flag=1,cnt=0;cnt<MAX_RETRIES_FOR_PGF;cnt++)
1625:Core/Src/deca_device.c ****     {
1626:Core/Src/deca_device.c ****         deca_usleep(DELAY_20uUSec);
1627:Core/Src/deca_device.c ****         if(dwt_read8bitoffsetreg(RX_CAL_STS_ID, 0x0) == 1)
1628:Core/Src/deca_device.c ****         {//PGF cal is complete
1629:Core/Src/deca_device.c ****             flag=0;
1630:Core/Src/deca_device.c ****             break;
1631:Core/Src/deca_device.c ****         }
1632:Core/Src/deca_device.c ****     }
1633:Core/Src/deca_device.c ****     if (flag)
1634:Core/Src/deca_device.c ****     {
1635:Core/Src/deca_device.c ****         result = DWT_ERROR;
1636:Core/Src/deca_device.c ****     }
1637:Core/Src/deca_device.c **** 
1638:Core/Src/deca_device.c ****     // Put into normal mode
1639:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(RX_CAL_CFG_ID, 0x0, 0);
1640:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(RX_CAL_STS_ID, 0x0, 1); //clear the status
1641:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(RX_CAL_CFG_ID, 0x2, 0x1); //enable reading
1642:Core/Src/deca_device.c ****     val = dwt_read32bitoffsetreg(RX_CAL_RESI_ID, 0x0);
1643:Core/Src/deca_device.c ****     if (val == ERR_RX_CAL_FAIL)
1644:Core/Src/deca_device.c ****     {
1645:Core/Src/deca_device.c ****         //PGF I Cal Fail
1646:Core/Src/deca_device.c ****         result = DWT_ERROR;
1647:Core/Src/deca_device.c ****     }
ARM GAS  /tmp/cctZ3fzX.s 			page 47


1648:Core/Src/deca_device.c ****     val = dwt_read32bitoffsetreg(RX_CAL_RESQ_ID, 0x0);
1649:Core/Src/deca_device.c ****     if (val == ERR_RX_CAL_FAIL)
1650:Core/Src/deca_device.c ****     {
1651:Core/Src/deca_device.c ****         //PGF Q Cal Fail
1652:Core/Src/deca_device.c ****         result = DWT_ERROR;
1653:Core/Src/deca_device.c ****     }
1654:Core/Src/deca_device.c ****     
1655:Core/Src/deca_device.c ****     return result;
1656:Core/Src/deca_device.c **** }
1657:Core/Src/deca_device.c **** 
1658:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1659:Core/Src/deca_device.c ****  * @brief This API function writes the antenna delay (in time units) to RX registers
1660:Core/Src/deca_device.c ****  *
1661:Core/Src/deca_device.c ****  * input parameters:
1662:Core/Src/deca_device.c ****  * @param rxDelay - this is the total (RX) antenna delay value, which
1663:Core/Src/deca_device.c ****  *                          will be programmed into the RX register
1664:Core/Src/deca_device.c ****  *
1665:Core/Src/deca_device.c ****  * output parameters
1666:Core/Src/deca_device.c ****  *
1667:Core/Src/deca_device.c ****  * no return value
1668:Core/Src/deca_device.c ****  */
1669:Core/Src/deca_device.c **** void dwt_setrxantennadelay(uint16_t rxDelay)
1670:Core/Src/deca_device.c **** {
1671:Core/Src/deca_device.c ****     // Set the RX antenna delay for auto TX timestamp adjustment
1672:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(CIA_CONF_ID, 0, rxDelay);
1673:Core/Src/deca_device.c **** }
1674:Core/Src/deca_device.c **** 
1675:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1676:Core/Src/deca_device.c ****  * @brief This API function writes the antenna delay (in time units) to TX registers
1677:Core/Src/deca_device.c ****  *
1678:Core/Src/deca_device.c ****  * input parameters:
1679:Core/Src/deca_device.c ****  * @param txDelay - this is the total (TX) antenna delay value, which
1680:Core/Src/deca_device.c ****  *                          will be programmed into the TX delay register
1681:Core/Src/deca_device.c ****  *
1682:Core/Src/deca_device.c ****  * output parameters
1683:Core/Src/deca_device.c ****  *
1684:Core/Src/deca_device.c ****  * no return value
1685:Core/Src/deca_device.c ****  */
1686:Core/Src/deca_device.c **** void dwt_settxantennadelay(uint16_t txDelay)
1687:Core/Src/deca_device.c **** {
1688:Core/Src/deca_device.c ****     // Set the TX antenna delay for auto TX timestamp adjustment
1689:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(TX_ANTD_ID, 0, txDelay);
1690:Core/Src/deca_device.c **** }
1691:Core/Src/deca_device.c **** 
1692:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1693:Core/Src/deca_device.c ****  * @brief This API function writes the supplied TX data into the DW3000's
1694:Core/Src/deca_device.c ****  * TX buffer.  The input parameters are the data length in bytes and a pointer
1695:Core/Src/deca_device.c ****  * to those data bytes.
1696:Core/Src/deca_device.c ****  *
1697:Core/Src/deca_device.c ****  * input parameters
1698:Core/Src/deca_device.c ****  * @param txDataLength   - This is the total length of data (in bytes) to write to the tx buffer.
1699:Core/Src/deca_device.c ****  *                         Note: the size of tx buffer is 1024 bytes.
1700:Core/Src/deca_device.c ****  *                         The standard PHR mode allows to transmit frames of up to 127 bytes (incl
1701:Core/Src/deca_device.c ****  *                         The extended PHR mode allows to transmit frames of up to 1023 bytes (inc
1702:Core/Src/deca_device.c ****  *                         if > 127 is programmed, DWT_PHRMODE_EXT needs to be set in the phrMode c
1703:Core/Src/deca_device.c ****  *                         see dwt_configure function
1704:Core/Src/deca_device.c ****  * @param txDataBytes    - Pointer to the user�s buffer containing the data to send.
ARM GAS  /tmp/cctZ3fzX.s 			page 48


1705:Core/Src/deca_device.c ****  * @param txBufferOffset - This specifies an offset in the DW IC�s TX Buffer at which to start wr
1706:Core/Src/deca_device.c ****  *
1707:Core/Src/deca_device.c ****  * output parameters
1708:Core/Src/deca_device.c ****  *
1709:Core/Src/deca_device.c ****  * returns DWT_SUCCESS for success, or DWT_ERROR for error
1710:Core/Src/deca_device.c ****  */
1711:Core/Src/deca_device.c **** int dwt_writetxdata(uint16_t txDataLength, uint8_t *txDataBytes, uint16_t txBufferOffset)
1712:Core/Src/deca_device.c **** {
1713:Core/Src/deca_device.c **** #ifdef DWT_API_ERROR_CHECK
1714:Core/Src/deca_device.c ****     assert((pdw3000local->longFrames && (txDataLength <= EXT_FRAME_LEN)) ||\
1715:Core/Src/deca_device.c ****            (txDataLength <= STD_FRAME_LEN));
1716:Core/Src/deca_device.c ****     assert((txBufferOffset + txDataLength) < TX_BUFFER_MAX_LEN);
1717:Core/Src/deca_device.c **** #endif
1718:Core/Src/deca_device.c **** 
1719:Core/Src/deca_device.c ****     if ((txBufferOffset + txDataLength) < TX_BUFFER_MAX_LEN)
1720:Core/Src/deca_device.c ****     {
1721:Core/Src/deca_device.c ****         if(txBufferOffset <= REG_DIRECT_OFFSET_MAX_LEN)
1722:Core/Src/deca_device.c ****         {
1723:Core/Src/deca_device.c ****             /* Directly write the data to the IC TX buffer */
1724:Core/Src/deca_device.c ****             dwt_writetodevice(TX_BUFFER_ID, txBufferOffset, txDataLength, txDataBytes);
1725:Core/Src/deca_device.c ****         }
1726:Core/Src/deca_device.c ****         else
1727:Core/Src/deca_device.c ****         {
1728:Core/Src/deca_device.c ****             /* Program the indirect offset register A for specified offset to TX buffer */
1729:Core/Src/deca_device.c ****             dwt_write32bitreg(INDIRECT_ADDR_A_ID, (TX_BUFFER_ID >> 16) );
1730:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   txBufferOffset);
1731:Core/Src/deca_device.c **** 
1732:Core/Src/deca_device.c ****             /* Indirectly write the data to the IC TX buffer */
1733:Core/Src/deca_device.c ****             dwt_writetodevice(INDIRECT_POINTER_A_ID, 0, txDataLength, txDataBytes);
1734:Core/Src/deca_device.c ****         }
1735:Core/Src/deca_device.c ****         return DWT_SUCCESS;
1736:Core/Src/deca_device.c ****     }
1737:Core/Src/deca_device.c ****     else
1738:Core/Src/deca_device.c ****         return DWT_ERROR;
1739:Core/Src/deca_device.c **** } // end dwt_writetxdata()
1740:Core/Src/deca_device.c **** 
1741:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1742:Core/Src/deca_device.c ****  * @brief This API function configures the TX frame control register before the transmission of a f
1743:Core/Src/deca_device.c ****  *
1744:Core/Src/deca_device.c ****  * input parameters:
1745:Core/Src/deca_device.c ****  * @param txFrameLength - this is the length of TX message (including the 2 byte CRC) - max is 1023
1746:Core/Src/deca_device.c ****  *                              NOTE: standard PHR mode allows up to 127 bytes
1747:Core/Src/deca_device.c ****  *                              if > 127 is programmed, DWT_PHRMODE_EXT needs to be set in the phrM
1748:Core/Src/deca_device.c ****  *                              see dwt_configure function
1749:Core/Src/deca_device.c ****  * @param txBufferOffset - the offset in the tx buffer to start writing the data
1750:Core/Src/deca_device.c ****  * @param ranging - 1 if this is a ranging frame, else 0
1751:Core/Src/deca_device.c ****  *
1752:Core/Src/deca_device.c ****  * output parameters
1753:Core/Src/deca_device.c ****  *
1754:Core/Src/deca_device.c ****  * no return value
1755:Core/Src/deca_device.c ****  */
1756:Core/Src/deca_device.c **** void dwt_writetxfctrl(uint16_t txFrameLength, uint16_t txBufferOffset, uint8_t ranging)
1757:Core/Src/deca_device.c **** {
1758:Core/Src/deca_device.c ****     uint32_t reg32;
1759:Core/Src/deca_device.c **** #ifdef DWT_API_ERROR_CHECK
1760:Core/Src/deca_device.c ****     assert((pdw3000local->longFrames && (txFrameLength <= EXT_FRAME_LEN)) ||\
1761:Core/Src/deca_device.c ****            (txFrameLength <= STD_FRAME_LEN));
ARM GAS  /tmp/cctZ3fzX.s 			page 49


1762:Core/Src/deca_device.c **** #endif
1763:Core/Src/deca_device.c **** 
1764:Core/Src/deca_device.c ****     //DW3000/3700 - if offset is > 127, 128 needs to be added before data is written, this will be 
1765:Core/Src/deca_device.c ****     //prior to writing the data
1766:Core/Src/deca_device.c ****     if(txBufferOffset <= 127)
1767:Core/Src/deca_device.c ****     {
1768:Core/Src/deca_device.c ****         // Write the frame length to the TX frame control register
1769:Core/Src/deca_device.c ****         reg32 = txFrameLength | ((uint32_t)(txBufferOffset) << TX_FCTRL_TXB_OFFSET_BIT_OFFSET) | ((
1770:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXB_OFFSET_BIT_MASK | TX_FCTRL_TR_BIT_M
1771:Core/Src/deca_device.c ****     }
1772:Core/Src/deca_device.c ****     else
1773:Core/Src/deca_device.c ****     {
1774:Core/Src/deca_device.c ****         // Write the frame length to the TX frame control register
1775:Core/Src/deca_device.c ****         reg32 = txFrameLength | ((uint32_t)(txBufferOffset + DWT_TX_BUFF_OFFSET_ADJUST) << TX_FCTRL
1776:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXB_OFFSET_BIT_MASK | TX_FCTRL_TR_BIT_M
1777:Core/Src/deca_device.c ****         reg32 = dwt_read8bitoffsetreg(SAR_CTRL_ID, 0); //DW3000/3700 - need to read this to load th
1778:Core/Src/deca_device.c ****     }
1779:Core/Src/deca_device.c **** 
1780:Core/Src/deca_device.c **** } // end dwt_writetxfctrl()
1781:Core/Src/deca_device.c **** 
1782:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1783:Core/Src/deca_device.c **** * @brief This API function is used to configure frame preamble length, the frame premable length ca
1784:Core/Src/deca_device.c **** * configured in steps of 8, from 16 to 2048 symbols. If a non-zero value is configured, then the TX
1785:Core/Src/deca_device.c **** *
1786:Core/Src/deca_device.c **** * input parameters:
1787:Core/Src/deca_device.c **** * @param preambleLength - sets the length of the preamble, value of 0 disables this setting and the
1788:Core/Src/deca_device.c **** *                         frame will be dependent on the TXPSR_PE setting as configured by dwt_conf
1789:Core/Src/deca_device.c **** *
1790:Core/Src/deca_device.c **** * output parameters
1791:Core/Src/deca_device.c **** *
1792:Core/Src/deca_device.c **** * no return value
1793:Core/Src/deca_device.c **** */
1794:Core/Src/deca_device.c **** void dwt_setplenfine(uint8_t preambleLength)
1795:Core/Src/deca_device.c **** {
1796:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(TX_FCTRL_HI_ID, 1, preambleLength);
1797:Core/Src/deca_device.c **** }
1798:Core/Src/deca_device.c **** 
1799:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1800:Core/Src/deca_device.c ****  * @brief This is used to read the data from the RX scratch buffer, from an offset location given b
1801:Core/Src/deca_device.c ****  *
1802:Core/Src/deca_device.c ****  * input parameters
1803:Core/Src/deca_device.c ****  * @param buffer - the buffer into which the data will be read
1804:Core/Src/deca_device.c ****  * @param length - the length of data to read (in bytes)
1805:Core/Src/deca_device.c ****  * @param rxBufferOffset - the offset in the rx buffer from which to read the data
1806:Core/Src/deca_device.c ****  *
1807:Core/Src/deca_device.c ****  * output parameters
1808:Core/Src/deca_device.c ****  *
1809:Core/Src/deca_device.c ****  * no return value
1810:Core/Src/deca_device.c ****  */
1811:Core/Src/deca_device.c **** void dwt_read_rx_scratch_data(uint8_t *buffer, uint16_t length, uint16_t rxBufferOffset)
1812:Core/Src/deca_device.c **** {
1813:Core/Src/deca_device.c ****     //!!Check later if needs range protection.
1814:Core/Src/deca_device.c **** 
1815:Core/Src/deca_device.c ****     /* Directly read data from the IC to the buffer */
1816:Core/Src/deca_device.c ****     dwt_readfromdevice(SCRATCH_RAM_ID,rxBufferOffset,length,buffer);
1817:Core/Src/deca_device.c **** }
1818:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 50


1819:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1820:Core/Src/deca_device.c ****  * @brief This is used to read the data from the RX buffer, from an offset location give by offset 
1821:Core/Src/deca_device.c ****  *
1822:Core/Src/deca_device.c ****  * input parameters
1823:Core/Src/deca_device.c ****  * @param buffer - the buffer into which the data will be read
1824:Core/Src/deca_device.c ****  * @param length - the length of data to read (in bytes)
1825:Core/Src/deca_device.c ****  * @param rxBufferOffset - the offset in the rx buffer from which to read the data
1826:Core/Src/deca_device.c ****  *
1827:Core/Src/deca_device.c ****  * output parameters
1828:Core/Src/deca_device.c ****  *
1829:Core/Src/deca_device.c ****  * no return value
1830:Core/Src/deca_device.c ****  */
1831:Core/Src/deca_device.c **** void dwt_readrxdata(uint8_t *buffer, uint16_t length, uint16_t rxBufferOffset)
1832:Core/Src/deca_device.c **** {
1833:Core/Src/deca_device.c ****     uint32_t  rx_buff_addr;
1834:Core/Src/deca_device.c **** 
1835:Core/Src/deca_device.c ****     if (pdw3000local->dblbuffon == DBL_BUFF_ACCESS_BUFFER_1)  //if the flag is 0x3 we are reading f
1836:Core/Src/deca_device.c ****     {
1837:Core/Src/deca_device.c ****         rx_buff_addr=RX_BUFFER_1_ID;
1838:Core/Src/deca_device.c ****     }
1839:Core/Src/deca_device.c ****     else //reading from RX_BUFFER_0 - also when non-double buffer mode
1840:Core/Src/deca_device.c ****     {
1841:Core/Src/deca_device.c ****         rx_buff_addr=RX_BUFFER_0_ID;
1842:Core/Src/deca_device.c ****     }
1843:Core/Src/deca_device.c **** 
1844:Core/Src/deca_device.c ****     if ((rxBufferOffset + length) <= RX_BUFFER_MAX_LEN)
1845:Core/Src/deca_device.c ****     {
1846:Core/Src/deca_device.c ****         if(rxBufferOffset <= REG_DIRECT_OFFSET_MAX_LEN)
1847:Core/Src/deca_device.c ****         {
1848:Core/Src/deca_device.c ****             /* Directly read data from the IC to the buffer */
1849:Core/Src/deca_device.c ****             dwt_readfromdevice(rx_buff_addr,rxBufferOffset,length,buffer);
1850:Core/Src/deca_device.c ****         }
1851:Core/Src/deca_device.c ****         else
1852:Core/Src/deca_device.c ****         {
1853:Core/Src/deca_device.c ****             /* Program the indirect offset registers B for specified offset to RX buffer */
1854:Core/Src/deca_device.c ****             dwt_write32bitreg(INDIRECT_ADDR_A_ID, (rx_buff_addr >> 16) );
1855:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   rxBufferOffset);
1856:Core/Src/deca_device.c **** 
1857:Core/Src/deca_device.c ****             /* Indirectly read data from the IC to the buffer */
1858:Core/Src/deca_device.c ****             dwt_readfromdevice(INDIRECT_POINTER_A_ID, 0, length, buffer);
1859:Core/Src/deca_device.c ****         }
1860:Core/Src/deca_device.c ****     }
1861:Core/Src/deca_device.c **** }
1862:Core/Src/deca_device.c **** 
1863:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1864:Core/Src/deca_device.c ****  * @brief This is used to read the 18 bit data from the Accumulator buffer, from an offset location
1865:Core/Src/deca_device.c ****  *        for 18 bit complex samples, each sample is 6 bytes (3 real and 3 imaginary)
1866:Core/Src/deca_device.c ****  *
1867:Core/Src/deca_device.c ****  *
1868:Core/Src/deca_device.c ****  * NOTE: Because of an internal memory access delay when reading the accumulator the first octet ou
1869:Core/Src/deca_device.c ****  *       that should be discarded. This is true no matter what sub-index the read begins at.
1870:Core/Src/deca_device.c ****  *
1871:Core/Src/deca_device.c ****  * input parameters
1872:Core/Src/deca_device.c ****  * @param buffer - the buffer into which the data will be read
1873:Core/Src/deca_device.c ****  * @param length - the length of data to read (in bytes)
1874:Core/Src/deca_device.c ****  * @param accOffset - the offset in the acc buffer from which to read the data, this is a complex s
1875:Core/Src/deca_device.c ****  *                    e.g. to read 10 samples starting at sample 100
ARM GAS  /tmp/cctZ3fzX.s 			page 51


1876:Core/Src/deca_device.c ****  *                    buffer would need to be >= 10*6 + 1, length is 61 (1 is for dummy), accOffset
1877:Core/Src/deca_device.c ****  *
1878:Core/Src/deca_device.c ****  * output parameters
1879:Core/Src/deca_device.c ****  *
1880:Core/Src/deca_device.c ****  * no return value
1881:Core/Src/deca_device.c ****  */
1882:Core/Src/deca_device.c **** void dwt_readaccdata(uint8_t *buffer, uint16_t length, uint16_t accOffset)
1883:Core/Src/deca_device.c **** {
1884:Core/Src/deca_device.c ****     // Force on the ACC clocks if we are sequenced
1885:Core/Src/deca_device.c ****     dwt_or16bitoffsetreg(CLK_CTRL_ID, 0x0, CLK_CTRL_ACC_MCLK_EN_BIT_MASK | CLK_CTRL_ACC_CLK_EN_BIT_
1886:Core/Src/deca_device.c **** 
1887:Core/Src/deca_device.c ****     if ((accOffset + length) <= ACC_BUFFER_MAX_LEN)
1888:Core/Src/deca_device.c ****     {
1889:Core/Src/deca_device.c ****         if(accOffset <= REG_DIRECT_OFFSET_MAX_LEN)
1890:Core/Src/deca_device.c ****         {
1891:Core/Src/deca_device.c ****             /* Directly read data from the IC to the buffer */
1892:Core/Src/deca_device.c ****             dwt_readfromdevice(ACC_MEM_ID, accOffset, length, buffer);
1893:Core/Src/deca_device.c ****         }
1894:Core/Src/deca_device.c ****         else
1895:Core/Src/deca_device.c ****         {
1896:Core/Src/deca_device.c ****             /* Program the indirect offset registers B for specified offset to ACC */
1897:Core/Src/deca_device.c ****             dwt_write32bitreg(INDIRECT_ADDR_A_ID, (ACC_MEM_ID >> 16) );
1898:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   accOffset);
1899:Core/Src/deca_device.c **** 
1900:Core/Src/deca_device.c ****             /* Indirectly read data from the IC to the buffer */
1901:Core/Src/deca_device.c ****             dwt_readfromdevice(INDIRECT_POINTER_A_ID, 0, length, buffer);
1902:Core/Src/deca_device.c ****         }
1903:Core/Src/deca_device.c ****     }
1904:Core/Src/deca_device.c ****     else
1905:Core/Src/deca_device.c ****     {
1906:Core/Src/deca_device.c ****         assert(0);
1907:Core/Src/deca_device.c ****     }
1908:Core/Src/deca_device.c **** 
1909:Core/Src/deca_device.c ****     // Revert clocks back
1910:Core/Src/deca_device.c ****     dwt_and16bitoffsetreg(CLK_CTRL_ID, 0x0, (uint16_t)~(CLK_CTRL_ACC_MCLK_EN_BIT_MASK | CLK_CTRL_AC
1911:Core/Src/deca_device.c **** }
1912:Core/Src/deca_device.c **** 
1913:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1914:Core/Src/deca_device.c ****  * @brief This is used to read the crystal offset (relating to the frequency offset of the far DW30
1915:Core/Src/deca_device.c ****  *        Note: the returned signed 16-bit number should be divided by by 2^26 to get ppm offset.
1916:Core/Src/deca_device.c ****  *
1917:Core/Src/deca_device.c ****  * input parameters - NONE
1918:Core/Src/deca_device.c ****  *
1919:Core/Src/deca_device.c ****  * return value - the (int12) signed offset value. (s[-15:-26])
1920:Core/Src/deca_device.c ****  *                A positive value means the local RX clock is running faster than the remote TX de
1921:Core/Src/deca_device.c ****  */
1922:Core/Src/deca_device.c **** int16_t dwt_readclockoffset(void)
1923:Core/Src/deca_device.c **** {
1924:Core/Src/deca_device.c ****     uint16_t  regval = 0 ;
1925:Core/Src/deca_device.c **** 
1926:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)  //if the flag is non zero - we are either accessing RX_BUFFER
1927:Core/Src/deca_device.c ****     {
1928:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_1:
1929:Core/Src/deca_device.c ****         //!!! Assumes that Indirect pointer register B was already set. This is done in the dwt_set
1930:Core/Src/deca_device.c ****         regval = dwt_read16bitoffsetreg(INDIRECT_POINTER_B_ID, (BUF1_CIA_DIAG_0-BUF1_RX_FINFO)) & C
1931:Core/Src/deca_device.c ****         break;
1932:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
ARM GAS  /tmp/cctZ3fzX.s 			page 52


1933:Core/Src/deca_device.c ****         regval = dwt_read16bitoffsetreg(BUF0_CIA_DIAG_0, 0) & CIA_DIAG_0_COE_PPM_BIT_MASK;
1934:Core/Src/deca_device.c ****         break;
1935:Core/Src/deca_device.c ****     default:
1936:Core/Src/deca_device.c ****         regval = dwt_read16bitoffsetreg(CIA_DIAG_0_ID, 0) & CIA_DIAG_0_COE_PPM_BIT_MASK;
1937:Core/Src/deca_device.c ****         break;
1938:Core/Src/deca_device.c ****     }
1939:Core/Src/deca_device.c **** 
1940:Core/Src/deca_device.c ****     if (regval & B11_SIGN_EXTEND_TEST)
1941:Core/Src/deca_device.c ****     {
1942:Core/Src/deca_device.c ****         regval |= B11_SIGN_EXTEND_MASK;             // sign extend bit #12 to the whole short
1943:Core/Src/deca_device.c ****     }
1944:Core/Src/deca_device.c **** 
1945:Core/Src/deca_device.c ****     return (int16_t) regval ;
1946:Core/Src/deca_device.c **** }
1947:Core/Src/deca_device.c **** 
1948:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1949:Core/Src/deca_device.c ****  * @brief This is used to read the RX carrier integrator value (relating to the frequency offset of
1950:Core/Src/deca_device.c ****  *
1951:Core/Src/deca_device.c ****  * NOTE: This is a 21-bit signed quantity, the function sign extends the most significant bit, whic
1952:Core/Src/deca_device.c ****  *       (numbering from bit zero) to return a 32-bit signed integer value.
1953:Core/Src/deca_device.c ****  *
1954:Core/Src/deca_device.c ****  * input parameters - NONE
1955:Core/Src/deca_device.c ****  *
1956:Core/Src/deca_device.c ****  * return value - the (int32_t) signed carrier integrator value.
1957:Core/Src/deca_device.c ****  *                A positive value means the local RX clock is running slower than the remote TX de
1958:Core/Src/deca_device.c ****  */
1959:Core/Src/deca_device.c **** int32_t dwt_readcarrierintegrator(void)
1960:Core/Src/deca_device.c **** {
1961:Core/Src/deca_device.c ****     uint32_t  regval = 0 ;
1962:Core/Src/deca_device.c **** 
1963:Core/Src/deca_device.c ****     int     j ;
1964:Core/Src/deca_device.c ****     uint8_t   buffer[DRX_CARRIER_INT_LEN] ;
1965:Core/Src/deca_device.c **** 
1966:Core/Src/deca_device.c ****     /* Read 3 bytes into buffer (21-bit quantity) */
1967:Core/Src/deca_device.c ****     dwt_readfromdevice(DRX_DIAG3_ID, 0, DRX_CARRIER_INT_LEN, buffer);//
1968:Core/Src/deca_device.c **** 
1969:Core/Src/deca_device.c ****     for (j = 2 ; j >= 0 ; j --)  // arrange the three bytes into an unsigned integer value
1970:Core/Src/deca_device.c ****     {
1971:Core/Src/deca_device.c ****         regval = (regval << 8) + buffer[j] ;
1972:Core/Src/deca_device.c ****     }
1973:Core/Src/deca_device.c **** 
1974:Core/Src/deca_device.c ****     if (regval & B20_SIGN_EXTEND_TEST)
1975:Core/Src/deca_device.c ****     {
1976:Core/Src/deca_device.c ****         regval |= B20_SIGN_EXTEND_MASK; // sign extend bit #20 to whole word
1977:Core/Src/deca_device.c ****     }
1978:Core/Src/deca_device.c **** 
1979:Core/Src/deca_device.c ****     return (int32_t) regval ; // cast unsigned value to signed quantity.
1980:Core/Src/deca_device.c **** }
1981:Core/Src/deca_device.c **** 
1982:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
1983:Core/Src/deca_device.c ****  * @brief this function reads the STS signal quality index
1984:Core/Src/deca_device.c ****  *
1985:Core/Src/deca_device.c ****  * input parameters
1986:Core/Src/deca_device.c ****  * @param rxStsQualityIndex - the (int16_t) signed STS quality index value.
1987:Core/Src/deca_device.c ****  *
1988:Core/Src/deca_device.c ****  * output parameters
1989:Core/Src/deca_device.c ****  * return value - >=0 for good and < 0 if bad STS quality.
ARM GAS  /tmp/cctZ3fzX.s 			page 53


1990:Core/Src/deca_device.c ****  *
1991:Core/Src/deca_device.c ****  * Note: For the 64 MHz PRF if value is >= 90% of the STS length then we can assume good STS recept
1992:Core/Src/deca_device.c ****  *       Otherwise the STS timestamp may not be accurate.
1993:Core/Src/deca_device.c ****  */
1994:Core/Src/deca_device.c **** int dwt_readstsquality(int16_t* rxStsQualityIndex)
1995:Core/Src/deca_device.c **** {
1996:Core/Src/deca_device.c ****     uint16_t preambleCount;
1997:Core/Src/deca_device.c **** 
1998:Core/Src/deca_device.c ****     //read STS preamble count value
1999:Core/Src/deca_device.c ****     preambleCount = dwt_read16bitoffsetreg(STS_STS_ID, 0) & STS_STS_ACC_QUAL_BIT_MASK; //  dwt_read
2000:Core/Src/deca_device.c **** 
2001:Core/Src/deca_device.c ****     if(preambleCount & STS_ACC_CP_QUAL_SIGNTST)
2002:Core/Src/deca_device.c ****         preambleCount |= STS_ACC_CP_QUAL_SIGNEXT;
2003:Core/Src/deca_device.c **** 
2004:Core/Src/deca_device.c ****     *rxStsQualityIndex = (int16_t)preambleCount;
2005:Core/Src/deca_device.c **** 
2006:Core/Src/deca_device.c ****     //determine if the STS Rx quality is good or bad (return >=0 for good and < 0 if bad)
2007:Core/Src/deca_device.c ****     return (int)((int16_t)preambleCount - pdw3000local->ststhreshold);
2008:Core/Src/deca_device.c **** }
2009:Core/Src/deca_device.c **** 
2010:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2011:Core/Src/deca_device.c ****  * @brief this function reads the STS status
2012:Core/Src/deca_device.c ****  *
2013:Core/Src/deca_device.c ****  * input parameters
2014:Core/Src/deca_device.c ****  * @param stsStatus - the (uint16_t) STS status value. 9 bits of this buffer are populated with var
2015:Core/Src/deca_device.c ****  *                    remaining 7 bits are ignored.
2016:Core/Src/deca_device.c ****  * @param sts_num   - 0 for 1st STS, 1 for 2nd STS (2nd only valid when PDOA Mode 3 is used)
2017:Core/Src/deca_device.c ****  *
2018:Core/Src/deca_device.c ****  * output parameters
2019:Core/Src/deca_device.c ****  * return value DWT_SUCCESS for good/valid STS status, DWT_ERROR if bad STS status.
2020:Core/Src/deca_device.c ****  */
2021:Core/Src/deca_device.c **** int dwt_readstsstatus(uint16_t* stsStatus, int sts_num)
2022:Core/Src/deca_device.c **** {
2023:Core/Src/deca_device.c ****     int ret = DWT_SUCCESS;
2024:Core/Src/deca_device.c ****     uint32_t stsStatusRegAdd = (sts_num == 1) ? BUF0_STS1_STAT : BUF0_STS_STAT;
2025:Core/Src/deca_device.c ****     uint32_t stsStatusRegAddN = (sts_num == 1) ? STS1_TOA_HI_ID : STS_TOA_HI_ID;
2026:Core/Src/deca_device.c **** 
2027:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon) //check if in double buffer mode and if so which buffer host i
2028:Core/Src/deca_device.c ****     {
2029:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_1:
2030:Core/Src/deca_device.c ****         //!!! Assumes that Indirect pointer register B was already set. This is done in the dwt_set
2031:Core/Src/deca_device.c ****         *stsStatus = dwt_read16bitoffsetreg(INDIRECT_POINTER_B_ID, (stsStatusRegAdd-BUF0_RX_FINFO+2
2032:Core/Src/deca_device.c ****         break;
2033:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
2034:Core/Src/deca_device.c ****         *stsStatus = (dwt_read16bitoffsetreg(stsStatusRegAdd, 2) >> 7);
2035:Core/Src/deca_device.c ****         break;
2036:Core/Src/deca_device.c ****     default:
2037:Core/Src/deca_device.c ****         *stsStatus = (dwt_read16bitoffsetreg(stsStatusRegAddN, 2) >> 7);
2038:Core/Src/deca_device.c ****         break;
2039:Core/Src/deca_device.c ****     }
2040:Core/Src/deca_device.c **** 
2041:Core/Src/deca_device.c ****     //determine if the STS is ok
2042:Core/Src/deca_device.c ****     if (*stsStatus != 0 /*& DWT_SFD_COUNT_WARN*/)
2043:Core/Src/deca_device.c ****         ret = DWT_ERROR;
2044:Core/Src/deca_device.c **** 
2045:Core/Src/deca_device.c ****     return ret;
2046:Core/Src/deca_device.c **** }
ARM GAS  /tmp/cctZ3fzX.s 			page 54


2047:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2048:Core/Src/deca_device.c ****  * @brief this function reads the dgc decision when RX_TUNING is enabled
2049:Core/Src/deca_device.c ****  *
2050:Core/Src/deca_device.c ****  * input parameters
2051:Core/Src/deca_device.c ****  * no input parameters
2052:Core/Src/deca_device.c ****  *
2053:Core/Src/deca_device.c ****  * output parameters
2054:Core/Src/deca_device.c ****  *
2055:Core/Src/deca_device.c ****  * @param uint8_t The index value to be used in RX level and FP level formulas // str 80
2056:Core/Src/deca_device.c ****  */
2057:Core/Src/deca_device.c **** 
2058:Core/Src/deca_device.c **** 
2059:Core/Src/deca_device.c **** 
2060:Core/Src/deca_device.c **** 
2061:Core/Src/deca_device.c **** 
2062:Core/Src/deca_device.c **** 
2063:Core/Src/deca_device.c **** 
2064:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2065:Core/Src/deca_device.c ****  * @brief this function reads the RX signal quality diagnostic data
2066:Core/Src/deca_device.c ****  *
2067:Core/Src/deca_device.c ****  * input parameters
2068:Core/Src/deca_device.c ****  * @param diagnostics - diagnostic structure pointer, this will contain the diagnostic data read fr
2069:Core/Src/deca_device.c ****  *
2070:Core/Src/deca_device.c ****  * output parameters
2071:Core/Src/deca_device.c ****  *
2072:Core/Src/deca_device.c ****  * no return value
2073:Core/Src/deca_device.c ****  */
2074:Core/Src/deca_device.c **** void dwt_readdiagnostics(dwt_rxdiag_t *diagnostics)
2075:Core/Src/deca_device.c **** {
2076:Core/Src/deca_device.c ****     int i;
2077:Core/Src/deca_device.c ****     int offset_0xd;
2078:Core/Src/deca_device.c ****     int offset_buff = BUF0_RX_FINFO;
2079:Core/Src/deca_device.c ****     uint8_t temp[DB_MAX_DIAG_SIZE];  //address from 0xC0000 to 0xD0068 (108*2 bytes) - when using n
2080:Core/Src/deca_device.c **** 
2081:Core/Src/deca_device.c ****     //minimal diagnostics - 40 bytes
2082:Core/Src/deca_device.c **** 
2083:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon) //check if in double buffer mode and if so which buffer host i
2084:Core/Src/deca_device.c ****     {
2085:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_1:
2086:Core/Src/deca_device.c ****         offset_buff = BUF1_RX_FINFO;
2087:Core/Src/deca_device.c ****         __attribute__ ((fallthrough));
2088:Core/Src/deca_device.c ****         //no break
2089:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
2090:Core/Src/deca_device.c **** 
2091:Core/Src/deca_device.c ****         if (pdw3000local->dblbuffon == DBL_BUFF_ACCESS_BUFFER_1)
2092:Core/Src/deca_device.c ****         {
2093:Core/Src/deca_device.c ****             /* Program the indirect offset registers B for specified offset to swinging set buffer 
2094:Core/Src/deca_device.c ****             //!!! Assumes that Indirect pointer register B was already set. This is done in the dwt
2095:Core/Src/deca_device.c ****             /* Indirectly read data from the IC to the buffer */
2096:Core/Src/deca_device.c ****             if (pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_MAX)
2097:Core/Src/deca_device.c ****             {
2098:Core/Src/deca_device.c ****                 dwt_readfromdevice(INDIRECT_POINTER_B_ID, 0, DB_MAX_DIAG_SIZE, temp);
2099:Core/Src/deca_device.c ****             }
2100:Core/Src/deca_device.c ****             else if (pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_MID)
2101:Core/Src/deca_device.c ****             {
2102:Core/Src/deca_device.c ****                 dwt_readfromdevice(INDIRECT_POINTER_B_ID, 0, DB_MID_DIAG_SIZE, temp);
2103:Core/Src/deca_device.c ****             }
ARM GAS  /tmp/cctZ3fzX.s 			page 55


2104:Core/Src/deca_device.c ****             else
2105:Core/Src/deca_device.c ****             {
2106:Core/Src/deca_device.c ****                 dwt_readfromdevice(INDIRECT_POINTER_B_ID, 0, DB_MIN_DIAG_SIZE, temp);
2107:Core/Src/deca_device.c ****             }
2108:Core/Src/deca_device.c ****         }
2109:Core/Src/deca_device.c ****         else
2110:Core/Src/deca_device.c ****         {
2111:Core/Src/deca_device.c ****             if (pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_MAX)
2112:Core/Src/deca_device.c ****             {
2113:Core/Src/deca_device.c ****                 dwt_readfromdevice(offset_buff, 0, DB_MAX_DIAG_SIZE, temp);
2114:Core/Src/deca_device.c ****             }
2115:Core/Src/deca_device.c ****             else if (pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_MID)
2116:Core/Src/deca_device.c ****             {
2117:Core/Src/deca_device.c ****                 dwt_readfromdevice(offset_buff, 0, DB_MID_DIAG_SIZE, temp);
2118:Core/Src/deca_device.c ****             }
2119:Core/Src/deca_device.c ****             else
2120:Core/Src/deca_device.c ****             {
2121:Core/Src/deca_device.c ****                 dwt_readfromdevice(offset_buff, 0, DB_MIN_DIAG_SIZE, temp);
2122:Core/Src/deca_device.c ****             }
2123:Core/Src/deca_device.c ****         }
2124:Core/Src/deca_device.c **** 
2125:Core/Src/deca_device.c ****         for (i = 0; i < (CIA_I_RX_TIME_LEN+1); i++)
2126:Core/Src/deca_device.c ****         {
2127:Core/Src/deca_device.c ****             diagnostics->tdoa[i] = temp[i + BUF0_TDOA - BUF0_RX_FINFO]; // timestamp difference of 
2128:Core/Src/deca_device.c ****         }
2129:Core/Src/deca_device.c **** 
2130:Core/Src/deca_device.c ****         diagnostics->xtalOffset = ((int16_t)temp[BUF0_CIA_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | temp[B
2131:Core/Src/deca_device.c **** 
2132:Core/Src/deca_device.c ****         diagnostics->pdoa = ((int16_t)temp[BUF0_PDOA - BUF0_RX_FINFO + 3] << 8 | temp[BUF0_PDOA - B
2133:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
2134:Core/Src/deca_device.c **** 
2135:Core/Src/deca_device.c ****         diagnostics->ipatovAccumCount = ((uint16_t)temp[BUF0_IP_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
2136:Core/Src/deca_device.c **** 
2137:Core/Src/deca_device.c ****         if (pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_MIN)
2138:Core/Src/deca_device.c ****             break;
2139:Core/Src/deca_device.c **** 
2140:Core/Src/deca_device.c ****         for (i = 0; i < CIA_I_RX_TIME_LEN; i++)
2141:Core/Src/deca_device.c ****         {
2142:Core/Src/deca_device.c ****             diagnostics->ipatovRxTime[i] = temp[i + BUF0_IP_TS - BUF0_RX_FINFO];  // RX timestamp f
2143:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + BUF0_STS_TS - BUF0_RX_FINFO];    // RX timestamp f
2144:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + BUF0_STS1_TS - BUF0_RX_FINFO];  // RX timestamp f
2145:Core/Src/deca_device.c ****         }
2146:Core/Src/deca_device.c ****         diagnostics->ipatovRxStatus = temp[BUF0_IP_TS - BUF0_RX_FINFO + CIA_C_STAT_OFFSET];        
2147:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[BUF0_IP_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_IP
2148:Core/Src/deca_device.c **** 
2149:Core/Src/deca_device.c ****         diagnostics->stsRxStatus = temp[BUF0_STS_TS - BUF0_RX_FINFO + CIA_C_STAT_OFFSET];       // 
2150:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[BUF0_STS_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_STS_
2151:Core/Src/deca_device.c **** 
2152:Core/Src/deca_device.c ****         diagnostics->sts2RxStatus = temp[BUF0_STS1_TS - BUF0_RX_FINFO + CIA_C_STAT_OFFSET];       /
2153:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[BUF0_STS1_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_ST
2154:Core/Src/deca_device.c **** 
2155:Core/Src/deca_device.c ****         if (pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_MID)
2156:Core/Src/deca_device.c ****             break;
2157:Core/Src/deca_device.c **** 
2158:Core/Src/deca_device.c ****         diagnostics->ciaDiag1 = ((uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 3] << 24 | (uint3
2159:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_CIA_DI
2160:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 56


2161:Core/Src/deca_device.c ****                                                                                                    
2162:Core/Src/deca_device.c ****         diagnostics->ipatovPeak = ((uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 3] << 24 | (uint
2163:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
2164:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 3] << 24 | (uin
2165:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
2166:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
2167:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
2168:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
2169:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
2170:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
2171:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
2172:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[BUF0_IP_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp
2173:Core/Src/deca_device.c ****         
2174:Core/Src/deca_device.c ****                                                                                                    
2175:Core/Src/deca_device.c ****         diagnostics->stsPeak = ((uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 3] << 24 | (uint32
2176:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
2177:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[BUF0_STS_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[BU
2178:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
2179:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
2180:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
2181:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
2182:Core/Src/deca_device.c ****         diagnostics->stsF3 = ((uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
2183:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
2184:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[BUF0_STS_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp[
2185:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[BUF0_STS_DIAG_12 - BUF0_RX_FINFO + 1] << 8 | t
2186:Core/Src/deca_device.c **** 
2187:Core/Src/deca_device.c ****                                                                                                    
2188:Core/Src/deca_device.c ****         diagnostics->sts2Peak = ((uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 3] << 24 | (uint
2189:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
2190:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[BUF0_STS1_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[
2191:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
2192:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
2193:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
2194:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
2195:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
2196:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
2197:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[BUF0_STS1_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | tem
2198:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[BUF0_STS1_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
2199:Core/Src/deca_device.c **** 
2200:Core/Src/deca_device.c **** 
2201:Core/Src/deca_device.c **** 
2202:Core/Src/deca_device.c ****         break;
2203:Core/Src/deca_device.c **** 
2204:Core/Src/deca_device.c ****     default:  //double buffer is off
2205:Core/Src/deca_device.c **** 
2206:Core/Src/deca_device.c ****         if (pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_ALL)
2207:Core/Src/deca_device.c ****         {
2208:Core/Src/deca_device.c ****             dwt_readfromdevice(IP_TOA_LO_ID, 0, 108, temp);   //read form 0xC0000 space  (108 bytes
2209:Core/Src/deca_device.c ****             dwt_readfromdevice(STS_DIAG_4_ID, 0, 108, &temp[108]);  //read from 0xD0000 space  (108
2210:Core/Src/deca_device.c ****         }
2211:Core/Src/deca_device.c ****         else
2212:Core/Src/deca_device.c ****         {
2213:Core/Src/deca_device.c ****             dwt_readfromdevice(IP_TOA_LO_ID, 0, 40, temp);
2214:Core/Src/deca_device.c ****         }
2215:Core/Src/deca_device.c **** 
2216:Core/Src/deca_device.c ****         for (i = 0; i < CIA_I_RX_TIME_LEN; i++)
2217:Core/Src/deca_device.c ****         {
ARM GAS  /tmp/cctZ3fzX.s 			page 57


2218:Core/Src/deca_device.c ****             diagnostics->ipatovRxTime[i] = temp[i];                                 // RX timestamp
2219:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + STS_TOA_LO_ID - IP_TOA_LO_ID];  // RX timestamp fr
2220:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + STS1_TOA_LO_ID - IP_TOA_LO_ID]; // RX timestamp f
2221:Core/Src/deca_device.c ****             diagnostics->tdoa[i] = temp[i + CIA_TDOA_0_ID - IP_TOA_LO_ID]; // timestamp difference 
2222:Core/Src/deca_device.c ****         }
2223:Core/Src/deca_device.c ****         diagnostics->tdoa[5] = temp[5 + CIA_TDOA_0_ID - IP_TOA_LO_ID];
2224:Core/Src/deca_device.c **** 
2225:Core/Src/deca_device.c ****         diagnostics->ipatovRxStatus = temp[IP_TOA_HI_ID - IP_TOA_LO_ID + CIA_I_STAT_OFFSET];       
2226:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[IP_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[IP_TOA
2227:Core/Src/deca_device.c **** 
2228:Core/Src/deca_device.c ****         diagnostics->stsRxStatus = ((uint16_t)temp[STS_TOA_HI_ID - IP_TOA_LO_ID + CIA_C_STAT_OFFSET
2229:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[STS_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS_TOA_
2230:Core/Src/deca_device.c **** 
2231:Core/Src/deca_device.c ****         diagnostics->sts2RxStatus = ((uint16_t)temp[STS1_TOA_HI_ID - IP_TOA_LO_ID + CIA_C_STAT_OFFS
2232:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[STS1_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS1_T
2233:Core/Src/deca_device.c **** 
2234:Core/Src/deca_device.c ****         diagnostics->pdoa = ((int16_t)temp[CIA_TDOA_1_PDOA_ID - IP_TOA_LO_ID + 3] << 8 | temp[CIA_T
2235:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
2236:Core/Src/deca_device.c **** 
2237:Core/Src/deca_device.c ****         diagnostics->xtalOffset = ((int16_t)temp[CIA_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | temp[CIA_
2238:Core/Src/deca_device.c **** 
2239:Core/Src/deca_device.c ****         diagnostics->ciaDiag1 = ((uint32_t) temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_
2240:Core/Src/deca_device.c ****             | (uint32_t)temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[CIA_DIAG_1_ID 
2241:Core/Src/deca_device.c **** 
2242:Core/Src/deca_device.c ****         if ((pdw3000local->cia_diagnostic & DW_CIA_DIAG_LOG_ALL) == 0)
2243:Core/Src/deca_device.c ****             break; //break here is only logging minimal diagnositcs
2244:Core/Src/deca_device.c **** 
2245:Core/Src/deca_device.c ****         //IP
2246:Core/Src/deca_device.c ****         diagnostics->ipatovPeak = ((uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_
2247:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_0_ID - 
2248:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 3] << 24 | (uint32
2249:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_1_ID - 
2250:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
2251:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_2_ID - 
2252:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
2253:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_3_ID - 
2254:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
2255:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_4_ID - 
2256:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[IP_DIAG_8_ID - IP_TOA_LO_ID + 1] << 8 | temp[IP
2257:Core/Src/deca_device.c ****         diagnostics->ipatovAccumCount = ((uint16_t)temp[IP_DIAG_12_ID - IP_TOA_LO_ID + 1] << 8 | te
2258:Core/Src/deca_device.c **** 
2259:Core/Src/deca_device.c ****         //STS 1
2260:Core/Src/deca_device.c ****         diagnostics->stsPeak = ((uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
2261:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_0_ID 
2262:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[STS_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | temp[STS_D
2263:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
2264:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_2_ID 
2265:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
2266:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_3_ID 
2267:Core/Src/deca_device.c **** 
2268:Core/Src/deca_device.c **** 
2269:Core/Src/deca_device.c ****         offset_0xd = 0x6c; // there are 0x6C bytes in 0xC0000 base before we enter 0xD0000
2270:Core/Src/deca_device.c **** 
2271:Core/Src/deca_device.c ****         diagnostics->stsF3 = ((uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 3] << 24 
2272:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp[
2273:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[STS_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1] <
2274:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[STS_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd + 
ARM GAS  /tmp/cctZ3fzX.s 			page 58


2275:Core/Src/deca_device.c **** 
2276:Core/Src/deca_device.c ****         //STS 2
2277:Core/Src/deca_device.c ****         diagnostics->sts2Peak = ((uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 3] <<
2278:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
2279:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[STS1_DIAG_1_ID - STS_DIAG_4_ID + offset_0xd + 1] <
2280:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
2281:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
2282:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
2283:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
2284:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
2285:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
2286:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[STS1_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1]
2287:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[STS1_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd 
2288:Core/Src/deca_device.c ****         break;
2289:Core/Src/deca_device.c ****     }
2290:Core/Src/deca_device.c **** }
2291:Core/Src/deca_device.c **** 
2292:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2293:Core/Src/deca_device.c ****  * @brief This is used to read the TX timestamp (adjusted with the programmed antenna delay)
2294:Core/Src/deca_device.c ****  *
2295:Core/Src/deca_device.c ****  * input parameters
2296:Core/Src/deca_device.c ****  * @param timestamp - a pointer to a 5-byte buffer which will store the read TX timestamp time
2297:Core/Src/deca_device.c ****  *
2298:Core/Src/deca_device.c ****  * output parameters - the timestamp buffer will contain the value after the function call
2299:Core/Src/deca_device.c ****  *
2300:Core/Src/deca_device.c ****  * no return value
2301:Core/Src/deca_device.c ****  */
2302:Core/Src/deca_device.c **** void dwt_readtxtimestamp(uint8_t * timestamp)
2303:Core/Src/deca_device.c **** {
2304:Core/Src/deca_device.c ****     dwt_readfromdevice(TX_TIME_LO_ID, 0, TX_TIME_TX_STAMP_LEN, timestamp); // Read bytes directly i
2305:Core/Src/deca_device.c **** }
2306:Core/Src/deca_device.c **** 
2307:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2308:Core/Src/deca_device.c ****  * @brief This is used to read the high 32-bits of the TX timestamp (adjusted with the programmed a
2309:Core/Src/deca_device.c ****  *
2310:Core/Src/deca_device.c ****  * input parameters
2311:Core/Src/deca_device.c ****  *
2312:Core/Src/deca_device.c ****  * output parameters
2313:Core/Src/deca_device.c ****  *
2314:Core/Src/deca_device.c ****  * returns high 32-bits of TX timestamp
2315:Core/Src/deca_device.c ****  */
2316:Core/Src/deca_device.c **** uint32_t dwt_readtxtimestamphi32(void)
2317:Core/Src/deca_device.c **** {
2318:Core/Src/deca_device.c ****     return dwt_read32bitoffsetreg(TX_TIME_LO_ID, 1); // Offset is 1 to get the 4 upper bytes out of
2319:Core/Src/deca_device.c **** }
2320:Core/Src/deca_device.c **** 
2321:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2322:Core/Src/deca_device.c ****  * @brief This is used to read the low 32-bits of the TX timestamp (adjusted with the programmed an
2323:Core/Src/deca_device.c ****  *
2324:Core/Src/deca_device.c ****  * input parameters
2325:Core/Src/deca_device.c ****  *
2326:Core/Src/deca_device.c ****  * output parameters
2327:Core/Src/deca_device.c ****  *
2328:Core/Src/deca_device.c ****  * returns low 32-bits of TX timestamp
2329:Core/Src/deca_device.c ****  */
2330:Core/Src/deca_device.c **** uint32_t dwt_readtxtimestamplo32(void)
2331:Core/Src/deca_device.c **** {
ARM GAS  /tmp/cctZ3fzX.s 			page 59


2332:Core/Src/deca_device.c ****     return dwt_read32bitreg(TX_TIME_LO_ID); // Read TX TIME as a 32-bit register to get the 4 lower
2333:Core/Src/deca_device.c **** }
2334:Core/Src/deca_device.c **** 
2335:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2336:Core/Src/deca_device.c **** * @brief This is used to read the PDOA result, it is the phase difference between either the Ipatov
2337:Core/Src/deca_device.c **** *  or the two STS POAs (in PDOA mode 3), depending on the PDOA mode of operation. (POA - Phase Of A
2338:Core/Src/deca_device.c **** *
2339:Core/Src/deca_device.c **** * NOTE: To convert to degrees: float pdoa_deg = ((float)pdoa / (1 << 11)) * 180 / M_PI
2340:Core/Src/deca_device.c **** *
2341:Core/Src/deca_device.c **** * input parameters
2342:Core/Src/deca_device.c **** *
2343:Core/Src/deca_device.c **** * output parameters - the PDOA result (signed in [1:-11] radian units)
2344:Core/Src/deca_device.c **** *
2345:Core/Src/deca_device.c **** * no return value
2346:Core/Src/deca_device.c **** */
2347:Core/Src/deca_device.c **** int16_t dwt_readpdoa(void)
2348:Core/Src/deca_device.c **** {
2349:Core/Src/deca_device.c ****     int16_t  pdoa;
2350:Core/Src/deca_device.c **** 
2351:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
2352:Core/Src/deca_device.c ****     {
2353:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_1:
2354:Core/Src/deca_device.c ****         //!!! Assumes that Indirect pointer register B was already set. This is done in the dwt_set
2355:Core/Src/deca_device.c ****         pdoa = dwt_read16bitoffsetreg(INDIRECT_POINTER_B_ID, BUF1_PDOA-BUF1_RX_FINFO+2) & (CIA_TDOA
2356:Core/Src/deca_device.c ****         break;
2357:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
2358:Core/Src/deca_device.c ****         pdoa = dwt_read16bitoffsetreg(BUF0_PDOA, 2) & (CIA_TDOA_1_PDOA_PDOA_BIT_MASK>>16);
2359:Core/Src/deca_device.c ****         break;
2360:Core/Src/deca_device.c ****     default:
2361:Core/Src/deca_device.c ****         pdoa = dwt_read16bitoffsetreg(CIA_TDOA_1_PDOA_ID, 2) & (CIA_TDOA_1_PDOA_PDOA_BIT_MASK>>16);
2362:Core/Src/deca_device.c ****         break;
2363:Core/Src/deca_device.c ****     }
2364:Core/Src/deca_device.c **** 
2365:Core/Src/deca_device.c ****     if (pdoa & B12_SIGN_EXTEND_TEST) pdoa |= B12_SIGN_EXTEND_MASK; //sign extend
2366:Core/Src/deca_device.c ****     return pdoa;
2367:Core/Src/deca_device.c **** }
2368:Core/Src/deca_device.c **** 
2369:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2370:Core/Src/deca_device.c ****  * @brief This function is used to read the TDOA (Time Difference On Arrival). The TDOA value that 
2371:Core/Src/deca_device.c ****  * register is 41-bits in length. However, 6 bytes (or 48 bits) are read from the register. The rem
2372:Core/Src/deca_device.c ****  * the 'top' of the 6 bytes that are not part of the TDOA value should be set to zero and should no
2373:Core/Src/deca_device.c ****  * rest of the 41-bit value. However, there is no harm in masking the returned value.
2374:Core/Src/deca_device.c ****  *
2375:Core/Src/deca_device.c ****  * input parameters
2376:Core/Src/deca_device.c ****  *
2377:Core/Src/deca_device.c ****  * output parameters
2378:Core/Src/deca_device.c ****  * @param tdoa: time difference on arrival - buffer of 6 bytes that will be filled with TDOA value 
2379:Core/Src/deca_device.c ****  *
2380:Core/Src/deca_device.c ****  * no return value
2381:Core/Src/deca_device.c ****  */
2382:Core/Src/deca_device.c **** void dwt_readtdoa(uint8_t * tdoa)
2383:Core/Src/deca_device.c **** {
2384:Core/Src/deca_device.c ****     // timestamp difference of the 2 cipher RX timestamps
2385:Core/Src/deca_device.c ****     dwt_readfromdevice(CIA_TDOA_0_ID, 0, CIA_TDOA_LEN, tdoa);
2386:Core/Src/deca_device.c ****     tdoa[5] &= 0x01; // TDOA value is 41 bits long. You will need to read 6 bytes and mask the high
2387:Core/Src/deca_device.c **** }
2388:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 60


2389:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2390:Core/Src/deca_device.c ****  * @brief This is used to read the RX timestamp (adjusted time of arrival)
2391:Core/Src/deca_device.c ****  *
2392:Core/Src/deca_device.c ****  * input parameters
2393:Core/Src/deca_device.c ****  * @param timestamp - a pointer to a 5-byte buffer which will store the read RX timestamp time
2394:Core/Src/deca_device.c ****  *
2395:Core/Src/deca_device.c ****  * output parameters - the timestamp buffer will contain the value after the function call
2396:Core/Src/deca_device.c ****  *
2397:Core/Src/deca_device.c ****  * no return value
2398:Core/Src/deca_device.c ****  */
2399:Core/Src/deca_device.c **** void dwt_readrxtimestamp(uint8_t * timestamp)
2400:Core/Src/deca_device.c **** {
2401:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
2402:Core/Src/deca_device.c ****     {
2403:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_1:
2404:Core/Src/deca_device.c ****         //!!! Assumes that Indirect pointer register B was already set. This is done in the dwt_set
2405:Core/Src/deca_device.c ****         dwt_readfromdevice(INDIRECT_POINTER_B_ID, BUF1_RX_TIME -BUF1_RX_FINFO, RX_TIME_RX_STAMP_LEN
2406:Core/Src/deca_device.c ****         break;
2407:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
2408:Core/Src/deca_device.c ****         dwt_readfromdevice(BUF0_RX_TIME, 0, RX_TIME_RX_STAMP_LEN, timestamp);
2409:Core/Src/deca_device.c ****         break;
2410:Core/Src/deca_device.c ****     default:
2411:Core/Src/deca_device.c ****         dwt_readfromdevice(RX_TIME_0_ID, 0, RX_TIME_RX_STAMP_LEN, timestamp); // Get the adjusted t
2412:Core/Src/deca_device.c ****         break;
2413:Core/Src/deca_device.c ****     }
2414:Core/Src/deca_device.c **** }
2415:Core/Src/deca_device.c **** 
2416:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2417:Core/Src/deca_device.c ****  * @brief This is used to read the raw RX timestamp (RMARKER time) before any CIA first path analys
2418:Core/Src/deca_device.c ****  *
2419:Core/Src/deca_device.c ****  * input parameters
2420:Core/Src/deca_device.c ****  * @param timestamp - a pointer to a 4-byte buffer which will store the read RX timestamp time
2421:Core/Src/deca_device.c ****  *
2422:Core/Src/deca_device.c ****  * output parameters - the timestamp buffer will contain the value after the function call
2423:Core/Src/deca_device.c ****  *
2424:Core/Src/deca_device.c ****  * no return value
2425:Core/Src/deca_device.c ****  */
2426:Core/Src/deca_device.c **** void dwt_readrxtimestampunadj(uint8_t * timestamp)
2427:Core/Src/deca_device.c **** {
2428:Core/Src/deca_device.c ****     timestamp[0] = 0;
2429:Core/Src/deca_device.c ****     dwt_readfromdevice(RX_TIME_RAW_ID, 0, RX_TIME_RX_STAMP_LEN-1, &timestamp[1]);
2430:Core/Src/deca_device.c **** }
2431:Core/Src/deca_device.c **** 
2432:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2433:Core/Src/deca_device.c ****  * @brief This is used to read the RX timestamp (adjusted time of arrival) w.r.t. Ipatov CIR
2434:Core/Src/deca_device.c ****  *
2435:Core/Src/deca_device.c ****  * input parameters
2436:Core/Src/deca_device.c ****  * @param timestamp - a pointer to a 5-byte buffer which will store the read RX timestamp time
2437:Core/Src/deca_device.c ****  *
2438:Core/Src/deca_device.c ****  * output parameters - the timestamp buffer will contain the value after the function call
2439:Core/Src/deca_device.c ****  *
2440:Core/Src/deca_device.c ****  * no return value
2441:Core/Src/deca_device.c ****  */
2442:Core/Src/deca_device.c **** void dwt_readrxtimestamp_ipatov(uint8_t * timestamp)
2443:Core/Src/deca_device.c **** {
2444:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
2445:Core/Src/deca_device.c ****     {
ARM GAS  /tmp/cctZ3fzX.s 			page 61


2446:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_1:
2447:Core/Src/deca_device.c ****         //!!! Assumes that Indirect pointer register B was already set. This is done in the dwt_set
2448:Core/Src/deca_device.c ****         dwt_readfromdevice(INDIRECT_POINTER_B_ID, BUF1_IP_TS - BUF1_RX_FINFO, CIA_I_RX_TIME_LEN, ti
2449:Core/Src/deca_device.c ****         break;
2450:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
2451:Core/Src/deca_device.c ****         dwt_readfromdevice(BUF0_IP_TS, 0, CIA_I_RX_TIME_LEN, timestamp);
2452:Core/Src/deca_device.c ****         break;
2453:Core/Src/deca_device.c ****     default:
2454:Core/Src/deca_device.c ****         dwt_readfromdevice(IP_TOA_LO_ID, 0, CIA_I_RX_TIME_LEN, timestamp); // Get the adjusted time
2455:Core/Src/deca_device.c ****         break;
2456:Core/Src/deca_device.c ****     }
2457:Core/Src/deca_device.c **** }
2458:Core/Src/deca_device.c **** 
2459:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2460:Core/Src/deca_device.c ****  * @brief This is used to read the RX timestamp (adjusted time of arrival) w.r.t. STS CIR
2461:Core/Src/deca_device.c ****  *
2462:Core/Src/deca_device.c ****  * input parameters
2463:Core/Src/deca_device.c ****  * @param timestamp - a pointer to a 5-byte buffer which will store the read RX timestamp time
2464:Core/Src/deca_device.c ****  *
2465:Core/Src/deca_device.c ****  * output parameters - the timestamp buffer will contain the value after the function call
2466:Core/Src/deca_device.c ****  *
2467:Core/Src/deca_device.c ****  * no return value
2468:Core/Src/deca_device.c ****  */
2469:Core/Src/deca_device.c **** void dwt_readrxtimestamp_sts(uint8_t * timestamp)
2470:Core/Src/deca_device.c **** {
2471:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
2472:Core/Src/deca_device.c ****     {
2473:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_1:
2474:Core/Src/deca_device.c ****         //!!! Assumes that Indirect pointer register B was already set. This is done in the dwt_set
2475:Core/Src/deca_device.c ****         dwt_readfromdevice(INDIRECT_POINTER_B_ID, BUF1_STS_TS - BUF1_RX_FINFO, CIA_C_RX_TIME_LEN, t
2476:Core/Src/deca_device.c ****         break;
2477:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
2478:Core/Src/deca_device.c ****         dwt_readfromdevice(BUF0_STS_TS, 0, CIA_C_RX_TIME_LEN, timestamp);
2479:Core/Src/deca_device.c ****         break;
2480:Core/Src/deca_device.c ****     default:
2481:Core/Src/deca_device.c ****         dwt_readfromdevice(STS_TOA_LO_ID, 0, CIA_C_RX_TIME_LEN, timestamp); // Get the adjusted tim
2482:Core/Src/deca_device.c ****         break;
2483:Core/Src/deca_device.c ****     }
2484:Core/Src/deca_device.c **** }
2485:Core/Src/deca_device.c **** 
2486:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2487:Core/Src/deca_device.c ****  * @brief This is used to read the high 32-bits of the RX timestamp (adjusted with the programmed a
2488:Core/Src/deca_device.c ****  *
2489:Core/Src/deca_device.c ****  * input parameters
2490:Core/Src/deca_device.c ****  *
2491:Core/Src/deca_device.c ****  * output parameters
2492:Core/Src/deca_device.c ****  *
2493:Core/Src/deca_device.c ****  * returns high 32-bits of RX timestamp
2494:Core/Src/deca_device.c ****  */
2495:Core/Src/deca_device.c **** uint32_t dwt_readrxtimestamphi32(void)
2496:Core/Src/deca_device.c **** {
2497:Core/Src/deca_device.c ****     return dwt_read32bitoffsetreg(RX_TIME_0_ID, 1); // Offset is 1 to get the 4 upper bytes out of 
2498:Core/Src/deca_device.c **** }
2499:Core/Src/deca_device.c **** 
2500:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2501:Core/Src/deca_device.c ****  * @brief This is used to read the low 32-bits of the RX timestamp (adjusted with the programmed an
2502:Core/Src/deca_device.c ****  *
ARM GAS  /tmp/cctZ3fzX.s 			page 62


2503:Core/Src/deca_device.c ****  * input parameters
2504:Core/Src/deca_device.c ****  *
2505:Core/Src/deca_device.c ****  * output parameters
2506:Core/Src/deca_device.c ****  *
2507:Core/Src/deca_device.c ****  * returns low 32-bits of RX timestamp
2508:Core/Src/deca_device.c ****  */
2509:Core/Src/deca_device.c **** uint32_t dwt_readrxtimestamplo32(void)
2510:Core/Src/deca_device.c **** {
2511:Core/Src/deca_device.c ****     return dwt_read32bitreg(RX_TIME_0_ID); // Read RX TIME as a 32-bit register to get the 4 lower 
2512:Core/Src/deca_device.c **** }
2513:Core/Src/deca_device.c **** 
2514:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2515:Core/Src/deca_device.c ****  * @brief This is used to read the high 32-bits of the system time
2516:Core/Src/deca_device.c ****  *
2517:Core/Src/deca_device.c ****  * input parameters
2518:Core/Src/deca_device.c ****  *
2519:Core/Src/deca_device.c ****  * output parameters
2520:Core/Src/deca_device.c ****  *
2521:Core/Src/deca_device.c ****  * returns high 32-bits of system time timestamp
2522:Core/Src/deca_device.c ****  */
2523:Core/Src/deca_device.c **** uint32_t dwt_readsystimestamphi32(void)
2524:Core/Src/deca_device.c **** {
2525:Core/Src/deca_device.c ****     return dwt_read32bitreg(SYS_TIME_ID);
2526:Core/Src/deca_device.c **** }
2527:Core/Src/deca_device.c **** 
2528:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2529:Core/Src/deca_device.c ****  * @brief This is used to read the system time
2530:Core/Src/deca_device.c ****  *
2531:Core/Src/deca_device.c ****  * input parameters
2532:Core/Src/deca_device.c ****  * @param timestamp - a pointer to a 4-byte buffer which will store the read system time
2533:Core/Src/deca_device.c ****  *
2534:Core/Src/deca_device.c ****  * output parameters
2535:Core/Src/deca_device.c ****  * @param timestamp - the timestamp buffer will contain the value after the function call
2536:Core/Src/deca_device.c ****  *
2537:Core/Src/deca_device.c ****  * no return value
2538:Core/Src/deca_device.c ****  */
2539:Core/Src/deca_device.c **** void dwt_readsystime(uint8_t * timestamp)
2540:Core/Src/deca_device.c **** {
2541:Core/Src/deca_device.c ****     dwt_readfromdevice(SYS_TIME_ID, 0, SYS_TIME_LEN, timestamp);
2542:Core/Src/deca_device.c **** }
2543:Core/Src/deca_device.c **** 
2544:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2545:Core/Src/deca_device.c ****  * @brief This is used to enable the frame filtering - (the default option is to
2546:Core/Src/deca_device.c ****  * accept any data and ACK frames with correct destination address)
2547:Core/Src/deca_device.c ****  *
2548:Core/Src/deca_device.c ****  * input parameters
2549:Core/Src/deca_device.c ****  * @param enabletype (bitmask) - enables/disables the frame filtering and configures 802.15.4 type
2550:Core/Src/deca_device.c ****  *       DWT_FF_ENABLE_802_15_4      0x2             // use 802.15.4 filtering rules
2551:Core/Src/deca_device.c ****  *       DWT_FF_DISABLE              0x0             // disable FF
2552:Core/Src/deca_device.c ****  * @param filtermode (bitmask) - configures the frame filtering options according to
2553:Core/Src/deca_device.c ****  *       DWT_FF_BEACON_EN            0x001           // beacon frames allowed
2554:Core/Src/deca_device.c ****  *       DWT_FF_DATA_EN              0x002           // data frames allowed
2555:Core/Src/deca_device.c ****  *       DWT_FF_ACK_EN               0x004           // ack frames allowed
2556:Core/Src/deca_device.c ****  *       DWT_FF_MAC_EN               0x008           // mac control frames allowed
2557:Core/Src/deca_device.c ****  *       DWT_FF_RSVD_EN              0x010           // reserved frame types allowed
2558:Core/Src/deca_device.c ****  *       DWT_FF_MULTI_EN             0x020           // multipurpose frames allowed
2559:Core/Src/deca_device.c ****  *       DWT_FF_FRAG_EN              0x040           // fragmented frame types allowed
ARM GAS  /tmp/cctZ3fzX.s 			page 63


2560:Core/Src/deca_device.c ****  *       DWT_FF_EXTEND_EN            0x080           // extended frame types allowed
2561:Core/Src/deca_device.c ****  *       DWT_FF_COORD_EN             0x100           // behave as coordinator (can receive frames w
2562:Core/Src/deca_device.c ****  *       DWT_FF_IMPBRCAST_EN         0x200           // allow MAC implicit broadcast
2563:Core/Src/deca_device.c ****  *       DWT_FF_LE0_PEND             0x400           // Data pending for device at LE0 address. see
2564:Core/Src/deca_device.c ****  *       DWT_FF_LE1_PEND             0x800           // Data pending for device at LE1 address. see
2565:Core/Src/deca_device.c ****  *       DWT_FF_LE2_PEND             0x1000           // Data pending for device at LE2 address. se
2566:Core/Src/deca_device.c ****  *       DWT_FF_LE3_PEND             0x2000          // Data pending for device at LE3 address. see
2567:Core/Src/deca_device.c ****  *       DWT_SSADRAPE                0x4000          //Short Source Address Data Request ACK with P
2568:Core/Src/deca_device.c ****  *       DWT_LSADRAPE                0x8000          //Long Source Address Data Request ACK with PE
2569:Core/Src/deca_device.c ****  * output parameters
2570:Core/Src/deca_device.c ****  *
2571:Core/Src/deca_device.c ****  * no return value
2572:Core/Src/deca_device.c ****  */
2573:Core/Src/deca_device.c **** void dwt_configureframefilter(uint16_t enabletype, uint16_t filtermode)
2574:Core/Src/deca_device.c **** {
2575:Core/Src/deca_device.c ****     if(enabletype == DWT_FF_ENABLE_802_15_4)
2576:Core/Src/deca_device.c ****     {
2577:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(SYS_CFG_ID, 0, (uint8_t)(SYS_CFG_FFEN_BIT_MASK));
2578:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(ADR_FILT_CFG_ID, 0, filtermode);
2579:Core/Src/deca_device.c ****     }
2580:Core/Src/deca_device.c ****     else
2581:Core/Src/deca_device.c ****     {
2582:Core/Src/deca_device.c ****         // Disable frame filter
2583:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(SYS_CFG_ID, 0, (uint8_t)(~(SYS_CFG_FFEN_BIT_MASK)));
2584:Core/Src/deca_device.c ****         // Clear the configuration
2585:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(ADR_FILT_CFG_ID, 0, 0x0);
2586:Core/Src/deca_device.c ****     }
2587:Core/Src/deca_device.c **** }
2588:Core/Src/deca_device.c **** 
2589:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2590:Core/Src/deca_device.c ****  * @brief This is used to set the PAN ID
2591:Core/Src/deca_device.c ****  *
2592:Core/Src/deca_device.c ****  * input parameters
2593:Core/Src/deca_device.c ****  * @param panID - this is the PAN ID
2594:Core/Src/deca_device.c ****  *
2595:Core/Src/deca_device.c ****  * output parameters
2596:Core/Src/deca_device.c ****  *
2597:Core/Src/deca_device.c ****  * no return value
2598:Core/Src/deca_device.c ****  */
2599:Core/Src/deca_device.c **** void dwt_setpanid(uint16_t panID)
2600:Core/Src/deca_device.c **** {
2601:Core/Src/deca_device.c ****     // PAN ID is high 16 bits of register
2602:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(PANADR_ID, PANADR_PAN_ID_BYTE_OFFSET, panID);
2603:Core/Src/deca_device.c **** }
2604:Core/Src/deca_device.c **** 
2605:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2606:Core/Src/deca_device.c ****  * @brief This is used to set 16-bit (short) address
2607:Core/Src/deca_device.c ****  *
2608:Core/Src/deca_device.c ****  * input parameters
2609:Core/Src/deca_device.c ****  * @param shortAddress - this sets the 16 bit short address
2610:Core/Src/deca_device.c ****  *
2611:Core/Src/deca_device.c ****  * output parameters
2612:Core/Src/deca_device.c ****  *
2613:Core/Src/deca_device.c ****  * no return value
2614:Core/Src/deca_device.c ****  */
2615:Core/Src/deca_device.c **** void dwt_setaddress16(uint16_t shortAddress)
2616:Core/Src/deca_device.c **** {
ARM GAS  /tmp/cctZ3fzX.s 			page 64


2617:Core/Src/deca_device.c ****     // Short address into low 16 bits
2618:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(PANADR_ID, PANADR_SHORTADDR_BIT_OFFSET, shortAddress);
2619:Core/Src/deca_device.c **** }
2620:Core/Src/deca_device.c **** 
2621:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2622:Core/Src/deca_device.c ****  * @brief This is used to set the EUI 64-bit (long) address
2623:Core/Src/deca_device.c ****  *
2624:Core/Src/deca_device.c ****  * input parameters
2625:Core/Src/deca_device.c ****  * @param eui64 - this is the pointer to a buffer that contains the 64bit address
2626:Core/Src/deca_device.c ****  *
2627:Core/Src/deca_device.c ****  * output parameters
2628:Core/Src/deca_device.c ****  *
2629:Core/Src/deca_device.c ****  * no return value
2630:Core/Src/deca_device.c ****  */
2631:Core/Src/deca_device.c **** void dwt_seteui(uint8_t *eui64)
2632:Core/Src/deca_device.c **** {
2633:Core/Src/deca_device.c ****     dwt_writetodevice(EUI_64_LO_ID, 0, 0x8, eui64);
2634:Core/Src/deca_device.c **** }
2635:Core/Src/deca_device.c **** 
2636:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2637:Core/Src/deca_device.c ****  * @brief This is used to get the EUI 64-bit from the DW3000
2638:Core/Src/deca_device.c ****  *
2639:Core/Src/deca_device.c ****  * input parameters
2640:Core/Src/deca_device.c ****  * @param eui64 - this is the pointer to a buffer that will contain the read 64-bit EUI value
2641:Core/Src/deca_device.c ****  *
2642:Core/Src/deca_device.c ****  * output parameters
2643:Core/Src/deca_device.c ****  *
2644:Core/Src/deca_device.c ****  * no return value
2645:Core/Src/deca_device.c ****  */
2646:Core/Src/deca_device.c **** void dwt_geteui(uint8_t *eui64)
2647:Core/Src/deca_device.c **** {
2648:Core/Src/deca_device.c ****     dwt_readfromdevice(EUI_64_LO_ID, 0, 0x8, eui64);
2649:Core/Src/deca_device.c **** }
2650:Core/Src/deca_device.c **** 
2651:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2652:Core/Src/deca_device.c **** * @brief This is used to read from AON memory
2653:Core/Src/deca_device.c **** *
2654:Core/Src/deca_device.c **** * input parameters
2655:Core/Src/deca_device.c **** * @param aon_address - this is the address of the memory location to read
2656:Core/Src/deca_device.c **** *
2657:Core/Src/deca_device.c **** * output parameters - None
2658:Core/Src/deca_device.c **** *
2659:Core/Src/deca_device.c **** * returns 8-bits read from given AON memory address
2660:Core/Src/deca_device.c **** */
2661:Core/Src/deca_device.c **** uint8_t dwt_aon_read(uint16_t aon_address)
2662:Core/Src/deca_device.c **** {
2663:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_ADDR_ID, 0x0, aon_address);// Set short AON address for read
2664:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0x0, (AON_CTRL_DCA_ENAB_BIT_MASK | AON_CTRL_DCA_READ_EN_BIT
2665:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0x0, 0x0);// Clear all enabled bits
2666:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(AON_RDATA_ID, 0x0);//Return the data that was read
2667:Core/Src/deca_device.c **** }
2668:Core/Src/deca_device.c **** 
2669:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2670:Core/Src/deca_device.c **** * @brief This is used to write to AON memory
2671:Core/Src/deca_device.c **** *
2672:Core/Src/deca_device.c **** * @param aon_address - this is the address of the memory location to write
2673:Core/Src/deca_device.c **** * @param aon_write_data - this is the data to write
ARM GAS  /tmp/cctZ3fzX.s 			page 65


2674:Core/Src/deca_device.c **** *
2675:Core/Src/deca_device.c **** * output parameters - None
2676:Core/Src/deca_device.c **** *
2677:Core/Src/deca_device.c **** * no return value
2678:Core/Src/deca_device.c **** *
2679:Core/Src/deca_device.c **** */
2680:Core/Src/deca_device.c **** void dwt_aon_write(uint16_t aon_address, uint8_t aon_write_data)
2681:Core/Src/deca_device.c **** {
2682:Core/Src/deca_device.c ****     uint8_t temp = 0;
2683:Core/Src/deca_device.c ****     if (aon_address >= 0x100) temp = AON_CTRL_DCA_WRITE_HI_EN_BIT_MASK;
2684:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_ADDR_ID, 0x0, aon_address); // Set AON address for write
2685:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_WDATA_ID, 0x0, aon_write_data); // Set write data
2686:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID,0x0,(temp | AON_CTRL_DCA_ENAB_BIT_MASK | AON_CTRL_DCA_WRITE_
2687:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0x0, 0x0); // Clear all enabled bits
2688:Core/Src/deca_device.c **** }
2689:Core/Src/deca_device.c **** 
2690:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2691:Core/Src/deca_device.c ****  * @brief This is used to read the OTP data from given address into provided array
2692:Core/Src/deca_device.c ****  *
2693:Core/Src/deca_device.c ****  * input parameters
2694:Core/Src/deca_device.c ****  * @param address - this is the OTP address to read from
2695:Core/Src/deca_device.c ****  * @param array - this is the pointer to the array into which to read the data
2696:Core/Src/deca_device.c ****  * @param length - this is the number of 32 bit words to read (array needs to be at least this leng
2697:Core/Src/deca_device.c ****  *
2698:Core/Src/deca_device.c ****  * output parameters
2699:Core/Src/deca_device.c ****  *
2700:Core/Src/deca_device.c ****  * no return value
2701:Core/Src/deca_device.c ****  */
2702:Core/Src/deca_device.c **** void dwt_otpread(uint16_t address, uint32_t *array, uint8_t length)
2703:Core/Src/deca_device.c **** {
2704:Core/Src/deca_device.c ****     int i;
2705:Core/Src/deca_device.c **** 
2706:Core/Src/deca_device.c ****     for(i=0; i<length; i++)
2707:Core/Src/deca_device.c ****     {
2708:Core/Src/deca_device.c ****         array[i] = _dwt_otpread(address + i);
2709:Core/Src/deca_device.c ****     }
2710:Core/Src/deca_device.c **** 
2711:Core/Src/deca_device.c ****     return ;
2712:Core/Src/deca_device.c **** }
2713:Core/Src/deca_device.c **** 
2714:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2715:Core/Src/deca_device.c ****  * @brief function to read the OTP memory. 
2716:Core/Src/deca_device.c ****  *
2717:Core/Src/deca_device.c ****  * input parameters
2718:Core/Src/deca_device.c ****  * @param address - address to read at
2719:Core/Src/deca_device.c ****  *
2720:Core/Src/deca_device.c ****  * output parameters
2721:Core/Src/deca_device.c ****  *
2722:Core/Src/deca_device.c ****  * returns the 32bit of read data
2723:Core/Src/deca_device.c ****  */
2724:Core/Src/deca_device.c **** uint32_t _dwt_otpread(uint16_t address)
2725:Core/Src/deca_device.c **** {
2726:Core/Src/deca_device.c ****     uint32_t ret_data = 0;
2727:Core/Src/deca_device.c **** 
2728:Core/Src/deca_device.c ****     // Set manual access mode
2729:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_CFG_ID, 0, 0x0001);
2730:Core/Src/deca_device.c ****     // set the address
ARM GAS  /tmp/cctZ3fzX.s 			page 66


2731:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_ADDR_ID, 0, address);
2732:Core/Src/deca_device.c ****     // Assert the read strobe
2733:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_CFG_ID, 0, 0x0002);
2734:Core/Src/deca_device.c ****     // attempt a read from OTP address
2735:Core/Src/deca_device.c ****     ret_data = dwt_read32bitoffsetreg(OTP_RDATA_ID, 0);
2736:Core/Src/deca_device.c **** 
2737:Core/Src/deca_device.c ****     // Return the 32bit of read data
2738:Core/Src/deca_device.c ****     return ret_data;
2739:Core/Src/deca_device.c **** }
2740:Core/Src/deca_device.c **** 
2741:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2742:Core/Src/deca_device.c ****  * @brief For each value to send to OTP bloc, following two register writes are required as shown b
2743:Core/Src/deca_device.c ****  *
2744:Core/Src/deca_device.c ****  * @param val: 16-bit value to write to the OTP block
2745:Core/Src/deca_device.c ****  */
2746:Core/Src/deca_device.c **** void  __dwt_otp_write_wdata_id_reg(int16_t val) 
2747:Core/Src/deca_device.c **** {
2748:Core/Src/deca_device.c ****     /* Pull the CS high to enable user interface for programming */
2749:Core/Src/deca_device.c **** 	/* 'val' is ignored in this instance by the OTP block */
2750:Core/Src/deca_device.c **** 	dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0200 | val);
2751:Core/Src/deca_device.c **** 	/* Send the relevant command to the OTP block */
2752:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0000 | val);
2753:Core/Src/deca_device.c **** }
2754:Core/Src/deca_device.c **** 
2755:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2756:Core/Src/deca_device.c ****  * @brief function to program the OTP memory. 
2757:Core/Src/deca_device.c ****  * Note the address is only 11 bits long.
2758:Core/Src/deca_device.c ****  *
2759:Core/Src/deca_device.c ****  * input parameters
2760:Core/Src/deca_device.c ****  * @param data - data to write to given address
2761:Core/Src/deca_device.c ****  * @param address - address to write to
2762:Core/Src/deca_device.c ****  *
2763:Core/Src/deca_device.c ****  * output parameters
2764:Core/Src/deca_device.c ****  *
2765:Core/Src/deca_device.c ****  * returns None
2766:Core/Src/deca_device.c ****  */
2767:Core/Src/deca_device.c **** void _dwt_otpprogword32(uint32_t data, uint16_t address)
2768:Core/Src/deca_device.c **** {
2769:Core/Src/deca_device.c ****     //uint32_t rd_buf;
2770:Core/Src/deca_device.c ****     uint16_t wr_buf[4];
2771:Core/Src/deca_device.c ****     //uint8_t otp_done;
2772:Core/Src/deca_device.c **** 
2773:Core/Src/deca_device.c ****     // Read current register value
2774:Core/Src/deca_device.c ****     uint32_t ldo_tune = dwt_read32bitoffsetreg(LDO_TUNE_HI_ID, 0);
2775:Core/Src/deca_device.c ****     // Set VDDHV_TX LDO to max
2776:Core/Src/deca_device.c ****     dwt_or32bitoffsetreg(LDO_TUNE_HI_ID, 0, LDO_TUNE_HI_LDO_HVAUX_TUNE_BIT_MASK);
2777:Core/Src/deca_device.c ****     
2778:Core/Src/deca_device.c ****     // configure mode for programming
2779:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_CFG_ID, 0, 0x018);
2780:Core/Src/deca_device.c **** 
2781:Core/Src/deca_device.c ****     // Select fast programming
2782:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0025);
2783:Core/Src/deca_device.c **** 
2784:Core/Src/deca_device.c ****     // Apply instruction to write the address
2785:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0002);
2786:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x01fc);
2787:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 67


2788:Core/Src/deca_device.c ****     // Now sending the OTP address data (2 bytes)
2789:Core/Src/deca_device.c ****     wr_buf[0] = 0x0100 | (address & 0xff);
2790:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[0]);
2791:Core/Src/deca_device.c **** 
2792:Core/Src/deca_device.c ****     // Write data (upper byte of address)
2793:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0100);
2794:Core/Src/deca_device.c **** 
2795:Core/Src/deca_device.c ****     // Clean up
2796:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0000);
2797:Core/Src/deca_device.c **** 
2798:Core/Src/deca_device.c **** 
2799:Core/Src/deca_device.c ****     // Apply instruction  to write data
2800:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0002);
2801:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x01c0);
2802:Core/Src/deca_device.c **** 
2803:Core/Src/deca_device.c ****     // Write the data
2804:Core/Src/deca_device.c ****     wr_buf[0] = 0x100 | ((data >> 24) & 0xff);
2805:Core/Src/deca_device.c ****     wr_buf[1] = 0x100 | ((data >> 16) & 0xff);
2806:Core/Src/deca_device.c ****     wr_buf[2] = 0x100 | ((data >> 8) & 0xff);
2807:Core/Src/deca_device.c ****     wr_buf[3] = 0x100 | (data & 0xff);
2808:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[3]);
2809:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[2]);
2810:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[1]);
2811:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[0]);
2812:Core/Src/deca_device.c **** 
2813:Core/Src/deca_device.c ****     // Clean up
2814:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0000);
2815:Core/Src/deca_device.c **** 
2816:Core/Src/deca_device.c ****     //Enter prog mode
2817:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x003a);
2818:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x01ff);
2819:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x010a);
2820:Core/Src/deca_device.c ****     // Clean up
2821:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0000);
2822:Core/Src/deca_device.c **** 
2823:Core/Src/deca_device.c ****     /* 
2824:Core/Src/deca_device.c **** 	// Enable state/status output
2825:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x003a);
2826:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x01bf);
2827:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0100);
2828:Core/Src/deca_device.c ****     */
2829:Core/Src/deca_device.c **** 
2830:Core/Src/deca_device.c ****     //Start prog mode
2831:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x003a);
2832:Core/Src/deca_device.c **** 	__dwt_otp_write_wdata_id_reg(0x0101);
2833:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0002);   // Different to previous one
2834:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0000);
2835:Core/Src/deca_device.c **** 
2836:Core/Src/deca_device.c ****     /*
2837:Core/Src/deca_device.c ****     read status after programm command.
2838:Core/Src/deca_device.c ****     The for loop will exit once the status indicates programming is complete or if it reaches the m
2839:Core/Src/deca_device.c ****     1000 is more than sufficient for max OTP programming delay and max supported DW3000 SPI rate.
2840:Core/Src/deca_device.c ****     Instead a delay of 2ms (as commented out below) can be used.
2841:Core/Src/deca_device.c ****     Burn time is about 1.76ms
2842:Core/Src/deca_device.c ****     */
2843:Core/Src/deca_device.c **** 
2844:Core/Src/deca_device.c ****     /*uint16_t	i;
ARM GAS  /tmp/cctZ3fzX.s 			page 68


2845:Core/Src/deca_device.c **** 
2846:Core/Src/deca_device.c ****     for (i = 0; i < 1000; i++)
2847:Core/Src/deca_device.c ****     {
2848:Core/Src/deca_device.c ****         rd_buf = dwt_read32bitoffsetreg(OTP_STATUS_ID, 0);
2849:Core/Src/deca_device.c **** 
2850:Core/Src/deca_device.c ****         if (!(rd_buf & OTP_STATUS_OTP_PROG_DONE_BIT_MASK))
2851:Core/Src/deca_device.c ****         {
2852:Core/Src/deca_device.c ****             break;
2853:Core/Src/deca_device.c ****         }
2854:Core/Src/deca_device.c ****     }*/
2855:Core/Src/deca_device.c **** 
2856:Core/Src/deca_device.c **** 
2857:Core/Src/deca_device.c ****     deca_sleep(2);//Uncomment this command if you don't want to use the loop above. It will take mo
2858:Core/Src/deca_device.c **** 
2859:Core/Src/deca_device.c ****     // Stop prog mode
2860:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x003a);
2861:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0102);
2862:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0002);   // Different to previous one
2863:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0000);
2864:Core/Src/deca_device.c **** 
2865:Core/Src/deca_device.c ****     // configure mode for reading
2866:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_CFG_ID, 0, 0x0000);
2867:Core/Src/deca_device.c ****     
2868:Core/Src/deca_device.c ****     // Restore LDO tune register
2869:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(LDO_TUNE_HI_ID, 0, ldo_tune);
2870:Core/Src/deca_device.c **** }
2871:Core/Src/deca_device.c **** 
2872:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2873:Core/Src/deca_device.c ****  * @brief This is used to program 32-bit value into the DW3000 OTP memory.
2874:Core/Src/deca_device.c ****  *
2875:Core/Src/deca_device.c ****  * input parameters
2876:Core/Src/deca_device.c ****  * @param value - this is the 32-bit value to be programmed into OTP
2877:Core/Src/deca_device.c ****  * @param address - this is the 16-bit OTP address into which the 32-bit value is programmed
2878:Core/Src/deca_device.c ****  *
2879:Core/Src/deca_device.c ****  * output parameters
2880:Core/Src/deca_device.c ****  *
2881:Core/Src/deca_device.c ****  * returns DWT_SUCCESS for success, or DWT_ERROR for error
2882:Core/Src/deca_device.c ****  */
2883:Core/Src/deca_device.c **** int dwt_otpwriteandverify(uint32_t value, uint16_t address)
2884:Core/Src/deca_device.c **** {
2885:Core/Src/deca_device.c ****     //program the word
2886:Core/Src/deca_device.c ****     _dwt_otpprogword32(value, address);
2887:Core/Src/deca_device.c **** 
2888:Core/Src/deca_device.c ****     //check it is programmed correctly
2889:Core/Src/deca_device.c ****     if(_dwt_otpread(address) == value)
2890:Core/Src/deca_device.c ****     {
2891:Core/Src/deca_device.c ****         return DWT_SUCCESS;
2892:Core/Src/deca_device.c ****     }
2893:Core/Src/deca_device.c ****     else
2894:Core/Src/deca_device.c ****     {
2895:Core/Src/deca_device.c ****         return DWT_ERROR;
2896:Core/Src/deca_device.c ****     }
2897:Core/Src/deca_device.c **** }
2898:Core/Src/deca_device.c **** 
2899:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2900:Core/Src/deca_device.c ****  * @brief This function puts the device into deep sleep or sleep. dwt_configuresleep() should be ca
2901:Core/Src/deca_device.c ****  * to configure the sleep and on-wake/wake-up parameters
ARM GAS  /tmp/cctZ3fzX.s 			page 69


2902:Core/Src/deca_device.c ****  *
2903:Core/Src/deca_device.c ****  * input parameters
2904:Core/Src/deca_device.c ****  * @param idle_rc - if this is set to DWT_DW_IDLE_RC, the auto INIT2IDLE bit will be cleared prior 
2905:Core/Src/deca_device.c ****  *                  thus after wake-up device will stay in IDLE_RC state
2906:Core/Src/deca_device.c ****  *
2907:Core/Src/deca_device.c ****  * output parameters
2908:Core/Src/deca_device.c ****  *
2909:Core/Src/deca_device.c ****  * no return value
2910:Core/Src/deca_device.c ****  */
2911:Core/Src/deca_device.c **** void dwt_entersleep(int idle_rc)
2912:Core/Src/deca_device.c **** {
2913:Core/Src/deca_device.c ****     //clear auto INIT2IDLE bit if required
2914:Core/Src/deca_device.c ****     if(idle_rc == DWT_DW_IDLE_RC)
2915:Core/Src/deca_device.c ****     {
2916:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(SEQ_CTRL_ID, 0x1, (uint8_t) ~(SEQ_CTRL_AINIT2IDLE_BIT_MASK>>8));
2917:Core/Src/deca_device.c ****     }
2918:Core/Src/deca_device.c **** 
2919:Core/Src/deca_device.c ****     // Copy config to AON - upload the new configuration
2920:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0, 0);
2921:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0, AON_CTRL_ARRAY_SAVE_BIT_MASK);
2922:Core/Src/deca_device.c **** }
2923:Core/Src/deca_device.c **** 
2924:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2925:Core/Src/deca_device.c ****  * @brief sets the sleep counter to new value, this function programs the sleep counter top 16-bits
2926:Core/Src/deca_device.c ****  *
2927:Core/Src/deca_device.c ****  * NOTE: this function needs to be run before dwt_configuresleep
2928:Core/Src/deca_device.c ****  *
2929:Core/Src/deca_device.c ****  * input parameters
2930:Core/Src/deca_device.c ****  * @param sleepcnt - this it value of the sleep counter to program
2931:Core/Src/deca_device.c ****  *
2932:Core/Src/deca_device.c ****  * output parameters
2933:Core/Src/deca_device.c ****  *
2934:Core/Src/deca_device.c ****  * no return value
2935:Core/Src/deca_device.c ****  */
2936:Core/Src/deca_device.c **** void dwt_configuresleepcnt(uint16_t sleepcnt)
2937:Core/Src/deca_device.c **** {
2938:Core/Src/deca_device.c **** 
2939:Core/Src/deca_device.c ****     dwt_aon_write(AON_SLPCNT_LO, (uint8_t)(sleepcnt));
2940:Core/Src/deca_device.c ****     dwt_aon_write(AON_SLPCNT_HI, (uint8_t)(sleepcnt>>8));
2941:Core/Src/deca_device.c **** 
2942:Core/Src/deca_device.c **** }
2943:Core/Src/deca_device.c **** 
2944:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2945:Core/Src/deca_device.c ****  * @brief calibrates the local oscillator as its frequency can vary between 15 and 34kHz depending 
2946:Core/Src/deca_device.c ****  *
2947:Core/Src/deca_device.c ****  * NOTE: this function needs to be run before dwt_configuresleepcnt, so that we know what the count
2948:Core/Src/deca_device.c ****  *
2949:Core/Src/deca_device.c ****  * input parameters
2950:Core/Src/deca_device.c ****  *
2951:Core/Src/deca_device.c ****  * output parameters
2952:Core/Src/deca_device.c ****  *
2953:Core/Src/deca_device.c ****  * returns the number of XTAL cycles per low-power oscillator cycle. LP OSC frequency = 38.4 MHz/re
2954:Core/Src/deca_device.c ****  */
2955:Core/Src/deca_device.c **** uint16_t dwt_calibratesleepcnt(void)
2956:Core/Src/deca_device.c **** {
2957:Core/Src/deca_device.c ****     uint16_t temp = 0;
2958:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 70


2959:Core/Src/deca_device.c ****     // Enable VDDPLL for reference clock
2960:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(LDO_CTRL_ID, 0, LDO_CTRL_LDO_VDDPLL_EN_BIT_MASK);
2961:Core/Src/deca_device.c ****     // Clear any previous cal settings
2962:Core/Src/deca_device.c ****     dwt_aon_write(AON_SLPCNT_CAL_CTRL, 0x00);
2963:Core/Src/deca_device.c ****     // Run cal
2964:Core/Src/deca_device.c ****     dwt_aon_write(AON_SLPCNT_CAL_CTRL, 0x04);
2965:Core/Src/deca_device.c ****     deca_sleep(2); //need to wait for at least 1 LP OSC period at slowest frequency of 15kHz =~ 66 
2966:Core/Src/deca_device.c ****     // Read the Cal value from AON
2967:Core/Src/deca_device.c ****     temp = dwt_aon_read(AON_SLPCNT_CAL_LO);
2968:Core/Src/deca_device.c ****     temp = (temp) | (dwt_aon_read(AON_SLPCNT_CAL_HI) << 8);
2969:Core/Src/deca_device.c ****     // Clear cal
2970:Core/Src/deca_device.c ****     dwt_aon_write(AON_SLPCNT_CAL_CTRL, 0x00);
2971:Core/Src/deca_device.c ****     // Disable VDDPLL for reference clock
2972:Core/Src/deca_device.c ****     dwt_and8bitoffsetreg(LDO_CTRL_ID, 0, (uint8_t)~LDO_CTRL_LDO_VDDPLL_EN_BIT_MASK);
2973:Core/Src/deca_device.c ****     return (temp);
2974:Core/Src/deca_device.c **** }
2975:Core/Src/deca_device.c **** 
2976:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
2977:Core/Src/deca_device.c ****  * @brief configures the device for both DEEP_SLEEP and SLEEP modes, and on-wake mode
2978:Core/Src/deca_device.c ****  * i.e. before entering the sleep, the device should be programmed for TX or RX, then upon "waking 
2979:Core/Src/deca_device.c ****  * will be preserved and the device can immediately perform the desired action TX/RX
2980:Core/Src/deca_device.c ****  *
2981:Core/Src/deca_device.c ****  * NOTE: e.g. Tag operation - after deep sleep, the device needs to just load the TX buffer and sen
2982:Core/Src/deca_device.c ****  *
2983:Core/Src/deca_device.c ****  *
2984:Core/Src/deca_device.c ****  *      mode:
2985:Core/Src/deca_device.c ****  *      DWT_PGFCAL       0x0800
2986:Core/Src/deca_device.c ****  *      DWT_GOTORX       0x0200
2987:Core/Src/deca_device.c ****  *      DWT_GOTOIDLE     0x0100
2988:Core/Src/deca_device.c ****  *      DWT_SEL_OPS      0x0040 | 0x0080
2989:Core/Src/deca_device.c ****  *      DWT_LOADOPS      0x0020
2990:Core/Src/deca_device.c ****  *      DWT_LOADLDO      0x0010
2991:Core/Src/deca_device.c ****  *      DWT_LOADDGC      0x0008
2992:Core/Src/deca_device.c ****  *      DWT_LOADBIAS     0x0004
2993:Core/Src/deca_device.c ****  *      DWT_RUNSAR       0x0002
2994:Core/Src/deca_device.c ****  *      DWT_CONFIG       0x0001 - download the AON array into the HIF (configuration download)
2995:Core/Src/deca_device.c ****  *
2996:Core/Src/deca_device.c ****  *      wake: wake up parameters
2997:Core/Src/deca_device.c ****  *      DWT_SLP_CNT_RPT  0x40 - sleep counter loop after expiration
2998:Core/Src/deca_device.c ****  *      DWT_PRESRVE_SLP  0x20 - allows for SLEEP_EN bit to be "preserved", although it will self-cl
2999:Core/Src/deca_device.c ****  *      DWT_WAKE_WK      0x10 - wake up on WAKEUP PIN
3000:Core/Src/deca_device.c ****  *      DWT_WAKE_CS      0x8 - wake up on chip select
3001:Core/Src/deca_device.c ****  *      DWT_BR_DET       0x4 - enable brownout detector during sleep/deep sleep
3002:Core/Src/deca_device.c ****  *      DWT_SLEEP        0x2 - enable sleep
3003:Core/Src/deca_device.c ****  *      DWT_SLP_EN       0x1 - enable sleep/deep sleep functionality
3004:Core/Src/deca_device.c ****  *
3005:Core/Src/deca_device.c ****  * input parameters
3006:Core/Src/deca_device.c ****  * @param mode - config on-wake parameters
3007:Core/Src/deca_device.c ****  * @param wake - config wake up parameters
3008:Core/Src/deca_device.c ****  *
3009:Core/Src/deca_device.c ****  * output parameters
3010:Core/Src/deca_device.c ****  *
3011:Core/Src/deca_device.c ****  * no return value
3012:Core/Src/deca_device.c ****  */
3013:Core/Src/deca_device.c **** void dwt_configuresleep(uint16_t mode, uint8_t wake)
3014:Core/Src/deca_device.c **** {
3015:Core/Src/deca_device.c ****     // Add predefined sleep settings before writing the mode
ARM GAS  /tmp/cctZ3fzX.s 			page 71


3016:Core/Src/deca_device.c ****     pdw3000local->sleep_mode |= mode;
3017:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_DIG_CFG_ID, 0,  pdw3000local->sleep_mode);
3018:Core/Src/deca_device.c **** 
3019:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(ANA_CFG_ID, 0, wake); //bit 0 - SLEEP_EN, bit 1 - DEEP_SLEEP=0/SLEEP=1, 
3020:Core/Src/deca_device.c **** }
3021:Core/Src/deca_device.c **** 
3022:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3023:Core/Src/deca_device.c **** * @brief this function clears the AON configuration in DW3000
3024:Core/Src/deca_device.c **** *
3025:Core/Src/deca_device.c **** * input parameters:
3026:Core/Src/deca_device.c **** *
3027:Core/Src/deca_device.c **** * output parameters
3028:Core/Src/deca_device.c **** *
3029:Core/Src/deca_device.c **** * no return value
3030:Core/Src/deca_device.c **** */
3031:Core/Src/deca_device.c **** void dwt_clearaonconfig(void)
3032:Core/Src/deca_device.c **** {
3033:Core/Src/deca_device.c ****     // Clear any AON auto download bits (as reset will trigger AON download)
3034:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_DIG_CFG_ID, 0, 0x00);
3035:Core/Src/deca_device.c ****     // Clear the wake-up configuration
3036:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(ANA_CFG_ID, 0, 0x00);
3037:Core/Src/deca_device.c ****     // Upload the new configuration
3038:Core/Src/deca_device.c ****     // Copy config to AON - upload the new configuration
3039:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0, 0);
3040:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0, AON_CTRL_ARRAY_SAVE_BIT_MASK);
3041:Core/Src/deca_device.c **** }
3042:Core/Src/deca_device.c **** 
3043:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3044:Core/Src/deca_device.c ****  * @brief sets the auto TX to sleep bit. This means that after a frame
3045:Core/Src/deca_device.c ****  * transmission the device will enter deep sleep mode. The dwt_configuresleep() function
3046:Core/Src/deca_device.c ****  * needs to be called before this to configure the on-wake settings
3047:Core/Src/deca_device.c ****  *
3048:Core/Src/deca_device.c ****  * NOTE: the IRQ line has to be low/inactive (i.e. no pending events)
3049:Core/Src/deca_device.c ****  *
3050:Core/Src/deca_device.c ****  * input parameters
3051:Core/Src/deca_device.c ****  * @param enable - 1 to configure the device to enter deep sleep after TX, 0 - disables the configu
3052:Core/Src/deca_device.c ****  *
3053:Core/Src/deca_device.c ****  * output parameters
3054:Core/Src/deca_device.c ****  *
3055:Core/Src/deca_device.c ****  * no return value
3056:Core/Src/deca_device.c ****  */
3057:Core/Src/deca_device.c **** void dwt_entersleepaftertx(int enable)
3058:Core/Src/deca_device.c **** {
3059:Core/Src/deca_device.c ****     // Set the auto TX -> sleep bit
3060:Core/Src/deca_device.c ****     if(enable)
3061:Core/Src/deca_device.c ****     {
3062:Core/Src/deca_device.c ****         dwt_or16bitoffsetreg(SEQ_CTRL_ID, 0, SEQ_CTRL_ATX2SLP_BIT_MASK);
3063:Core/Src/deca_device.c ****     }
3064:Core/Src/deca_device.c ****     else
3065:Core/Src/deca_device.c ****     {
3066:Core/Src/deca_device.c ****         dwt_and16bitoffsetreg(SEQ_CTRL_ID, 0, (uint16_t)~SEQ_CTRL_ATX2SLP_BIT_MASK);
3067:Core/Src/deca_device.c ****     }
3068:Core/Src/deca_device.c **** }
3069:Core/Src/deca_device.c **** 
3070:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3071:Core/Src/deca_device.c ****  * @brief this reads the device ID and checks if it is the right one
3072:Core/Src/deca_device.c ****  *
ARM GAS  /tmp/cctZ3fzX.s 			page 72


3073:Core/Src/deca_device.c ****  * input parameters
3074:Core/Src/deca_device.c ****  * None
3075:Core/Src/deca_device.c ****  *
3076:Core/Src/deca_device.c ****  * output parameters
3077:Core/Src/deca_device.c ****  *
3078:Core/Src/deca_device.c ****  * returns DWT_SUCCESS for success, or DWT_ERROR for error
3079:Core/Src/deca_device.c ****  */
3080:Core/Src/deca_device.c **** int dwt_check_dev_id(void)
3081:Core/Src/deca_device.c **** {
3082:Core/Src/deca_device.c ****     uint32_t  dev_id;
3083:Core/Src/deca_device.c **** 
3084:Core/Src/deca_device.c ****     dev_id = dwt_readdevid();
3085:Core/Src/deca_device.c **** 
3086:Core/Src/deca_device.c ****     if (!((DWT_C0_PDOA_DEV_ID == dev_id) || (DWT_C0_DEV_ID == dev_id)))
3087:Core/Src/deca_device.c ****     {
3088:Core/Src/deca_device.c ****         return DWT_ERROR;
3089:Core/Src/deca_device.c ****     }
3090:Core/Src/deca_device.c ****     return DWT_SUCCESS;
3091:Core/Src/deca_device.c **** }
3092:Core/Src/deca_device.c **** 
3093:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3094:Core/Src/deca_device.c ****  * @brief this function enables CIA diagnostic data. When turned on the following registers will be
3095:Core/Src/deca_device.c ****  * IP_TOA_LO, IP_TOA_HI, STS_TOA_LO, STS_TOA_HI, STS1_TOA_LO, STS1_TOA_HI, CIA_TDOA_0, CIA_TDOA_1_P
3096:Core/Src/deca_device.c ****  *
3097:Core/Src/deca_device.c ****  * input parameters
3098:Core/Src/deca_device.c ****  * @param enable_mask :     DW_CIA_DIAG_LOG_MAX (0x8)   //CIA to copy to swinging set a maximum set
3099:Core/Src/deca_device.c ****  *                          DW_CIA_DIAG_LOG_MID (0x4)   //CIA to copy to swinging set a medium set 
3100:Core/Src/deca_device.c ****  *                          DW_CIA_DIAG_LOG_MIN (0x2)   //CIA to copy to swinging set a minimal set
3101:Core/Src/deca_device.c ****  *                          DW_CIA_DIAG_LOG_ALL (0x1)   //CIA to log all diagnostic registers
3102:Core/Src/deca_device.c ****  *                          DW_CIA_DIAG_LOG_MIN (0x0)   //CIA to log reduced set of diagnostic regi
3103:Core/Src/deca_device.c ****  *
3104:Core/Src/deca_device.c ****  * output parameters
3105:Core/Src/deca_device.c ****  *
3106:Core/Src/deca_device.c ****  * no return value
3107:Core/Src/deca_device.c ****  */
3108:Core/Src/deca_device.c **** void dwt_configciadiag(uint8_t enable_mask)
3109:Core/Src/deca_device.c **** {
3110:Core/Src/deca_device.c ****     if(enable_mask & DW_CIA_DIAG_LOG_ALL)
3111:Core/Src/deca_device.c ****     {
3112:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(CIA_CONF_ID, 2, ~(CIA_DIAGNOSTIC_OFF));
3113:Core/Src/deca_device.c ****     }
3114:Core/Src/deca_device.c ****     else
3115:Core/Src/deca_device.c ****     {
3116:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(CIA_CONF_ID, 2, CIA_DIAGNOSTIC_OFF);
3117:Core/Src/deca_device.c ****     }
3118:Core/Src/deca_device.c **** 
3119:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(RDB_DIAG_MODE_ID, 0, enable_mask >> 1);
3120:Core/Src/deca_device.c **** 
3121:Core/Src/deca_device.c ****     pdw3000local->cia_diagnostic = enable_mask;
3122:Core/Src/deca_device.c **** }
3123:Core/Src/deca_device.c **** 
3124:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3125:Core/Src/deca_device.c ****  * @brief This call enables the auto-ACK feature. If the responseDelayTime (parameter) is 0, the AC
3126:Core/Src/deca_device.c ****  * otherwise it will be sent with a programmed delay (in symbols), max is 255.
3127:Core/Src/deca_device.c ****  * NOTE: needs to have frame filtering enabled as well
3128:Core/Src/deca_device.c ****  *
3129:Core/Src/deca_device.c ****  * input parameters
ARM GAS  /tmp/cctZ3fzX.s 			page 73


3130:Core/Src/deca_device.c ****  * @param responseDelayTime - if non-zero the ACK is sent after this delay, max is 255.
3131:Core/Src/deca_device.c ****  * @param enable - enables or disables the auto-ACK feature
3132:Core/Src/deca_device.c ****  *
3133:Core/Src/deca_device.c ****  * output parameters
3134:Core/Src/deca_device.c ****  *
3135:Core/Src/deca_device.c ****  * no return value
3136:Core/Src/deca_device.c ****  */
3137:Core/Src/deca_device.c **** void dwt_enableautoack(uint8_t responseDelayTime, int enable)
3138:Core/Src/deca_device.c **** {
3139:Core/Src/deca_device.c ****     // Set auto ACK reply delay
3140:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(ACK_RESP_ID, 3, responseDelayTime); // In symbols
3141:Core/Src/deca_device.c **** 
3142:Core/Src/deca_device.c ****     // Enable AUTO ACK
3143:Core/Src/deca_device.c ****     if (enable)
3144:Core/Src/deca_device.c ****     {
3145:Core/Src/deca_device.c ****         dwt_or32bitoffsetreg(SYS_CFG_ID, 0, SYS_CFG_AUTO_ACK_BIT_MASK | SYS_CFG_FAST_AAT_EN_BIT_MAS
3146:Core/Src/deca_device.c ****     }
3147:Core/Src/deca_device.c ****     else
3148:Core/Src/deca_device.c ****     {
3149:Core/Src/deca_device.c ****         dwt_and16bitoffsetreg(SYS_CFG_ID, 0, (uint16_t)(~SYS_CFG_AUTO_ACK_BIT_MASK)); //clear the A
3150:Core/Src/deca_device.c ****     }
3151:Core/Src/deca_device.c **** }
3152:Core/Src/deca_device.c **** 
3153:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3154:Core/Src/deca_device.c ****  * @brief This API sends issues a command to the device that the specific RX buff is free for frame
3155:Core/Src/deca_device.c ****  * it will also update the dblbuffon flag/status to the next buffer
3156:Core/Src/deca_device.c ****  *
3157:Core/Src/deca_device.c ****  * input parameters
3158:Core/Src/deca_device.c ****  * @param None
3159:Core/Src/deca_device.c ****  *
3160:Core/Src/deca_device.c ****  * output parameters
3161:Core/Src/deca_device.c ****  *
3162:Core/Src/deca_device.c ****  * no return value
3163:Core/Src/deca_device.c ****  */
3164:Core/Src/deca_device.c **** void dwt_signal_rx_buff_free(void)
3165:Core/Src/deca_device.c **** {
3166:Core/Src/deca_device.c ****     dwt_writefastCMD(CMD_DB_TOGGLE);
3167:Core/Src/deca_device.c **** 
3168:Core/Src/deca_device.c ****     //update the status
3169:Core/Src/deca_device.c ****     if (pdw3000local->dblbuffon == DBL_BUFF_ACCESS_BUFFER_1)
3170:Core/Src/deca_device.c ****     {
3171:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_ACCESS_BUFFER_0;  //next buffer is RX_BUFFER_0
3172:Core/Src/deca_device.c ****     }
3173:Core/Src/deca_device.c ****     else
3174:Core/Src/deca_device.c ****     {
3175:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_ACCESS_BUFFER_1;  //next buffer is RX_BUFFER_1
3176:Core/Src/deca_device.c ****     }
3177:Core/Src/deca_device.c **** }
3178:Core/Src/deca_device.c **** 
3179:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3180:Core/Src/deca_device.c ****  * @brief This call enables the double receive buffer mode
3181:Core/Src/deca_device.c ****  *
3182:Core/Src/deca_device.c ****  * input parameters
3183:Core/Src/deca_device.c ****  * @param dbl_buff_state - enum variable for enabling/disabling double buffering mode
3184:Core/Src/deca_device.c ****  * @param dbl_buff_mode - enum variable for Receiver Auto-Re-enable
3185:Core/Src/deca_device.c ****  *
3186:Core/Src/deca_device.c ****  * output parameters
ARM GAS  /tmp/cctZ3fzX.s 			page 74


3187:Core/Src/deca_device.c ****  *
3188:Core/Src/deca_device.c ****  * no return value
3189:Core/Src/deca_device.c ****  */
3190:Core/Src/deca_device.c **** void dwt_setdblrxbuffmode(dwt_dbl_buff_state_e dbl_buff_state, dwt_dbl_buff_mode_e dbl_buff_mode)
3191:Core/Src/deca_device.c **** {
3192:Core/Src/deca_device.c ****     uint32_t  or_val=0,and_val=-1;
3193:Core/Src/deca_device.c **** 
3194:Core/Src/deca_device.c ****     if (dbl_buff_state==DBL_BUF_STATE_EN)
3195:Core/Src/deca_device.c ****     {
3196:Core/Src/deca_device.c ****         and_val= ~(SYS_CFG_DIS_DRXB_BIT_MASK);
3197:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_ACCESS_BUFFER_0;    //the host will access RX_BUFFER_0 i
3198:Core/Src/deca_device.c ****         //Updating indirect address here to save time setting it inside the interrupt(in order to r
3199:Core/Src/deca_device.c ****         //Pay attention that after sleep, this register needs to be set again.
3200:Core/Src/deca_device.c ****         dwt_write32bitreg(INDIRECT_ADDR_B_ID, (BUF1_RX_FINFO >> 16));
3201:Core/Src/deca_device.c ****         dwt_write32bitreg(ADDR_OFFSET_B_ID, BUF1_RX_FINFO & 0xffff);
3202:Core/Src/deca_device.c ****     }
3203:Core/Src/deca_device.c ****     else
3204:Core/Src/deca_device.c ****     {
3205:Core/Src/deca_device.c ****         or_val = SYS_CFG_DIS_DRXB_BIT_MASK;
3206:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_OFF;
3207:Core/Src/deca_device.c ****     }
3208:Core/Src/deca_device.c **** 
3209:Core/Src/deca_device.c ****     if (dbl_buff_mode == DBL_BUF_MODE_AUTO)
3210:Core/Src/deca_device.c ****     {
3211:Core/Src/deca_device.c ****         or_val |= SYS_CFG_RXAUTR_BIT_MASK;
3212:Core/Src/deca_device.c ****     }
3213:Core/Src/deca_device.c ****     else
3214:Core/Src/deca_device.c ****     {
3215:Core/Src/deca_device.c ****         and_val &= (~SYS_CFG_RXAUTR_BIT_MASK); //Clear the needed bit
3216:Core/Src/deca_device.c ****     }
3217:Core/Src/deca_device.c **** 
3218:Core/Src/deca_device.c ****     dwt_and_or32bitoffsetreg(SYS_CFG_ID,0, and_val, or_val);
3219:Core/Src/deca_device.c **** }
3220:Core/Src/deca_device.c **** 
3221:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3222:Core/Src/deca_device.c ****  * @brief This sets the receiver turn on delay time after a transmission of a frame
3223:Core/Src/deca_device.c ****  *
3224:Core/Src/deca_device.c ****  * input parameters
3225:Core/Src/deca_device.c ****  * @param rxDelayTime - (20 bits) - the delay is in UWB microseconds
3226:Core/Src/deca_device.c ****  *
3227:Core/Src/deca_device.c ****  * output parameters
3228:Core/Src/deca_device.c ****  *
3229:Core/Src/deca_device.c ****  * no return value
3230:Core/Src/deca_device.c ****  */
3231:Core/Src/deca_device.c **** void dwt_setrxaftertxdelay(uint32_t rxDelayTime)
3232:Core/Src/deca_device.c **** {
3233:Core/Src/deca_device.c ****     uint32_t val = dwt_read32bitreg(ACK_RESP_ID); // Read ACK_RESP_T_ID register
3234:Core/Src/deca_device.c **** 
3235:Core/Src/deca_device.c ****     val &= (~ACK_RESP_W4R_TIM_BIT_MASK); // Clear the timer (19:0)
3236:Core/Src/deca_device.c **** 
3237:Core/Src/deca_device.c ****     val |= (rxDelayTime & ACK_RESP_W4R_TIM_BIT_MASK); // In UWB microseconds (e.g. turn the receive
3238:Core/Src/deca_device.c **** 
3239:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(ACK_RESP_ID, 0, val);
3240:Core/Src/deca_device.c **** }
3241:Core/Src/deca_device.c **** 
3242:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3243:Core/Src/deca_device.c ****  * @brief This function is used to register the different callbacks called when one of the correspo
ARM GAS  /tmp/cctZ3fzX.s 			page 75


3244:Core/Src/deca_device.c ****  *
3245:Core/Src/deca_device.c ****  * NOTE: Callbacks can be undefined (set to NULL). In this case, dwt_isr() will process the event a
3246:Core/Src/deca_device.c ****  * callback will not be called.
3247:Core/Src/deca_device.c ****  *
3248:Core/Src/deca_device.c ****  * input parameters
3249:Core/Src/deca_device.c ****  * @param cbTxDone - the pointer to the TX confirmation event callback function
3250:Core/Src/deca_device.c ****  * @param cbRxOk - the pointer to the RX good frame event callback function
3251:Core/Src/deca_device.c ****  * @param cbRxTo - the pointer to the RX timeout events callback function
3252:Core/Src/deca_device.c ****  * @param cbRxErr - the pointer to the RX error events callback function
3253:Core/Src/deca_device.c ****  * @param cbSPIErr - the pointer to the SPI error events callback function
3254:Core/Src/deca_device.c ****  * @param cbSPIRdy - the pointer to the SPI ready events callback function
3255:Core/Src/deca_device.c ****  *
3256:Core/Src/deca_device.c ****  * output parameters
3257:Core/Src/deca_device.c ****  *
3258:Core/Src/deca_device.c ****  * no return value
3259:Core/Src/deca_device.c ****  */
3260:Core/Src/deca_device.c **** void dwt_setcallbacks(dwt_cb_t cbTxDone, dwt_cb_t cbRxOk, dwt_cb_t cbRxTo, dwt_cb_t cbRxErr, dwt_cb
3261:Core/Src/deca_device.c **** {
3262:Core/Src/deca_device.c ****     pdw3000local->cbTxDone = cbTxDone;
3263:Core/Src/deca_device.c ****     pdw3000local->cbRxOk = cbRxOk;
3264:Core/Src/deca_device.c ****     pdw3000local->cbRxTo = cbRxTo;
3265:Core/Src/deca_device.c ****     pdw3000local->cbRxErr = cbRxErr;
3266:Core/Src/deca_device.c ****     pdw3000local->cbSPIErr = cbSPIErr;
3267:Core/Src/deca_device.c ****     pdw3000local->cbSPIRdy = cbSPIRdy;
3268:Core/Src/deca_device.c **** }
3269:Core/Src/deca_device.c **** 
3270:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3271:Core/Src/deca_device.c ****  * @brief This function checks if the IRQ line is active - this is used instead of interrupt handle
3272:Core/Src/deca_device.c ****  *
3273:Core/Src/deca_device.c ****  * input parameters
3274:Core/Src/deca_device.c ****  *
3275:Core/Src/deca_device.c ****  * output parameters
3276:Core/Src/deca_device.c ****  *
3277:Core/Src/deca_device.c ****  * return value is 1 if the IRQS bit is set and 0 otherwise
3278:Core/Src/deca_device.c ****  */
3279:Core/Src/deca_device.c **** uint8_t dwt_checkirq(void)
3280:Core/Src/deca_device.c **** {
3281:Core/Src/deca_device.c ****     /* Reading the lower byte only is enough for this operation */
3282:Core/Src/deca_device.c ****     return (dwt_read8bitoffsetreg(SYS_STATUS_ID, 0) & SYS_STATUS_IRQS_BIT_MASK);
3283:Core/Src/deca_device.c **** }
3284:Core/Src/deca_device.c **** 
3285:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3286:Core/Src/deca_device.c ****  * @brief This function checks if the DW3000 is in IDLE_RC state
3287:Core/Src/deca_device.c ****  *
3288:Core/Src/deca_device.c ****  * input parameters
3289:Core/Src/deca_device.c ****  *
3290:Core/Src/deca_device.c ****  * output parameters
3291:Core/Src/deca_device.c ****  *
3292:Core/Src/deca_device.c ****  * return value is 1 if the IDLE_RC bit is set and 0 otherwise
3293:Core/Src/deca_device.c ****  */
3294:Core/Src/deca_device.c **** uint8_t dwt_checkidlerc(void)
3295:Core/Src/deca_device.c **** {
3296:Core/Src/deca_device.c ****     //deca_sleep(2); /* wait 2 ms for DW IC to get into IDLE_RC state */
3297:Core/Src/deca_device.c ****     /* Poll DW IC until IDLE_RC event set. This means that DW IC is in IDLE_RC state and ready */
3298:Core/Src/deca_device.c ****     uint32_t reg = ((uint32_t)dwt_read16bitoffsetreg(SYS_STATUS_ID, 2) << 16);
3299:Core/Src/deca_device.c ****     return ( (reg & (SYS_STATUS_RCINIT_BIT_MASK)) == (SYS_STATUS_RCINIT_BIT_MASK));
3300:Core/Src/deca_device.c **** }
ARM GAS  /tmp/cctZ3fzX.s 			page 76


3301:Core/Src/deca_device.c **** 
3302:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3303:Core/Src/deca_device.c ****  * @brief This is the DW3000's general Interrupt Service Routine. It will process/report the follow
3304:Core/Src/deca_device.c ****  *          - RXFR + no data mode (through cbRxOk callback, but set datalength to 0)
3305:Core/Src/deca_device.c ****  *          - RXFCG (through cbRxOk callback)
3306:Core/Src/deca_device.c ****  *          - TXFRS (through cbTxDone callback)
3307:Core/Src/deca_device.c ****  *          - RXRFTO/RXPTO (through cbRxTo callback)
3308:Core/Src/deca_device.c ****  *          - RXPHE/RXFCE/RXRFSL/RXSFDTO/AFFREJ/LDEERR/LCSSERR (through cbRxTo cbRxErr)
3309:Core/Src/deca_device.c ****  *          -
3310:Core/Src/deca_device.c ****  *        For all events, corresponding interrupts are cleared and necessary resets are performed. 
3311:Core/Src/deca_device.c ****  *        received frame information and frame control are read before calling the callback. If dou
3312:Core/Src/deca_device.c ****  *        will also toggle between reception buffers once the reception callback processing has end
3313:Core/Src/deca_device.c ****  *
3314:Core/Src/deca_device.c ****  *        /!\ This version of the ISR supports double buffering but does not support automatic RX r
3315:Core/Src/deca_device.c ****  *
3316:Core/Src/deca_device.c ****  * NOTE:  In PC based system using (Cheetah or ARM) USB to SPI converter there can be no interrupts
3317:Core/Src/deca_device.c ****  *        to take the place of it and operate in a polled way. In an embedded system this function 
3318:Core/Src/deca_device.c ****  *        on any of the interrupts described above.
3319:Core/Src/deca_device.c **** 
3320:Core/Src/deca_device.c ****  * input parameters
3321:Core/Src/deca_device.c ****  *
3322:Core/Src/deca_device.c ****  * output parameters
3323:Core/Src/deca_device.c ****  *
3324:Core/Src/deca_device.c ****  * no return value
3325:Core/Src/deca_device.c ****  */
3326:Core/Src/deca_device.c **** 
3327:Core/Src/deca_device.c **** 
3328:Core/Src/deca_device.c **** void dwt_isr(void)
3329:Core/Src/deca_device.c **** {
3330:Core/Src/deca_device.c **** 
3331:Core/Src/deca_device.c ****     //Read Fast Status register
3332:Core/Src/deca_device.c ****     uint8_t fstat = dwt_read8bitoffsetreg(FINT_STAT_ID, 0);
3333:Core/Src/deca_device.c ****     uint32_t status = dwt_read32bitreg(SYS_STATUS_ID); // Read status register low 32bits
3334:Core/Src/deca_device.c ****     pdw3000local->cbData.status = status;
3335:Core/Src/deca_device.c ****     if ((pdw3000local->stsconfig & DWT_STS_MODE_ND) == DWT_STS_MODE_ND) //cannot use FSTAT when in 
3336:Core/Src/deca_device.c ****     {
3337:Core/Src/deca_device.c **** 
3338:Core/Src/deca_device.c ****         if (status & SYS_STATUS_RXFR_BIT_MASK)
3339:Core/Src/deca_device.c ****         {
3340:Core/Src/deca_device.c ****             fstat |= FINT_STAT_RXOK_BIT_MASK;
3341:Core/Src/deca_device.c ****         }
3342:Core/Src/deca_device.c ****     }
3343:Core/Src/deca_device.c ****     // Handle System panic confirmation event
3344:Core/Src/deca_device.c ****     // AES_ERR|SPICRCERR|BRNOUT|SPI_UNF|SPI_OVR|CMD_ERR|SPI_COLLISION|PLLHILO
3345:Core/Src/deca_device.c ****     if(fstat & FINT_STAT_SYS_PANIC_BIT_MASK)
3346:Core/Src/deca_device.c ****     {
3347:Core/Src/deca_device.c ****         pdw3000local->cbData.status_hi = dwt_read16bitoffsetreg(SYS_STATUS_HI_ID, 0);
3348:Core/Src/deca_device.c **** 
3349:Core/Src/deca_device.c ****         // Handle SPI CRC error event, which was due to an SPI write CRC error
3350:Core/Src/deca_device.c ****         // Handle SPI error events (if this has happened, the last SPI transaction has not complete
3351:Core/Src/deca_device.c ****         if((pdw3000local->spicrc && (pdw3000local->cbData.status & SYS_STATUS_SPICRCE_BIT_MASK)) ||
3352:Core/Src/deca_device.c ****                 (pdw3000local->cbData.status_hi & (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATUS_HI_SP
3353:Core/Src/deca_device.c ****         {
3354:Core/Src/deca_device.c ****             dwt_write32bitreg(SYS_STATUS_ID, SYS_STATUS_SPICRCE_BIT_MASK);
3355:Core/Src/deca_device.c ****             dwt_write16bitoffsetreg(SYS_STATUS_HI_ID, 0, (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATU
3356:Core/Src/deca_device.c ****             // Call the corresponding callback if present
3357:Core/Src/deca_device.c ****             if(pdw3000local->cbSPIErr != NULL)
ARM GAS  /tmp/cctZ3fzX.s 			page 77


3358:Core/Src/deca_device.c ****             {
3359:Core/Src/deca_device.c ****                 pdw3000local->cbSPIErr(&pdw3000local->cbData);
3360:Core/Src/deca_device.c ****             }
3361:Core/Src/deca_device.c ****         }
3362:Core/Src/deca_device.c **** 
3363:Core/Src/deca_device.c ****         // Handle Fast CMD errors event, the means the last CMD did not execute (e.g. it was given 
3364:Core/Src/deca_device.c ****         if(pdw3000local->cbData.status_hi & SYS_STATUS_HI_CMD_ERR_BIT_MASK)
3365:Core/Src/deca_device.c ****         {
3366:Core/Src/deca_device.c ****             dwt_write16bitoffsetreg(SYS_STATUS_HI_ID, 0, SYS_STATUS_HI_CMD_ERR_BIT_MASK); // Clear 
3367:Core/Src/deca_device.c ****             // Call the corresponding callback if present
3368:Core/Src/deca_device.c ****             /*if(pdw3000local->cbCMDErr != NULL)
3369:Core/Src/deca_device.c ****             {
3370:Core/Src/deca_device.c ****                 pdw3000local->cbCMDErr(&pdw3000local->cbData);
3371:Core/Src/deca_device.c ****             }*/
3372:Core/Src/deca_device.c ****         }
3373:Core/Src/deca_device.c **** 
3374:Core/Src/deca_device.c ****         //AES_ERR, BRNOUT, PLLHILO not handled here ...
3375:Core/Src/deca_device.c ****     }
3376:Core/Src/deca_device.c **** 
3377:Core/Src/deca_device.c ****     // Handle TX frme sent confirmation event
3378:Core/Src/deca_device.c ****     if(fstat & FINT_STAT_TXOK_BIT_MASK)
3379:Core/Src/deca_device.c ****     {
3380:Core/Src/deca_device.c ****         // Clear TX events after the callback - this lets the host schedule another TX/RX inside th
3381:Core/Src/deca_device.c ****         dwt_write8bitoffsetreg(SYS_STATUS_ID, 0, (uint8_t)SYS_STATUS_ALL_TX); // Clear TX event bit
3382:Core/Src/deca_device.c **** 
3383:Core/Src/deca_device.c ****         // Call the corresponding callback if present
3384:Core/Src/deca_device.c ****         if(pdw3000local->cbTxDone != NULL)
3385:Core/Src/deca_device.c ****         {
3386:Core/Src/deca_device.c ****             pdw3000local->cbTxDone(&pdw3000local->cbData);
3387:Core/Src/deca_device.c ****         }
3388:Core/Src/deca_device.c **** 
3389:Core/Src/deca_device.c ****     }
3390:Core/Src/deca_device.c **** 
3391:Core/Src/deca_device.c **** 
3392:Core/Src/deca_device.c **** 
3393:Core/Src/deca_device.c ****     // SPI ready and IDLE_RC bit gets set when device powers on, or on wake up
3394:Core/Src/deca_device.c ****     if(fstat & FINT_STAT_SYS_EVENT_BIT_MASK)
3395:Core/Src/deca_device.c ****     {
3396:Core/Src/deca_device.c ****         //pdw3000local->cbData.status_hi = dwt_read16bitreg(SYS_STATUS_HI_ID);
3397:Core/Src/deca_device.c **** 
3398:Core/Src/deca_device.c ****         // Call the corresponding callback if present
3399:Core/Src/deca_device.c ****         if(pdw3000local->cbSPIRdy != NULL)
3400:Core/Src/deca_device.c ****         {
3401:Core/Src/deca_device.c ****             pdw3000local->cbSPIRdy(&pdw3000local->cbData);
3402:Core/Src/deca_device.c ****         }
3403:Core/Src/deca_device.c ****         // Clear SPI RDY events after the callback - this lets the host read the SYS_STATUS registe
3404:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(SYS_STATUS_ID, 2, (uint16_t)((SYS_STATUS_RCINIT_BIT_MASK | SYS_STAT
3405:Core/Src/deca_device.c **** 
3406:Core/Src/deca_device.c ****         //VTDET, GPIO, not handled here ...
3407:Core/Src/deca_device.c ****     }
3408:Core/Src/deca_device.c **** 
3409:Core/Src/deca_device.c ****     // Handle RX ok events
3410:Core/Src/deca_device.c ****     if(fstat & FINT_STAT_RXOK_BIT_MASK)
3411:Core/Src/deca_device.c ****     {
3412:Core/Src/deca_device.c ****         uint32_t cia_err = 0;
3413:Core/Src/deca_device.c ****         
3414:Core/Src/deca_device.c ****         pdw3000local->cbData.rx_flags = 0;
ARM GAS  /tmp/cctZ3fzX.s 			page 78


3415:Core/Src/deca_device.c **** 
3416:Core/Src/deca_device.c ****         if(pdw3000local->dblbuffon) // if in double buffer mode
3417:Core/Src/deca_device.c ****         {
3418:Core/Src/deca_device.c ****             uint8_t statusDB = dwt_read8bitoffsetreg(RDB_STATUS_ID,0);
3419:Core/Src/deca_device.c **** 
3420:Core/Src/deca_device.c ****             if (pdw3000local->dblbuffon == DBL_BUFF_ACCESS_BUFFER_1) //If accessing the second buff
3421:Core/Src/deca_device.c ****             {
3422:Core/Src/deca_device.c ****                 statusDB >>= 4;
3423:Core/Src/deca_device.c ****             }
3424:Core/Src/deca_device.c ****             //setting the relevant bits in the main status register according to DB status register
3425:Core/Src/deca_device.c ****             if (statusDB & RDB_STATUS_RXFCG0_BIT_MASK)
3426:Core/Src/deca_device.c ****                 status |= SYS_STATUS_RXFCG_BIT_MASK;
3427:Core/Src/deca_device.c ****             if (statusDB & RDB_STATUS_RXFR0_BIT_MASK)
3428:Core/Src/deca_device.c ****                 status |= SYS_STATUS_RXFR_BIT_MASK;
3429:Core/Src/deca_device.c ****             if (statusDB & RDB_STATUS_CIADONE0_BIT_MASK)
3430:Core/Src/deca_device.c ****                 status |= SYS_STATUS_CIADONE_BIT_MASK;
3431:Core/Src/deca_device.c ****         }
3432:Core/Src/deca_device.c ****         //update the status based on the DB RX events
3433:Core/Src/deca_device.c ****         pdw3000local->cbData.status = status;
3434:Core/Src/deca_device.c ****         //clear LDE error (as we do not want to go back into cbRxErr)
3435:Core/Src/deca_device.c ****         if (status & SYS_STATUS_CIAERR_BIT_MASK)
3436:Core/Src/deca_device.c ****         {
3437:Core/Src/deca_device.c ****             pdw3000local->cbData.rx_flags |= DWT_CB_DATA_RX_FLAG_CER;
3438:Core/Src/deca_device.c ****             cia_err = SYS_STATUS_CIAERR_BIT_MASK;
3439:Core/Src/deca_device.c ****         }
3440:Core/Src/deca_device.c ****         else
3441:Core/Src/deca_device.c ****         {
3442:Core/Src/deca_device.c ****             if (status & SYS_STATUS_CIADONE_BIT_MASK)
3443:Core/Src/deca_device.c ****             {
3444:Core/Src/deca_device.c ****                 pdw3000local->cbData.rx_flags |= DWT_CB_DATA_RX_FLAG_CIA;
3445:Core/Src/deca_device.c ****             }
3446:Core/Src/deca_device.c ****         }
3447:Core/Src/deca_device.c **** 
3448:Core/Src/deca_device.c ****         if (status & SYS_STATUS_CPERR_BIT_MASK)
3449:Core/Src/deca_device.c ****         {
3450:Core/Src/deca_device.c ****             pdw3000local->cbData.rx_flags |= DWT_CB_DATA_RX_FLAG_CPER;
3451:Core/Src/deca_device.c ****             cia_err |= SYS_STATUS_CPERR_BIT_MASK;
3452:Core/Src/deca_device.c ****         }
3453:Core/Src/deca_device.c **** 
3454:Core/Src/deca_device.c ****         // When using No Data STS mode we do not get RXFCG but RXFR
3455:Core/Src/deca_device.c ****         if ((status & SYS_STATUS_RXFR_BIT_MASK) && ((pdw3000local->stsconfig & DWT_STS_MODE_ND) == 
3456:Core/Src/deca_device.c ****         {
3457:Core/Src/deca_device.c ****             pdw3000local->cbData.rx_flags |= DWT_CB_DATA_RX_FLAG_ND;
3458:Core/Src/deca_device.c ****             pdw3000local->cbData.datalength = 0;
3459:Core/Src/deca_device.c **** 
3460:Core/Src/deca_device.c ****             cia_err |= SYS_STATUS_RXFCE_BIT_MASK; // Clear FCE
3461:Core/Src/deca_device.c **** 
3462:Core/Src/deca_device.c ****         }
3463:Core/Src/deca_device.c ****         else
3464:Core/Src/deca_device.c ****         // Handle RX good frame event
3465:Core/Src/deca_device.c ****         if (status & SYS_STATUS_RXFCG_BIT_MASK)
3466:Core/Src/deca_device.c ****         {
3467:Core/Src/deca_device.c ****             uint16_t finfo16;
3468:Core/Src/deca_device.c **** 
3469:Core/Src/deca_device.c ****             // Read frame info - Only the first two bytes of the register are used here.
3470:Core/Src/deca_device.c ****             switch (pdw3000local->dblbuffon)  //check if in double buffer mode and if so which buff
3471:Core/Src/deca_device.c ****             {
ARM GAS  /tmp/cctZ3fzX.s 			page 79


3472:Core/Src/deca_device.c ****             case DBL_BUFF_ACCESS_BUFFER_1: //accessing frame info relating to the second buffer (RX
3473:Core/Src/deca_device.c ****                 dwt_write8bitoffsetreg(RDB_STATUS_ID, 0, RDB_STATUS_CLEAR_BUFF1_EVENTS);  //clear D
3474:Core/Src/deca_device.c ****                 finfo16 = dwt_read16bitoffsetreg(INDIRECT_POINTER_B_ID, 0);
3475:Core/Src/deca_device.c ****                 break;
3476:Core/Src/deca_device.c ****             case DBL_BUFF_ACCESS_BUFFER_0: //accessing frame info relating to the first buffer (RX_
3477:Core/Src/deca_device.c ****                 dwt_write8bitoffsetreg(RDB_STATUS_ID, 0, RDB_STATUS_CLEAR_BUFF0_EVENTS);  //clear D
3478:Core/Src/deca_device.c ****                 finfo16 = dwt_read16bitoffsetreg(BUF0_RX_FINFO, 0);
3479:Core/Src/deca_device.c ****                 break;
3480:Core/Src/deca_device.c ****             default: //accessing frame info relating to the second buffer (RX_BUFFER_0) (single buf
3481:Core/Src/deca_device.c ****                 finfo16 = dwt_read16bitoffsetreg(RX_FINFO_ID, 0);
3482:Core/Src/deca_device.c ****                 break;
3483:Core/Src/deca_device.c ****             }
3484:Core/Src/deca_device.c **** 
3485:Core/Src/deca_device.c ****             // Report frame length - Standard frame length up to 127, extended frame length up to 1
3486:Core/Src/deca_device.c ****             if(pdw3000local->longFrames == 0)
3487:Core/Src/deca_device.c ****             {
3488:Core/Src/deca_device.c ****                 pdw3000local->cbData.datalength = finfo16 & RX_FINFO_STD_RXFLEN_MASK;
3489:Core/Src/deca_device.c ****             }
3490:Core/Src/deca_device.c ****             else
3491:Core/Src/deca_device.c ****             {
3492:Core/Src/deca_device.c ****                 pdw3000local->cbData.datalength = finfo16 & RX_FINFO_RXFLEN_BIT_MASK;
3493:Core/Src/deca_device.c ****             }
3494:Core/Src/deca_device.c **** 
3495:Core/Src/deca_device.c ****             // Report ranging bit
3496:Core/Src/deca_device.c ****             if(finfo16 & RX_FINFO_RNG_BIT_MASK)
3497:Core/Src/deca_device.c ****             {
3498:Core/Src/deca_device.c ****                 pdw3000local->cbData.rx_flags |= DWT_CB_DATA_RX_FLAG_RNG;
3499:Core/Src/deca_device.c ****             }
3500:Core/Src/deca_device.c **** 
3501:Core/Src/deca_device.c ****         }
3502:Core/Src/deca_device.c ****         
3503:Core/Src/deca_device.c ****         dwt_write32bitreg(SYS_STATUS_ID, cia_err | SYS_STATUS_ALL_RX_GOOD); // Clear all status bit
3504:Core/Src/deca_device.c **** 
3505:Core/Src/deca_device.c ****         // Call the corresponding callback if present
3506:Core/Src/deca_device.c ****         if(pdw3000local->cbRxOk != NULL)
3507:Core/Src/deca_device.c ****         {
3508:Core/Src/deca_device.c ****             pdw3000local->cbRxOk(&pdw3000local->cbData);
3509:Core/Src/deca_device.c ****         }
3510:Core/Src/deca_device.c **** 
3511:Core/Src/deca_device.c ****         if (pdw3000local->dblbuffon)   //check if in double buffer mode and if so which buffer host
3512:Core/Src/deca_device.c ****         {
3513:Core/Src/deca_device.c ****             // Free up the current buffer - let the device know that it can receive into this buffe
3514:Core/Src/deca_device.c ****             dwt_signal_rx_buff_free();
3515:Core/Src/deca_device.c ****         }
3516:Core/Src/deca_device.c **** 
3517:Core/Src/deca_device.c ****     }
3518:Core/Src/deca_device.c **** 	
3519:Core/Src/deca_device.c ****     // RXFCE&~DISFCE|RXPHE|RXFSL|ARFE|RXSTO|RXOVRR. Real errored frame received, so ignore FCE if d
3520:Core/Src/deca_device.c ****     // Handle RX errors events
3521:Core/Src/deca_device.c ****     if(fstat & FINT_STAT_RXERR_BIT_MASK)
3522:Core/Src/deca_device.c ****     {
3523:Core/Src/deca_device.c ****         // Clear RX error events before the callback - this lets the host renable the receiver insi
3524:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(SYS_STATUS_ID, 0, SYS_STATUS_ALL_RX_ERR); // Clear RX error event b
3525:Core/Src/deca_device.c **** 
3526:Core/Src/deca_device.c ****         // Call the corresponding callback if present
3527:Core/Src/deca_device.c ****         if(pdw3000local->cbRxErr != NULL)
3528:Core/Src/deca_device.c ****         {
ARM GAS  /tmp/cctZ3fzX.s 			page 80


3529:Core/Src/deca_device.c ****             pdw3000local->cbRxErr(&pdw3000local->cbData);
3530:Core/Src/deca_device.c ****         }
3531:Core/Src/deca_device.c **** 
3532:Core/Src/deca_device.c ****     }
3533:Core/Src/deca_device.c **** 
3534:Core/Src/deca_device.c ****     // Handle RX Timeout event (PTO and FWTO)
3535:Core/Src/deca_device.c ****     if(fstat & FINT_STAT_RXTO_BIT_MASK)
3536:Core/Src/deca_device.c ****     {
3537:Core/Src/deca_device.c ****         // Clear RX TO events before the callback - this lets the host renable the receiver inside 
3538:Core/Src/deca_device.c ****         dwt_write8bitoffsetreg(SYS_STATUS_ID, 2, (uint8_t)(SYS_STATUS_ALL_RX_TO >> 16)); // Clear R
3539:Core/Src/deca_device.c **** 
3540:Core/Src/deca_device.c ****         // Call the corresponding callback if present
3541:Core/Src/deca_device.c ****         if(pdw3000local->cbRxTo != NULL)
3542:Core/Src/deca_device.c ****         {
3543:Core/Src/deca_device.c ****             pdw3000local->cbRxTo(&pdw3000local->cbData);
3544:Core/Src/deca_device.c ****         }
3545:Core/Src/deca_device.c **** 
3546:Core/Src/deca_device.c ****     }
3547:Core/Src/deca_device.c **** 
3548:Core/Src/deca_device.c **** 
3549:Core/Src/deca_device.c **** }
3550:Core/Src/deca_device.c **** 
3551:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3552:Core/Src/deca_device.c ****  * @brief This is used to set up Tx/Rx GPIOs which could be used to control LEDs
3553:Core/Src/deca_device.c ****  * Note: not completely IC dependent, also needs board with LEDS fitted on right I/O lines
3554:Core/Src/deca_device.c ****  *       this function enables GPIOs 2 and 3 which are connected to LED3 and LED4 on EVB1000
3555:Core/Src/deca_device.c ****  *
3556:Core/Src/deca_device.c ****  * input parameters
3557:Core/Src/deca_device.c ****  * @param mode - this is a bit field interpreted as follows:
3558:Core/Src/deca_device.c ****  *          - bit 0: 1 to enable LEDs, 0 to disable them
3559:Core/Src/deca_device.c ****  *          - bit 1: 1 to make LEDs blink once on init. Only valid if bit 0 is set (enable LEDs)
3560:Core/Src/deca_device.c ****  *          - bit 2 to 7: reserved
3561:Core/Src/deca_device.c ****  *
3562:Core/Src/deca_device.c ****  * output parameters none
3563:Core/Src/deca_device.c ****  *
3564:Core/Src/deca_device.c ****  * no return value
3565:Core/Src/deca_device.c ****  */
3566:Core/Src/deca_device.c **** void dwt_setleds(uint8_t mode)
3567:Core/Src/deca_device.c **** {
3568:Core/Src/deca_device.c ****     uint32_t reg;
3569:Core/Src/deca_device.c ****     if (mode & DWT_LEDS_ENABLE)
3570:Core/Src/deca_device.c ****     {
3571:Core/Src/deca_device.c ****         // Set up MFIO for LED output.
3572:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(GPIO_MODE_ID, 0, ~(GPIO_MODE_MSGP3_MODE_BIT_MASK | GPIO_MODE_MSGP2
3573:Core/Src/deca_device.c **** 
3574:Core/Src/deca_device.c ****         // Enable LP Oscillator to run from counter and turn on de-bounce clock.
3575:Core/Src/deca_device.c ****         dwt_or32bitoffsetreg(CLK_CTRL_ID, 0, (CLK_CTRL_GPIO_DCLK_EN_BIT_MASK | CLK_CTRL_LP_CLK_EN_B
3576:Core/Src/deca_device.c **** 
3577:Core/Src/deca_device.c ****         // Enable LEDs to blink and set default blink time.
3578:Core/Src/deca_device.c ****         reg = LED_CTRL_BLINK_EN_BIT_MASK | DWT_LEDS_BLINK_TIME_DEF;
3579:Core/Src/deca_device.c ****         // Make LEDs blink once if requested.
3580:Core/Src/deca_device.c ****         if (mode & DWT_LEDS_INIT_BLINK)
3581:Core/Src/deca_device.c ****         {
3582:Core/Src/deca_device.c ****             reg |= LED_CTRL_FORCE_TRIGGER_BIT_MASK;
3583:Core/Src/deca_device.c ****         }
3584:Core/Src/deca_device.c ****         dwt_write32bitreg(LED_CTRL_ID, reg);
3585:Core/Src/deca_device.c ****         // Clear force blink bits if needed.
ARM GAS  /tmp/cctZ3fzX.s 			page 81


3586:Core/Src/deca_device.c ****         if(mode & DWT_LEDS_INIT_BLINK)
3587:Core/Src/deca_device.c ****         {
3588:Core/Src/deca_device.c ****             reg &= (~LED_CTRL_FORCE_TRIGGER_BIT_MASK);
3589:Core/Src/deca_device.c ****             dwt_write32bitreg(LED_CTRL_ID, reg);
3590:Core/Src/deca_device.c ****         }
3591:Core/Src/deca_device.c ****     }
3592:Core/Src/deca_device.c ****     else
3593:Core/Src/deca_device.c ****     {
3594:Core/Src/deca_device.c ****         // Clear the GPIO bits that are used for LED control.
3595:Core/Src/deca_device.c ****         dwt_and32bitoffsetreg(GPIO_MODE_ID, 0, ~(GPIO_MODE_MSGP2_MODE_BIT_MASK | GPIO_MODE_MSGP3_MO
3596:Core/Src/deca_device.c ****         dwt_and16bitoffsetreg(LED_CTRL_ID, 0, (uint16_t) ~LED_CTRL_BLINK_EN_BIT_MASK);
3597:Core/Src/deca_device.c ****     }
3598:Core/Src/deca_device.c **** 
3599:Core/Src/deca_device.c **** }
3600:Core/Src/deca_device.c **** 
3601:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3602:Core/Src/deca_device.c ****  * @brief function to enable/disable clocks to particular digital blocks/system
3603:Core/Src/deca_device.c ****  *
3604:Core/Src/deca_device.c ****  * input parameters
3605:Core/Src/deca_device.c ****  * @param clocks - set of clocks to enable/disable
3606:Core/Src/deca_device.c ****  *
3607:Core/Src/deca_device.c ****  * output parameters none
3608:Core/Src/deca_device.c ****  *
3609:Core/Src/deca_device.c ****  * no return value
3610:Core/Src/deca_device.c ****  */
3611:Core/Src/deca_device.c **** static
3612:Core/Src/deca_device.c **** void dwt_force_clocks(int clocks)
3613:Core/Src/deca_device.c **** {
3614:Core/Src/deca_device.c **** 
3615:Core/Src/deca_device.c ****     if (clocks == FORCE_CLK_SYS_TX)
3616:Core/Src/deca_device.c ****     {
3617:Core/Src/deca_device.c ****         uint16_t regvalue0 = CLK_CTRL_TX_BUF_CLK_ON_BIT_MASK | CLK_CTRL_RX_BUF_CLK_ON_BIT_MASK;
3618:Core/Src/deca_device.c **** 
3619:Core/Src/deca_device.c ****         //SYS_CLK_SEL = PLL
3620:Core/Src/deca_device.c ****         regvalue0 |= ((uint16_t) FORCE_SYSCLK_PLL) << CLK_CTRL_SYS_CLK_SEL_BIT_OFFSET;
3621:Core/Src/deca_device.c **** 
3622:Core/Src/deca_device.c ****         //TX_CLK_SEL = ON
3623:Core/Src/deca_device.c ****         regvalue0 |= ((uint16_t) FORCE_CLK_PLL) << CLK_CTRL_TX_CLK_SEL_BIT_OFFSET;
3624:Core/Src/deca_device.c **** 
3625:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(CLK_CTRL_ID, 0x0, regvalue0);
3626:Core/Src/deca_device.c **** 
3627:Core/Src/deca_device.c ****     }
3628:Core/Src/deca_device.c ****     
3629:Core/Src/deca_device.c ****     if (clocks == FORCE_CLK_AUTO)
3630:Core/Src/deca_device.c ****     {
3631:Core/Src/deca_device.c ****         //Restore auto clock mode
3632:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(CLK_CTRL_ID, 0x0, (uint16_t) DWT_AUTO_CLKS);  //we only need to res
3633:Core/Src/deca_device.c ****     }
3634:Core/Src/deca_device.c **** 
3635:Core/Src/deca_device.c **** } // end dwt_force_clocks()
3636:Core/Src/deca_device.c **** 
3637:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3638:Core/Src/deca_device.c ****  * @brief This API function configures the reference time used for relative timing of delayed sendi
3639:Core/Src/deca_device.c ****  * The value is at a 8ns resolution.
3640:Core/Src/deca_device.c ****  *
3641:Core/Src/deca_device.c ****  * input parameters
3642:Core/Src/deca_device.c ****  * @param reftime - the reference time (which together with DX_TIME or TX timestamp or RX timestamp
ARM GAS  /tmp/cctZ3fzX.s 			page 82


3643:Core/Src/deca_device.c ****  * transmission time or delayed RX on time)
3644:Core/Src/deca_device.c ****  *
3645:Core/Src/deca_device.c ****  * output parameters none
3646:Core/Src/deca_device.c ****  *
3647:Core/Src/deca_device.c ****  * no return value
3648:Core/Src/deca_device.c ****  */
3649:Core/Src/deca_device.c **** void dwt_setreferencetrxtime(uint32_t reftime)
3650:Core/Src/deca_device.c **** {
3651:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DREF_TIME_ID, 0, reftime); // Note: bit 0 of this register is ignored
3652:Core/Src/deca_device.c **** } // end dwt_setreferencetrxtime()
3653:Core/Src/deca_device.c **** 
3654:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3655:Core/Src/deca_device.c ****  * @brief This API function configures the delayed transmit time or the delayed RX on time
3656:Core/Src/deca_device.c ****  * The value is at a 8ns resolution.
3657:Core/Src/deca_device.c ****  *
3658:Core/Src/deca_device.c ****  * input parameters
3659:Core/Src/deca_device.c ****  * @param starttime - the TX/RX start time (the 32 bits should be the high 32 bits of the system ti
3660:Core/Src/deca_device.c ****  * or at which to turn on the receiver)
3661:Core/Src/deca_device.c ****  *
3662:Core/Src/deca_device.c ****  * output parameters none
3663:Core/Src/deca_device.c ****  *
3664:Core/Src/deca_device.c ****  * no return value
3665:Core/Src/deca_device.c ****  */
3666:Core/Src/deca_device.c **** void dwt_setdelayedtrxtime(uint32_t starttime)
3667:Core/Src/deca_device.c **** {
3668:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DX_TIME_ID, 0, starttime); // Note: bit 0 of this register is ignored
3669:Core/Src/deca_device.c **** } // end dwt_setdelayedtrxtime()
3670:Core/Src/deca_device.c **** 
3671:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3672:Core/Src/deca_device.c ****  * @brief This call initiates the transmission, input parameter indicates which TX mode is used see
3673:Core/Src/deca_device.c ****  *
3674:Core/Src/deca_device.c ****  * input parameters:
3675:Core/Src/deca_device.c ****  * @param mode - if mode = DWT_START_TX_IMMEDIATE - immediate TX (no response expected)
3676:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_DELAYED - delayed TX (no response expected)  at specified t
3677:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_DLY_REF - delayed TX (no response expected)  at specified t
3678:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_DLY_RS  - delayed TX (no response expected)  at specified t
3679:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_DLY_TS  - delayed TX (no response expected)  at specified t
3680:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_IMMEDIATE | DWT_RESPONSE_EXPECTED - immediate TX (response 
3681:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_DELAYED/DLY_* | DWT_RESPONSE_EXPECTED - delayed TX (respons
3682:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_CCA - Send the frame if no preamble detected within PTO tim
3683:Core/Src/deca_device.c ****  *               if mode = DWT_START_TX_CCA  | DWT_RESPONSE_EXPECTED - Send the frame if no preambl
3684:Core/Src/deca_device.c ****  * output parameters
3685:Core/Src/deca_device.c ****  *
3686:Core/Src/deca_device.c ****  * returns DWT_SUCCESS for success, or DWT_ERROR for error (e.g. a delayed transmission will be can
3687:Core/Src/deca_device.c ****  */
3688:Core/Src/deca_device.c **** int dwt_starttx(uint8_t mode)
3689:Core/Src/deca_device.c **** {
3690:Core/Src/deca_device.c ****     int retval = DWT_SUCCESS ;
3691:Core/Src/deca_device.c ****     uint16_t checkTxOK = 0 ;
3692:Core/Src/deca_device.c ****     uint32_t sys_state;
3693:Core/Src/deca_device.c **** 
3694:Core/Src/deca_device.c ****     if ((mode & DWT_START_TX_DELAYED) || (mode & DWT_START_TX_DLY_REF)
3695:Core/Src/deca_device.c ****             || (mode & DWT_START_TX_DLY_RS) || (mode & DWT_START_TX_DLY_TS))
3696:Core/Src/deca_device.c ****     {
3697:Core/Src/deca_device.c ****         if(mode & DWT_START_TX_DELAYED) //delayed TX
3698:Core/Src/deca_device.c ****         {
3699:Core/Src/deca_device.c ****             if(mode & DWT_RESPONSE_EXPECTED)
ARM GAS  /tmp/cctZ3fzX.s 			page 83


3700:Core/Src/deca_device.c ****             {
3701:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX_W4R);
3702:Core/Src/deca_device.c ****             }
3703:Core/Src/deca_device.c ****             else
3704:Core/Src/deca_device.c ****             {
3705:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX);
3706:Core/Src/deca_device.c ****             }
3707:Core/Src/deca_device.c ****         }
3708:Core/Src/deca_device.c ****         else if (mode & DWT_START_TX_DLY_RS) //delayed TX WRT RX timestamp
3709:Core/Src/deca_device.c ****         {
3710:Core/Src/deca_device.c ****             if(mode & DWT_RESPONSE_EXPECTED)
3711:Core/Src/deca_device.c ****             {
3712:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX_RS_W4R);
3713:Core/Src/deca_device.c ****             }
3714:Core/Src/deca_device.c ****             else
3715:Core/Src/deca_device.c ****             {
3716:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX_RS);
3717:Core/Src/deca_device.c ****             }
3718:Core/Src/deca_device.c ****         }
3719:Core/Src/deca_device.c ****         else if (mode & DWT_START_TX_DLY_TS) //delayed TX WRT TX timestamp
3720:Core/Src/deca_device.c ****         {
3721:Core/Src/deca_device.c ****             if(mode & DWT_RESPONSE_EXPECTED)
3722:Core/Src/deca_device.c ****             {
3723:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX_TS_W4R);
3724:Core/Src/deca_device.c ****             }
3725:Core/Src/deca_device.c ****             else
3726:Core/Src/deca_device.c ****             {
3727:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX_TS);
3728:Core/Src/deca_device.c ****             }
3729:Core/Src/deca_device.c ****         }
3730:Core/Src/deca_device.c ****         else  //delayed TX WRT reference time
3731:Core/Src/deca_device.c ****         {
3732:Core/Src/deca_device.c ****             if(mode & DWT_RESPONSE_EXPECTED)
3733:Core/Src/deca_device.c ****             {
3734:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX_REF_W4R);
3735:Core/Src/deca_device.c ****             }
3736:Core/Src/deca_device.c ****             else
3737:Core/Src/deca_device.c ****             {
3738:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DTX_REF);
3739:Core/Src/deca_device.c ****             }
3740:Core/Src/deca_device.c ****         }
3741:Core/Src/deca_device.c **** 
3742:Core/Src/deca_device.c ****         checkTxOK = dwt_read8bitoffsetreg(SYS_STATUS_ID, 3); // Read at offset 3 to get the upper 2
3743:Core/Src/deca_device.c ****         if ((checkTxOK & (SYS_STATUS_HPDWARN_BIT_MASK>>24)) == 0) // Transmit Delayed Send set over
3744:Core/Src/deca_device.c ****         {
3745:Core/Src/deca_device.c ****             sys_state = dwt_read32bitreg(SYS_STATE_LO_ID);
3746:Core/Src/deca_device.c ****             if (sys_state == DW_SYS_STATE_TXERR)
3747:Core/Src/deca_device.c ****             {
3748:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_TXRXOFF);
3749:Core/Src/deca_device.c ****                 retval = DWT_ERROR ; // Failed !
3750:Core/Src/deca_device.c ****             }
3751:Core/Src/deca_device.c ****             else
3752:Core/Src/deca_device.c ****             {
3753:Core/Src/deca_device.c ****                 retval = DWT_SUCCESS ; // All okay
3754:Core/Src/deca_device.c ****             }
3755:Core/Src/deca_device.c ****         }
3756:Core/Src/deca_device.c ****         else
ARM GAS  /tmp/cctZ3fzX.s 			page 84


3757:Core/Src/deca_device.c ****         {
3758:Core/Src/deca_device.c ****             dwt_writefastCMD(CMD_TXRXOFF);
3759:Core/Src/deca_device.c ****             retval = DWT_ERROR ; // Failed !
3760:Core/Src/deca_device.c **** 
3761:Core/Src/deca_device.c ****             //optionally could return error, and still send the frame at indicated time
3762:Core/Src/deca_device.c ****             //then if the application want to cancel the sending this can be done in a separate com
3763:Core/Src/deca_device.c ****         }
3764:Core/Src/deca_device.c ****     }
3765:Core/Src/deca_device.c ****     else if(mode & DWT_START_TX_CCA)
3766:Core/Src/deca_device.c ****     {
3767:Core/Src/deca_device.c ****         if(mode & DWT_RESPONSE_EXPECTED)
3768:Core/Src/deca_device.c ****         {
3769:Core/Src/deca_device.c ****             dwt_writefastCMD(CMD_CCA_TX_W4R);
3770:Core/Src/deca_device.c ****         }
3771:Core/Src/deca_device.c ****         else
3772:Core/Src/deca_device.c ****         {
3773:Core/Src/deca_device.c ****             dwt_writefastCMD(CMD_CCA_TX);
3774:Core/Src/deca_device.c ****         }
3775:Core/Src/deca_device.c ****     }
3776:Core/Src/deca_device.c ****     else
3777:Core/Src/deca_device.c ****     {
3778:Core/Src/deca_device.c ****         if(mode & DWT_RESPONSE_EXPECTED)
3779:Core/Src/deca_device.c ****         {
3780:Core/Src/deca_device.c ****             dwt_writefastCMD(CMD_TX_W4R);
3781:Core/Src/deca_device.c ****         }
3782:Core/Src/deca_device.c ****         else
3783:Core/Src/deca_device.c ****         {
3784:Core/Src/deca_device.c ****             dwt_writefastCMD(CMD_TX);
3785:Core/Src/deca_device.c ****         }
3786:Core/Src/deca_device.c ****     }
3787:Core/Src/deca_device.c **** 
3788:Core/Src/deca_device.c ****     return retval;
3789:Core/Src/deca_device.c **** 
3790:Core/Src/deca_device.c **** } // end dwt_starttx()
3791:Core/Src/deca_device.c **** 
3792:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3793:Core/Src/deca_device.c ****  * @brief This is used to turn off the transceiver
3794:Core/Src/deca_device.c ****  *
3795:Core/Src/deca_device.c ****  * input parameters
3796:Core/Src/deca_device.c ****  *
3797:Core/Src/deca_device.c ****  * output parameters
3798:Core/Src/deca_device.c ****  *
3799:Core/Src/deca_device.c ****  * no return value
3800:Core/Src/deca_device.c ****  */
3801:Core/Src/deca_device.c **** void dwt_forcetrxoff(void)
3802:Core/Src/deca_device.c **** {
3803:Core/Src/deca_device.c ****     decaIrqStatus_t stat ;
3804:Core/Src/deca_device.c ****     // Need to beware of interrupts occurring in the middle of following command cycle
3805:Core/Src/deca_device.c ****     // We can disable the radio, but before the status is cleared an interrupt can be set (e.g. the
3806:Core/Src/deca_device.c ****     // event has just happened before the radio was disabled)
3807:Core/Src/deca_device.c ****     // thus we need to disable interrupt during this operation
3808:Core/Src/deca_device.c ****     stat = decamutexon();
3809:Core/Src/deca_device.c **** 
3810:Core/Src/deca_device.c ****     dwt_writefastCMD(CMD_TXRXOFF);
3811:Core/Src/deca_device.c **** 
3812:Core/Src/deca_device.c ****     // Enable/restore interrupts again...
3813:Core/Src/deca_device.c ****     decamutexoff(stat);
ARM GAS  /tmp/cctZ3fzX.s 			page 85


3814:Core/Src/deca_device.c **** } // end deviceforcetrxoff()
3815:Core/Src/deca_device.c **** 
3816:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3817:Core/Src/deca_device.c ****  * @brief enable/disable and configure SNIFF mode.
3818:Core/Src/deca_device.c ****  *
3819:Core/Src/deca_device.c ****  * SNIFF mode is a low-power reception mode where the receiver is sequenced on and off instead of b
3820:Core/Src/deca_device.c ****  * The time spent in each state (on/off) is specified through the parameters below.
3821:Core/Src/deca_device.c ****  * See DW3000 User Manual section 4.5 "Low-Power SNIFF mode" for more details.
3822:Core/Src/deca_device.c ****  *
3823:Core/Src/deca_device.c ****  * input parameters:
3824:Core/Src/deca_device.c ****  * @param enable - 1 to enable SNIFF mode, 0 to disable. When 0, all other parameters are not taken
3825:Core/Src/deca_device.c ****  * @param timeOn - duration of receiver ON phase, expressed in multiples of PAC size. The counter a
3826:Core/Src/deca_device.c ****  *                 size to the value set. Min value that can be set is 1 (i.e. an ON time of 2 PAC 
3827:Core/Src/deca_device.c ****  * @param timeOff - duration of receiver OFF phase, expressed in multiples of 128/125 �s (~1 �s
3828:Core/Src/deca_device.c ****  *
3829:Core/Src/deca_device.c ****  * output parameters
3830:Core/Src/deca_device.c ****  *
3831:Core/Src/deca_device.c ****  * no return value
3832:Core/Src/deca_device.c ****  */
3833:Core/Src/deca_device.c **** void dwt_setsniffmode(int enable, uint8_t timeOn, uint8_t timeOff)
3834:Core/Src/deca_device.c **** {
3835:Core/Src/deca_device.c ****     if (enable)
3836:Core/Src/deca_device.c ****     {
3837:Core/Src/deca_device.c ****         /* Configure ON/OFF times and enable PLL2 on/off sequencing by SNIFF mode. */
3838:Core/Src/deca_device.c ****         uint16_t sniff_reg = (((uint16_t)timeOff << 8) | timeOn) & (RX_SNIFF_SNIFF_OFF_BIT_MASK | R
3839:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(RX_SNIFF_ID, 0, sniff_reg);
3840:Core/Src/deca_device.c ****     }
3841:Core/Src/deca_device.c ****     else
3842:Core/Src/deca_device.c ****     {
3843:Core/Src/deca_device.c ****         /* Clear ON/OFF times and disable PLL2 on/off sequencing by SNIFF mode. */
3844:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(RX_SNIFF_ID, 0, 0x0000);
3845:Core/Src/deca_device.c ****     }
3846:Core/Src/deca_device.c **** }
3847:Core/Src/deca_device.c **** 
3848:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3849:Core/Src/deca_device.c ****  * @brief This call turns on the receiver, can be immediate or delayed (depending on the mode param
3850:Core/Src/deca_device.c ****  * "late" error the receiver will only be turned on if the DWT_IDLE_ON_DLY_ERR is not set.
3851:Core/Src/deca_device.c ****  * The receiver will stay turned on, listening to any messages until
3852:Core/Src/deca_device.c ****  * it either receives a good frame, an error (CRC, PHY header, Reed Solomon) or  it times out (SFD,
3853:Core/Src/deca_device.c ****  *
3854:Core/Src/deca_device.c ****  * input parameters
3855:Core/Src/deca_device.c ****  * @param mode - this can be one of the following allowed values:
3856:Core/Src/deca_device.c ****  *
3857:Core/Src/deca_device.c ****  * DWT_START_RX_IMMEDIATE      0x00    Enable the receiver immediately
3858:Core/Src/deca_device.c ****  * DWT_START_RX_DELAYED        0x01    Set up delayed RX, if "late" error triggers, then the RX wil
3859:Core/Src/deca_device.c ****  * DWT_IDLE_ON_DLY_ERR         0x02    If delayed RX failed due to "late" error then if this
3860:Core/Src/deca_device.c ****                                        flag is set the RX will not be re-enabled immediately, and d
3861:Core/Src/deca_device.c ****  * DWT_START_RX_DLY_REF        0x04    Enable the receiver at specified time (time in DREF_TIME reg
3862:Core/Src/deca_device.c ****  * DWT_START_RX_DLY_RS         0x08    Enable the receiver at specified time (time in RX_TIME_0 reg
3863:Core/Src/deca_device.c ****  * DWT_START_RX_DLY_TS         0x10    Enable the receiver at specified time (time in TX_TIME_LO re
3864:Core/Src/deca_device.c **** 
3865:Core/Src/deca_device.c ****  * e.g.
3866:Core/Src/deca_device.c ****  * (DWT_START_RX_DELAYED | DWT_IDLE_ON_DLY_ERR) 0x03 used to disable re-enabling of receiver if del
3867:Core/Src/deca_device.c ****  *
3868:Core/Src/deca_device.c ****  * returns DWT_SUCCESS for success, or DWT_ERROR for error (e.g. a delayed receive enable will be t
3869:Core/Src/deca_device.c ****  */
3870:Core/Src/deca_device.c **** int dwt_rxenable(int mode)
ARM GAS  /tmp/cctZ3fzX.s 			page 86


3871:Core/Src/deca_device.c **** {
3872:Core/Src/deca_device.c ****     uint8_t temp1 ;
3873:Core/Src/deca_device.c **** 
3874:Core/Src/deca_device.c ****     if(mode == DWT_START_RX_IMMEDIATE)
3875:Core/Src/deca_device.c ****     {
3876:Core/Src/deca_device.c ****         dwt_writefastCMD(CMD_RX);
3877:Core/Src/deca_device.c ****     }
3878:Core/Src/deca_device.c ****     else //delayed RX
3879:Core/Src/deca_device.c ****     {
3880:Core/Src/deca_device.c ****         switch(mode & ~DWT_IDLE_ON_DLY_ERR)
3881:Core/Src/deca_device.c ****         {
3882:Core/Src/deca_device.c ****             case DWT_START_RX_DELAYED:
3883:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DRX);
3884:Core/Src/deca_device.c ****             break;
3885:Core/Src/deca_device.c ****             case DWT_START_RX_DLY_REF:
3886:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DRX_REF);
3887:Core/Src/deca_device.c ****             break;
3888:Core/Src/deca_device.c ****             case DWT_START_RX_DLY_RS:
3889:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DRX_RS);
3890:Core/Src/deca_device.c ****             break;
3891:Core/Src/deca_device.c ****             case DWT_START_RX_DLY_TS:
3892:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_DRX_TS);
3893:Core/Src/deca_device.c ****             break;
3894:Core/Src/deca_device.c ****             default:
3895:Core/Src/deca_device.c ****                 return DWT_ERROR; // return error
3896:Core/Src/deca_device.c ****         }
3897:Core/Src/deca_device.c **** 
3898:Core/Src/deca_device.c ****         temp1 = dwt_read8bitoffsetreg(SYS_STATUS_ID, 3); // Read 1 byte at offset 3 to get the 4th 
3899:Core/Src/deca_device.c ****         if ((temp1 & (SYS_STATUS_HPDWARN_BIT_MASK >> 24)) != 0) // if delay has passed do immediate
3900:Core/Src/deca_device.c ****         {
3901:Core/Src/deca_device.c ****             dwt_writefastCMD(CMD_TXRXOFF);
3902:Core/Src/deca_device.c **** 
3903:Core/Src/deca_device.c ****             if((mode & DWT_IDLE_ON_DLY_ERR) == 0) // if DWT_IDLE_ON_DLY_ERR not set then re-enable 
3904:Core/Src/deca_device.c ****             {
3905:Core/Src/deca_device.c ****                 dwt_writefastCMD(CMD_RX);
3906:Core/Src/deca_device.c ****             }
3907:Core/Src/deca_device.c ****             return DWT_ERROR; // return warning indication
3908:Core/Src/deca_device.c ****         }
3909:Core/Src/deca_device.c ****     }
3910:Core/Src/deca_device.c **** 
3911:Core/Src/deca_device.c ****     return DWT_SUCCESS;
3912:Core/Src/deca_device.c **** } // end dwt_rxenable()
3913:Core/Src/deca_device.c **** 
3914:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3915:Core/Src/deca_device.c ****  * @brief This call enables RX timeout (SY_STAT_RFTO event)
3916:Core/Src/deca_device.c ****  *
3917:Core/Src/deca_device.c ****  * input parameters
3918:Core/Src/deca_device.c ****  * @param time - how long the receiver remains on from the RX enable command
3919:Core/Src/deca_device.c ****  *               The time parameter used here is in 1.0256 us (512/499.2MHz) units
3920:Core/Src/deca_device.c ****  *               If set to 0 the timeout is disabled.
3921:Core/Src/deca_device.c ****  *
3922:Core/Src/deca_device.c ****  * output parameters
3923:Core/Src/deca_device.c ****  *
3924:Core/Src/deca_device.c ****  * no return value
3925:Core/Src/deca_device.c ****  */
3926:Core/Src/deca_device.c **** void dwt_setrxtimeout(uint32_t time)
3927:Core/Src/deca_device.c **** {
ARM GAS  /tmp/cctZ3fzX.s 			page 87


3928:Core/Src/deca_device.c ****     if(time > 0)
3929:Core/Src/deca_device.c ****     {
3930:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(RX_FWTO_ID, 0, time);
3931:Core/Src/deca_device.c **** 
3932:Core/Src/deca_device.c ****         dwt_or16bitoffsetreg(SYS_CFG_ID, 0, SYS_CFG_RXWTOE_BIT_MASK); //set the RX FWTO bit
3933:Core/Src/deca_device.c ****     }
3934:Core/Src/deca_device.c ****     else
3935:Core/Src/deca_device.c ****     {
3936:Core/Src/deca_device.c ****         dwt_and16bitoffsetreg(SYS_CFG_ID, 0, (uint16_t)(~SYS_CFG_RXWTOE_BIT_MASK)); //clear the RX 
3937:Core/Src/deca_device.c ****     }
3938:Core/Src/deca_device.c **** } // end dwt_setrxtimeout()
3939:Core/Src/deca_device.c **** 
3940:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3941:Core/Src/deca_device.c ****  * @brief This call enables preamble timeout (SY_STAT_RXPTO event)
3942:Core/Src/deca_device.c ****  *
3943:Core/Src/deca_device.c ****  * input parameters
3944:Core/Src/deca_device.c ****  * @param  timeout - Preamble detection timeout, expressed in multiples of PAC size. The counter au
3945:Core/Src/deca_device.c ****  *                   size to the value set. Min value that can be set is 1 (i.e. a timeout of 2 PAC
3946:Core/Src/deca_device.c ****  *
3947:Core/Src/deca_device.c ****  * output parameters
3948:Core/Src/deca_device.c ****  *
3949:Core/Src/deca_device.c ****  * no return value
3950:Core/Src/deca_device.c ****  */
3951:Core/Src/deca_device.c **** void dwt_setpreambledetecttimeout(uint16_t timeout)
3952:Core/Src/deca_device.c **** {
3953:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(DTUNE1_ID, 0, timeout);
3954:Core/Src/deca_device.c **** }
3955:Core/Src/deca_device.c **** 
3956:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
3957:Core/Src/deca_device.c ****  * @brief This function enables the specified events to trigger an interrupt.
3958:Core/Src/deca_device.c ****  * The following events can be found in SYS_ENABLE_LO and SYS_ENABLE_HI registers.
3959:Core/Src/deca_device.c ****  *
3960:Core/Src/deca_device.c ****  *
3961:Core/Src/deca_device.c ****  * input parameters:
3962:Core/Src/deca_device.c ****  * @param bitmask_lo - sets the events in SYS_ENABLE_LO_ID register which will generate interrupt
3963:Core/Src/deca_device.c ****  * @param bitmask_hi - sets the events in SYS_ENABLE_HI_ID register which will generate interrupt
3964:Core/Src/deca_device.c ****  * @param operation  - if set to DWT_ENABLE_INT additional interrupts as selected in the bitmask ar
3965:Core/Src/deca_device.c ****  *                   - if set to DWT_ENABLE_INT_ONLY the interrupts in the bitmask are forced to se
3966:Core/Src/deca_device.c ****  *                      i.e. the mask is written to the register directly.
3967:Core/Src/deca_device.c ****  *                   - otherwise (if set to DWT_DISABLE_INT) clear the interrupts as selected in th
3968:Core/Src/deca_device.c ****  * output parameters
3969:Core/Src/deca_device.c ****  *
3970:Core/Src/deca_device.c ****  * no return value
3971:Core/Src/deca_device.c ****  */
3972:Core/Src/deca_device.c **** void dwt_setinterrupt(uint32_t bitmask_lo, uint32_t bitmask_hi, dwt_INT_options_e INT_options)
3973:Core/Src/deca_device.c **** {
3974:Core/Src/deca_device.c ****     decaIrqStatus_t stat ;
3975:Core/Src/deca_device.c **** 
3976:Core/Src/deca_device.c ****     // Need to beware of interrupts occurring in the middle of following read modify write cycle
3977:Core/Src/deca_device.c ****     stat = decamutexon();
3978:Core/Src/deca_device.c **** 
3979:Core/Src/deca_device.c ****     if(INT_options == DWT_ENABLE_INT_ONLY)
3980:Core/Src/deca_device.c ****     {
3981:Core/Src/deca_device.c ****         dwt_write32bitreg(SYS_ENABLE_LO_ID, bitmask_lo); // New value
3982:Core/Src/deca_device.c ****         dwt_write32bitreg(SYS_ENABLE_HI_ID, bitmask_hi); // New value
3983:Core/Src/deca_device.c ****     }
3984:Core/Src/deca_device.c ****     else
ARM GAS  /tmp/cctZ3fzX.s 			page 88


3985:Core/Src/deca_device.c ****     {
3986:Core/Src/deca_device.c ****         if(INT_options == DWT_ENABLE_INT)
3987:Core/Src/deca_device.c ****         {
3988:Core/Src/deca_device.c ****             dwt_or32bitoffsetreg(SYS_ENABLE_LO_ID, 0, bitmask_lo); //Set the bits
3989:Core/Src/deca_device.c ****             dwt_or32bitoffsetreg(SYS_ENABLE_HI_ID, 0, bitmask_hi); //Set the bits
3990:Core/Src/deca_device.c ****         }
3991:Core/Src/deca_device.c ****         else
3992:Core/Src/deca_device.c ****         {
3993:Core/Src/deca_device.c ****             dwt_and32bitoffsetreg(SYS_ENABLE_LO_ID, 0, (uint32_t)(~bitmask_lo)); // Clear the bits
3994:Core/Src/deca_device.c ****             dwt_and32bitoffsetreg(SYS_ENABLE_HI_ID, 0, (uint32_t)(~bitmask_hi)); // Clear the bits
3995:Core/Src/deca_device.c ****         }
3996:Core/Src/deca_device.c ****     }
3997:Core/Src/deca_device.c **** 
3998:Core/Src/deca_device.c ****     decamutexoff(stat);
3999:Core/Src/deca_device.c **** }
4000:Core/Src/deca_device.c **** 
4001:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4002:Core/Src/deca_device.c ****  * @brief This is used to enable/disable the event counter in the IC
4003:Core/Src/deca_device.c ****  *
4004:Core/Src/deca_device.c ****  * input parameters
4005:Core/Src/deca_device.c ****  * @param - enable - 1 enables (and reset), 0 disables the event counters
4006:Core/Src/deca_device.c ****  * output parameters
4007:Core/Src/deca_device.c ****  *
4008:Core/Src/deca_device.c ****  * no return value
4009:Core/Src/deca_device.c ****  */
4010:Core/Src/deca_device.c **** void dwt_configeventcounters(int enable)
4011:Core/Src/deca_device.c **** {
4012:Core/Src/deca_device.c ****     // Need to clear and disable, can't just clear
4013:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(EVC_CTRL_ID, 0x0, (uint8_t)(EVC_CTRL_EVC_CLR_BIT_MASK));
4014:Core/Src/deca_device.c **** 
4015:Core/Src/deca_device.c ****     if(enable)
4016:Core/Src/deca_device.c ****     {
4017:Core/Src/deca_device.c ****          dwt_write8bitoffsetreg(EVC_CTRL_ID, 0x0, (uint8_t)(EVC_CTRL_EVC_EN_BIT_MASK)); // Enable
4018:Core/Src/deca_device.c ****     }
4019:Core/Src/deca_device.c **** }
4020:Core/Src/deca_device.c **** 
4021:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4022:Core/Src/deca_device.c ****  * @brief This is used to read the event counters in the IC
4023:Core/Src/deca_device.c ****  *
4024:Core/Src/deca_device.c ****  * input parameters
4025:Core/Src/deca_device.c ****  * @param counters - pointer to the dwt_deviceentcnts_t structure which will hold the read data
4026:Core/Src/deca_device.c ****  *
4027:Core/Src/deca_device.c ****  * output parameters
4028:Core/Src/deca_device.c ****  *
4029:Core/Src/deca_device.c ****  * no return value
4030:Core/Src/deca_device.c ****  */
4031:Core/Src/deca_device.c **** void dwt_readeventcounters(dwt_deviceentcnts_t *counters)
4032:Core/Src/deca_device.c **** {
4033:Core/Src/deca_device.c ****     uint32_t temp;
4034:Core/Src/deca_device.c **** 
4035:Core/Src/deca_device.c ****     temp= dwt_read32bitoffsetreg(EVC_COUNT0_ID, 0); // Read sync loss (27-16), PHE (11-0)
4036:Core/Src/deca_device.c ****     counters->PHE = temp & 0xFFF;
4037:Core/Src/deca_device.c ****     counters->RSL = (temp >> 16) & 0xFFF;
4038:Core/Src/deca_device.c **** 
4039:Core/Src/deca_device.c ****     temp = dwt_read32bitoffsetreg(EVC_COUNT1_ID, 0); // Read CRC bad (27-16), CRC good (11-0)
4040:Core/Src/deca_device.c ****     counters->CRCG = temp & 0xFFF;
4041:Core/Src/deca_device.c ****     counters->CRCB = (temp >> 16) & 0xFFF;
ARM GAS  /tmp/cctZ3fzX.s 			page 89


4042:Core/Src/deca_device.c **** 
4043:Core/Src/deca_device.c ****     temp = dwt_read32bitoffsetreg(EVC_COUNT2_ID, 0); // Overruns (23-16), address errors (7-0)
4044:Core/Src/deca_device.c ****     counters->ARFE = (uint8_t)temp;
4045:Core/Src/deca_device.c ****     counters->OVER = (uint8_t)(temp >> 16);
4046:Core/Src/deca_device.c **** 
4047:Core/Src/deca_device.c ****     temp = dwt_read32bitoffsetreg(EVC_COUNT3_ID, 0); // Read PTO (27-16), SFDTO (11-0)
4048:Core/Src/deca_device.c ****     counters->PTO = (temp >> 16) & 0xFFF;
4049:Core/Src/deca_device.c ****     counters->SFDTO = temp & 0xFFF;
4050:Core/Src/deca_device.c **** 
4051:Core/Src/deca_device.c ****     temp = dwt_read32bitoffsetreg(EVC_COUNT4_ID, 0); // Read TXFRAME (27-16), RX TO (7-0)
4052:Core/Src/deca_device.c ****     counters->TXF = (temp >> 16) & 0xFFF;
4053:Core/Src/deca_device.c ****     counters->RTO = (uint8_t)temp;
4054:Core/Src/deca_device.c **** 
4055:Core/Src/deca_device.c ****     temp = dwt_read32bitoffsetreg(EVC_COUNT5_ID, 0); // Read half period warning (7-0) events
4056:Core/Src/deca_device.c ****     counters->HPW = (uint8_t)temp;
4057:Core/Src/deca_device.c ****     counters->CRCE = (uint8_t)(temp >> 16);     // SPI CRC errors (23-16) warning events
4058:Core/Src/deca_device.c **** 
4059:Core/Src/deca_device.c ****     temp = dwt_read32bitoffsetreg(EVC_COUNT6_ID, 0); //Preamble rejections (11-0) events
4060:Core/Src/deca_device.c ****     counters->PREJ = temp & 0xFFF;
4061:Core/Src/deca_device.c **** 
4062:Core/Src/deca_device.c **** 
4063:Core/Src/deca_device.c **** }
4064:Core/Src/deca_device.c **** 
4065:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4066:Core/Src/deca_device.c ****  * @brief this function resets the DW3000
4067:Core/Src/deca_device.c ****  *
4068:Core/Src/deca_device.c ****  * NOTE: SPI rate must be <= 7MHz before a call to this function as the device will use FOSC/4 as p
4069:Core/Src/deca_device.c ****  *
4070:Core/Src/deca_device.c ****  * input parameters:
4071:Core/Src/deca_device.c ****  *
4072:Core/Src/deca_device.c ****  * output parameters
4073:Core/Src/deca_device.c ****  *
4074:Core/Src/deca_device.c ****  * no return value
4075:Core/Src/deca_device.c ****  */
4076:Core/Src/deca_device.c **** void dwt_softreset(void)
4077:Core/Src/deca_device.c **** {
4078:Core/Src/deca_device.c ****     //clear any AON configurations (this will leave the device at FOSC/4, thus we need low SPI rate
4079:Core/Src/deca_device.c ****     dwt_clearaonconfig();
4080:Core/Src/deca_device.c **** 
4081:Core/Src/deca_device.c ****     //make sure the new AON array config has been set
4082:Core/Src/deca_device.c ****     deca_sleep(1);
4083:Core/Src/deca_device.c **** 
4084:Core/Src/deca_device.c ****     //need to make sure clock is not PLL as the PLL will be switched off as part of reset
4085:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(CLK_CTRL_ID, 0, FORCE_SYSCLK_FOSC);
4086:Core/Src/deca_device.c **** 
4087:Core/Src/deca_device.c ****     // Reset HIF, TX, RX and PMSC
4088:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(SOFT_RST_ID, 0, DWT_RESET_ALL);
4089:Core/Src/deca_device.c **** 
4090:Core/Src/deca_device.c ****     // DW3000 needs a 10us sleep to let clk PLL lock after reset - the PLL will automatically lock 
4091:Core/Src/deca_device.c ****     // Could also have polled the PLL lock flag, but then the SPI needs to be <= 7MHz !! So a simpl
4092:Core/Src/deca_device.c ****     deca_sleep(1);
4093:Core/Src/deca_device.c **** 
4094:Core/Src/deca_device.c ****     //reset buffer to process RX_BUFFER_0 next - if in double buffer mode (clear bit 1 if set)
4095:Core/Src/deca_device.c ****     pdw3000local->dblbuffon = DBL_BUFF_ACCESS_BUFFER_0;
4096:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = 0;
4097:Core/Src/deca_device.c **** }
4098:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 90


4099:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4100:Core/Src/deca_device.c ****  * @brief This is used to adjust the crystal frequency
4101:Core/Src/deca_device.c ****  *
4102:Core/Src/deca_device.c ****  * input parameters:
4103:Core/Src/deca_device.c ****  * @param   value - crystal trim value (in range 0x0 to 0x3F) 64 steps  (~1.65ppm per step)
4104:Core/Src/deca_device.c ****  *
4105:Core/Src/deca_device.c ****  * output parameters
4106:Core/Src/deca_device.c ****  *
4107:Core/Src/deca_device.c ****  * no return value
4108:Core/Src/deca_device.c ****  */
4109:Core/Src/deca_device.c **** void dwt_setxtaltrim(uint8_t value)
4110:Core/Src/deca_device.c **** {
4111:Core/Src/deca_device.c ****     uint8_t reg_val = ((value & XTAL_TRIM_BIT_MASK) >> XTAL_XTAL_TRIM_BIT_OFFSET);
4112:Core/Src/deca_device.c ****     pdw3000local->init_xtrim = reg_val;
4113:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(XTAL_ID, 0, reg_val);
4114:Core/Src/deca_device.c **** }
4115:Core/Src/deca_device.c **** 
4116:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4117:Core/Src/deca_device.c ****  * @brief This function returns the current value of XTAL trim that has been applied. Following dwt
4118:Core/Src/deca_device.c ****  *        be either the value read in OTP memory or a default value.
4119:Core/Src/deca_device.c ****  *
4120:Core/Src/deca_device.c ****  *
4121:Core/Src/deca_device.c ****  * input parameters
4122:Core/Src/deca_device.c ****  *
4123:Core/Src/deca_device.c ****  * output parameters
4124:Core/Src/deca_device.c ****  *
4125:Core/Src/deca_device.c ****  * returns the XTAL trim value set upon initialisation
4126:Core/Src/deca_device.c ****  */
4127:Core/Src/deca_device.c **** uint8_t dwt_getxtaltrim(void)
4128:Core/Src/deca_device.c **** {
4129:Core/Src/deca_device.c ****     return pdw3000local->init_xtrim;
4130:Core/Src/deca_device.c **** }
4131:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4132:Core/Src/deca_device.c ****  * @brief This function return current value of DGC_DECISION in sub register DGC report
4133:Core/Src/deca_device.c ****  *
4134:Core/Src/deca_device.c ****  * input parameters
4135:Core/Src/deca_device.c ****  * @param - no param
4136:Core/Src/deca_device.c ****  *
4137:Core/Src/deca_device.c ****  * output parameters
4138:Core/Src/deca_device.c ****  * returns value of the DGC_DECISION needed to estimating the receive signal power with PRF of 64MH
4139:Core/Src/deca_device.c ****  *
4140:Core/Src/deca_device.c ****  * note: this function was not implemented originally. Implemented by Mateusz Moroń
4141:Core/Src/deca_device.c ****  */
4142:Core/Src/deca_device.c **** uint8_t dwt_get_dgcdecision(void)
4143:Core/Src/deca_device.c **** {
4144:Core/Src/deca_device.c **** 	// 0x30060 is DGC_DGB
4145:Core/Src/deca_device.c **** 	uint8_t dgcDecision;
4146:Core/Src/deca_device.c **** 	dgcDecision = (dwt_read32bitoffsetreg(0x30060, 0) >> 28) & 0b0111;
4147:Core/Src/deca_device.c **** 	return dgcDecision;
4148:Core/Src/deca_device.c **** }
4149:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4150:Core/Src/deca_device.c ****  * @brief This function will disable TX LDOs and allow TX blocks to be manually turned off by dwt_d
4151:Core/Src/deca_device.c ****  *
4152:Core/Src/deca_device.c ****  * input parameters
4153:Core/Src/deca_device.c ****  * @param[in] switch_config - specifies whether the switch needs to be restored to auto.
4154:Core/Src/deca_device.c ****  *
4155:Core/Src/deca_device.c ****  * output parameters
ARM GAS  /tmp/cctZ3fzX.s 			page 91


4156:Core/Src/deca_device.c ****  * None
4157:Core/Src/deca_device.c ****  *
4158:Core/Src/deca_device.c ****  */
4159:Core/Src/deca_device.c **** static
4160:Core/Src/deca_device.c **** void dwt_disable_rf_tx(uint8_t switch_config)
4161:Core/Src/deca_device.c **** {
4162:Core/Src/deca_device.c ****     //Turn off TX LDOs
4163:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(LDO_CTRL_ID, 0, 0x00000000);
4164:Core/Src/deca_device.c **** 
4165:Core/Src/deca_device.c ****     //Disable RF blocks for TX (configure RF_ENABLE_ID reg)
4166:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(RF_ENABLE_ID, 0, 0x00000000);
4167:Core/Src/deca_device.c **** 
4168:Core/Src/deca_device.c ****     if (switch_config)
4169:Core/Src/deca_device.c ****     {
4170:Core/Src/deca_device.c ****         //Restore the TXRX switch to auto
4171:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(RF_SWITCH_CTRL_ID, 0x0, TXRXSWITCH_AUTO);
4172:Core/Src/deca_device.c ****     }
4173:Core/Src/deca_device.c **** }
4174:Core/Src/deca_device.c **** 
4175:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4176:Core/Src/deca_device.c ****  * @brief This function will enable TX LDOs and allow TX blocks to be manually turned on by dwt_ena
4177:Core/Src/deca_device.c ****  *
4178:Core/Src/deca_device.c ****  * input parameters
4179:Core/Src/deca_device.c ****  * @param[in] channel - specifies the operating channel (e.g. 5 or 9)
4180:Core/Src/deca_device.c ****  * @param[in] switch_config - specifies whether the switch needs to be configured for TX 
4181:Core/Src/deca_device.c ****  *
4182:Core/Src/deca_device.c ****  * output parameters
4183:Core/Src/deca_device.c ****  *
4184:Core/Src/deca_device.c ****  */
4185:Core/Src/deca_device.c **** static
4186:Core/Src/deca_device.c **** void dwt_enable_rf_tx(uint32_t channel, uint8_t switch_control)
4187:Core/Src/deca_device.c **** {
4188:Core/Src/deca_device.c ****     //Turn on TX LDOs
4189:Core/Src/deca_device.c ****     dwt_or32bitoffsetreg(LDO_CTRL_ID, 0, (LDO_CTRL_LDO_VDDHVTX_VREF_BIT_MASK |
4190:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDHVTX_EN_BIT_MASK));
4191:Core/Src/deca_device.c ****     dwt_or32bitoffsetreg(LDO_CTRL_ID, 0, (LDO_CTRL_LDO_VDDTX2_VREF_BIT_MASK |
4192:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDTX1_VREF_BIT_MASK |
4193:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDTX2_EN_BIT_MASK |
4194:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDTX1_EN_BIT_MASK));
4195:Core/Src/deca_device.c **** 
4196:Core/Src/deca_device.c ****     //Enable RF blocks for TX (configure RF_ENABLE_ID reg)
4197:Core/Src/deca_device.c ****     if (channel == SEL_CHANNEL5)
4198:Core/Src/deca_device.c ****     {
4199:Core/Src/deca_device.c ****         dwt_or32bitoffsetreg(RF_ENABLE_ID, 0, (RF_ENABLE_TX_SW_EN_BIT_MASK
4200:Core/Src/deca_device.c ****             | RF_ENABLE_TX_CH5_BIT_MASK | RF_ENABLE_TX_EN_BIT_MASK
4201:Core/Src/deca_device.c ****             | RF_ENABLE_TX_EN_BUF_BIT_MASK | RF_ENABLE_TX_BIAS_EN_BIT_MASK));
4202:Core/Src/deca_device.c ****     }
4203:Core/Src/deca_device.c ****     else
4204:Core/Src/deca_device.c ****     {
4205:Core/Src/deca_device.c ****         dwt_or32bitoffsetreg(RF_ENABLE_ID, 0, (RF_ENABLE_TX_SW_EN_BIT_MASK
4206:Core/Src/deca_device.c ****             | RF_ENABLE_TX_EN_BIT_MASK
4207:Core/Src/deca_device.c ****             | RF_ENABLE_TX_EN_BUF_BIT_MASK | RF_ENABLE_TX_BIAS_EN_BIT_MASK));
4208:Core/Src/deca_device.c ****     }
4209:Core/Src/deca_device.c **** 
4210:Core/Src/deca_device.c ****     if (switch_control)
4211:Core/Src/deca_device.c ****     {
4212:Core/Src/deca_device.c ****         //configure the TXRX switch for TX mode 
ARM GAS  /tmp/cctZ3fzX.s 			page 92


4213:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(RF_SWITCH_CTRL_ID, 0x0, TXRXSWITCH_TX);
4214:Core/Src/deca_device.c ****     }
4215:Core/Src/deca_device.c **** 
4216:Core/Src/deca_device.c **** }
4217:Core/Src/deca_device.c **** 
4218:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4219:Core/Src/deca_device.c ****  * @brief This function will enable a repeated continuous waveform on the device
4220:Core/Src/deca_device.c ****  *
4221:Core/Src/deca_device.c ****  * input parameters:
4222:Core/Src/deca_device.c ****  * @param cw_enable: CW mode enable
4223:Core/Src/deca_device.c ****  * @param cw_mode_config: CW configuration mode.
4224:Core/Src/deca_device.c ****  *
4225:Core/Src/deca_device.c ****  * output parameters:
4226:Core/Src/deca_device.c ****  *
4227:Core/Src/deca_device.c ****  */
4228:Core/Src/deca_device.c **** void dwt_repeated_cw(int cw_enable, int cw_mode_config)
4229:Core/Src/deca_device.c **** {
4230:Core/Src/deca_device.c **** 
4231:Core/Src/deca_device.c ****     //Turn off TX Seq
4232:Core/Src/deca_device.c ****     dwt_setfinegraintxseq(0);
4233:Core/Src/deca_device.c **** 
4234:Core/Src/deca_device.c ****     if (cw_mode_config > 0xF)  cw_mode_config = 0xF;
4235:Core/Src/deca_device.c ****     if ((cw_enable > 3) || (cw_enable < 1)) cw_enable = 4;
4236:Core/Src/deca_device.c **** 
4237:Core/Src/deca_device.c **** 
4238:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(TX_TEST_ID, 0x0, 0x10 >> cw_enable);
4239:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(PG_TEST_ID, 0x0, cw_mode_config << ((cw_enable - 1) * 4));
4240:Core/Src/deca_device.c **** }
4241:Core/Src/deca_device.c **** 
4242:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4243:Core/Src/deca_device.c ****  * @brief This function enables repeated frames to be generated given a frame repetition rate.
4244:Core/Src/deca_device.c ****  *
4245:Core/Src/deca_device.c ****  * input parameters:
4246:Core/Src/deca_device.c ****  * @param framerepetitionrate - Value specifying the rate at which frames will be repeated.
4247:Core/Src/deca_device.c ****  *                            If the value is less than the frame duration, the frames are sent
4248:Core/Src/deca_device.c ****  *                            back-to-back.
4249:Core/Src/deca_device.c ****  *
4250:Core/Src/deca_device.c ****  * output parameters:
4251:Core/Src/deca_device.c ****  * None
4252:Core/Src/deca_device.c ****  *
4253:Core/Src/deca_device.c ****  * No return value
4254:Core/Src/deca_device.c ****  */
4255:Core/Src/deca_device.c **** void dwt_repeated_frames(uint32_t framerepetitionrate)
4256:Core/Src/deca_device.c **** {
4257:Core/Src/deca_device.c ****     //Enable repeated frames
4258:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(TEST_CTRL0_ID, 0x0, TEST_CTRL0_TX_PSTM_BIT_MASK);
4259:Core/Src/deca_device.c **** 
4260:Core/Src/deca_device.c ****     if (framerepetitionrate < 4)
4261:Core/Src/deca_device.c ****     {
4262:Core/Src/deca_device.c ****         framerepetitionrate = 4;
4263:Core/Src/deca_device.c ****     }
4264:Core/Src/deca_device.c ****     dwt_write32bitreg(DX_TIME_ID, framerepetitionrate);
4265:Core/Src/deca_device.c **** }
4266:Core/Src/deca_device.c **** 
4267:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4268:Core/Src/deca_device.c ****  * @brief This function disables the automatic sequencing of the tx-blocks for a specific channel.
4269:Core/Src/deca_device.c ****  *
ARM GAS  /tmp/cctZ3fzX.s 			page 93


4270:Core/Src/deca_device.c ****  * input parameters:
4271:Core/Src/deca_device.c ****  * @param[in] chan - specifies the operating channel (e.g. 5 or 9)
4272:Core/Src/deca_device.c ****  *
4273:Core/Src/deca_device.c ****  * output parameters:
4274:Core/Src/deca_device.c ****  * None
4275:Core/Src/deca_device.c ****  *
4276:Core/Src/deca_device.c ****  * No return value
4277:Core/Src/deca_device.c ****  */
4278:Core/Src/deca_device.c **** static
4279:Core/Src/deca_device.c **** void dwt_enable_rftx_blocks(uint32_t channel)
4280:Core/Src/deca_device.c **** {
4281:Core/Src/deca_device.c ****     if (channel == SEL_CHANNEL5)
4282:Core/Src/deca_device.c ****     {
4283:Core/Src/deca_device.c ****         dwt_or32bitoffsetreg(RF_CTRL_MASK_ID, 0, (RF_ENABLE_TX_SW_EN_BIT_MASK
4284:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_CH5_BIT_MASK | RF_ENABLE_TX_EN_BIT_MASK
4285:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_EN_BUF_BIT_MASK | RF_ENABLE_TX_BIAS_EN_BIT_MASK));
4286:Core/Src/deca_device.c ****     }
4287:Core/Src/deca_device.c ****     else if (channel == SEL_CHANNEL9)
4288:Core/Src/deca_device.c ****     {
4289:Core/Src/deca_device.c ****         dwt_or32bitoffsetreg(RF_CTRL_MASK_ID, 0, (RF_ENABLE_TX_SW_EN_BIT_MASK
4290:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_EN_BIT_MASK
4291:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_EN_BUF_BIT_MASK | RF_ENABLE_TX_BIAS_EN_BIT_MASK));
4292:Core/Src/deca_device.c ****     }
4293:Core/Src/deca_device.c **** }
4294:Core/Src/deca_device.c **** 
4295:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4296:Core/Src/deca_device.c ****  * @brief This function enables the automatic sequencing of the tx-blocks for a specific channel.
4297:Core/Src/deca_device.c ****  *
4298:Core/Src/deca_device.c ****  * input parameters:
4299:Core/Src/deca_device.c ****  * None
4300:Core/Src/deca_device.c ****  *
4301:Core/Src/deca_device.c ****  * output parameters:
4302:Core/Src/deca_device.c ****  * None
4303:Core/Src/deca_device.c ****  *
4304:Core/Src/deca_device.c ****  * No return value
4305:Core/Src/deca_device.c ****  */
4306:Core/Src/deca_device.c **** static
4307:Core/Src/deca_device.c **** void dwt_disable_rftx_blocks(void)
4308:Core/Src/deca_device.c **** {
 791              		.loc 1 4308 1 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795 0000 08B5     		push	{r3, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 3, -8
 798              		.cfi_offset 14, -4
4309:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(RF_CTRL_MASK_ID, 0, 0x00000000);
 799              		.loc 1 4309 5 view .LVU214
 800 0002 0022     		movs	r2, #0
 801 0004 1146     		mov	r1, r2
 802 0006 0248     		ldr	r0, .L58
 803 0008 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 804              	.LVL82:
4310:Core/Src/deca_device.c **** }
 805              		.loc 1 4310 1 is_stmt 0 view .LVU215
 806 000c 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cctZ3fzX.s 			page 94


 807              	.L59:
 808 000e 00BF     		.align	2
 809              	.L58:
 810 0010 04000700 		.word	458756
 811              		.cfi_endproc
 812              	.LFE120:
 814              		.section	.text.dwt_disable_rf_tx,"ax",%progbits
 815              		.align	1
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv4-sp-d16
 821              	dwt_disable_rf_tx:
 822              	.LVL83:
 823              	.LFB115:
4161:Core/Src/deca_device.c ****     //Turn off TX LDOs
 824              		.loc 1 4161 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
4161:Core/Src/deca_device.c ****     //Turn off TX LDOs
 828              		.loc 1 4161 1 is_stmt 0 view .LVU217
 829 0000 10B5     		push	{r4, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833 0002 0446     		mov	r4, r0
4163:Core/Src/deca_device.c **** 
 834              		.loc 1 4163 5 is_stmt 1 view .LVU218
 835 0004 0022     		movs	r2, #0
 836 0006 1146     		mov	r1, r2
 837 0008 0848     		ldr	r0, .L64
 838              	.LVL84:
4163:Core/Src/deca_device.c **** 
 839              		.loc 1 4163 5 is_stmt 0 view .LVU219
 840 000a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 841              	.LVL85:
4166:Core/Src/deca_device.c **** 
 842              		.loc 1 4166 5 is_stmt 1 view .LVU220
 843 000e 0022     		movs	r2, #0
 844 0010 1146     		mov	r1, r2
 845 0012 4FF4E020 		mov	r0, #458752
 846 0016 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 847              	.LVL86:
4168:Core/Src/deca_device.c ****     {
 848              		.loc 1 4168 5 view .LVU221
4168:Core/Src/deca_device.c ****     {
 849              		.loc 1 4168 8 is_stmt 0 view .LVU222
 850 001a 04B9     		cbnz	r4, .L63
 851              	.L60:
4173:Core/Src/deca_device.c **** 
 852              		.loc 1 4173 1 view .LVU223
 853 001c 10BD     		pop	{r4, pc}
 854              	.L63:
4171:Core/Src/deca_device.c ****     }
 855              		.loc 1 4171 9 is_stmt 1 view .LVU224
 856 001e 4FF0E052 		mov	r2, #469762048
ARM GAS  /tmp/cctZ3fzX.s 			page 95


 857 0022 0021     		movs	r1, #0
 858 0024 0248     		ldr	r0, .L64+4
 859 0026 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 860              	.LVL87:
4173:Core/Src/deca_device.c **** 
 861              		.loc 1 4173 1 is_stmt 0 view .LVU225
 862 002a F7E7     		b	.L60
 863              	.L65:
 864              		.align	2
 865              	.L64:
 866 002c 48000700 		.word	458824
 867 0030 14000700 		.word	458772
 868              		.cfi_endproc
 869              	.LFE115:
 871              		.section	.text.dwt_write16bitoffsetreg,"ax",%progbits
 872              		.align	1
 873              		.global	dwt_write16bitoffsetreg
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	dwt_write16bitoffsetreg:
 880              	.LVL88:
 881              	.LFB10:
 486:Core/Src/deca_device.c ****     uint8_t   buffer[2] ;
 882              		.loc 1 486 1 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 486:Core/Src/deca_device.c ****     uint8_t   buffer[2] ;
 886              		.loc 1 486 1 is_stmt 0 view .LVU227
 887 0000 00B5     		push	{lr}
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 14, -4
 890 0002 83B0     		sub	sp, sp, #12
 891              		.cfi_def_cfa_offset 16
 487:Core/Src/deca_device.c **** 
 892              		.loc 1 487 5 is_stmt 1 view .LVU228
 489:Core/Src/deca_device.c ****     buffer[1] = regval >> 8 ;
 893              		.loc 1 489 5 view .LVU229
 489:Core/Src/deca_device.c ****     buffer[1] = regval >> 8 ;
 894              		.loc 1 489 15 is_stmt 0 view .LVU230
 895 0004 8DF80420 		strb	r2, [sp, #4]
 490:Core/Src/deca_device.c **** 
 896              		.loc 1 490 5 is_stmt 1 view .LVU231
 490:Core/Src/deca_device.c **** 
 897              		.loc 1 490 15 is_stmt 0 view .LVU232
 898 0008 120A     		lsrs	r2, r2, #8
 899              	.LVL89:
 490:Core/Src/deca_device.c **** 
 900              		.loc 1 490 15 view .LVU233
 901 000a 8DF80520 		strb	r2, [sp, #5]
 492:Core/Src/deca_device.c **** } // end dwt_write16bitoffsetreg()
 902              		.loc 1 492 5 is_stmt 1 view .LVU234
 903 000e 01AB     		add	r3, sp, #4
 904 0010 0222     		movs	r2, #2
 905 0012 89B2     		uxth	r1, r1
ARM GAS  /tmp/cctZ3fzX.s 			page 96


 906              	.LVL90:
 492:Core/Src/deca_device.c **** } // end dwt_write16bitoffsetreg()
 907              		.loc 1 492 5 is_stmt 0 view .LVU235
 908 0014 FFF7FEFF 		bl	dwt_writetodevice
 909              	.LVL91:
 493:Core/Src/deca_device.c **** 
 910              		.loc 1 493 1 view .LVU236
 911 0018 03B0     		add	sp, sp, #12
 912              		.cfi_def_cfa_offset 4
 913              		@ sp needed
 914 001a 5DF804FB 		ldr	pc, [sp], #4
 915              		.cfi_endproc
 916              	.LFE10:
 918              		.section	.text.dwt_force_clocks,"ax",%progbits
 919              		.align	1
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 923              		.fpu fpv4-sp-d16
 925              	dwt_force_clocks:
 926              	.LVL92:
 927              	.LFB99:
3613:Core/Src/deca_device.c **** 
 928              		.loc 1 3613 1 is_stmt 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
3613:Core/Src/deca_device.c **** 
 932              		.loc 1 3613 1 is_stmt 0 view .LVU238
 933 0000 10B5     		push	{r4, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 14, -4
 937 0002 0446     		mov	r4, r0
3615:Core/Src/deca_device.c ****     {
 938              		.loc 1 3615 5 is_stmt 1 view .LVU239
3615:Core/Src/deca_device.c ****     {
 939              		.loc 1 3615 8 is_stmt 0 view .LVU240
 940 0004 0128     		cmp	r0, #1
 941 0006 02D0     		beq	.L72
 942              	.LVL93:
 943              	.L69:
3629:Core/Src/deca_device.c ****     {
 944              		.loc 1 3629 5 is_stmt 1 view .LVU241
3629:Core/Src/deca_device.c ****     {
 945              		.loc 1 3629 8 is_stmt 0 view .LVU242
 946 0008 052C     		cmp	r4, #5
 947 000a 07D0     		beq	.L73
 948              	.L68:
3635:Core/Src/deca_device.c **** 
 949              		.loc 1 3635 1 view .LVU243
 950 000c 10BD     		pop	{r4, pc}
 951              	.LVL94:
 952              	.L72:
 953              	.LBB7:
3617:Core/Src/deca_device.c **** 
 954              		.loc 1 3617 9 is_stmt 1 view .LVU244
ARM GAS  /tmp/cctZ3fzX.s 			page 97


3620:Core/Src/deca_device.c **** 
 955              		.loc 1 3620 9 view .LVU245
3623:Core/Src/deca_device.c **** 
 956              		.loc 1 3623 9 view .LVU246
3625:Core/Src/deca_device.c **** 
 957              		.loc 1 3625 9 view .LVU247
 958 000e 41F62202 		movw	r2, #6178
 959 0012 0021     		movs	r1, #0
 960 0014 0548     		ldr	r0, .L74
 961              	.LVL95:
3625:Core/Src/deca_device.c **** 
 962              		.loc 1 3625 9 is_stmt 0 view .LVU248
 963 0016 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 964              	.LVL96:
 965 001a F5E7     		b	.L69
 966              	.LVL97:
 967              	.L73:
3625:Core/Src/deca_device.c **** 
 968              		.loc 1 3625 9 view .LVU249
 969              	.LBE7:
3632:Core/Src/deca_device.c ****     }
 970              		.loc 1 3632 9 is_stmt 1 view .LVU250
 971 001c 4FF40072 		mov	r2, #512
 972 0020 0021     		movs	r1, #0
 973 0022 0248     		ldr	r0, .L74
 974 0024 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 975              	.LVL98:
3635:Core/Src/deca_device.c **** 
 976              		.loc 1 3635 1 is_stmt 0 view .LVU251
 977 0028 F0E7     		b	.L68
 978              	.L75:
 979 002a 00BF     		.align	2
 980              	.L74:
 981 002c 04001100 		.word	1114116
 982              		.cfi_endproc
 983              	.LFE99:
 985              		.section	.text.dwt_write8bitoffsetreg,"ax",%progbits
 986              		.align	1
 987              		.global	dwt_write8bitoffsetreg
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 993              	dwt_write8bitoffsetreg:
 994              	.LVL99:
 995              	.LFB11:
 508:Core/Src/deca_device.c ****     //uint8_t   buf[1];
 996              		.loc 1 508 1 is_stmt 1 view -0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 8
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 508:Core/Src/deca_device.c ****     //uint8_t   buf[1];
 1000              		.loc 1 508 1 is_stmt 0 view .LVU253
 1001 0000 00B5     		push	{lr}
 1002              		.cfi_def_cfa_offset 4
 1003              		.cfi_offset 14, -4
 1004 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cctZ3fzX.s 			page 98


 1005              		.cfi_def_cfa_offset 16
 1006 0004 8DF80720 		strb	r2, [sp, #7]
 511:Core/Src/deca_device.c **** }
 1007              		.loc 1 511 5 is_stmt 1 view .LVU254
 1008 0008 0DF10703 		add	r3, sp, #7
 1009 000c 0122     		movs	r2, #1
 1010              	.LVL100:
 511:Core/Src/deca_device.c **** }
 1011              		.loc 1 511 5 is_stmt 0 view .LVU255
 1012 000e 89B2     		uxth	r1, r1
 1013              	.LVL101:
 511:Core/Src/deca_device.c **** }
 1014              		.loc 1 511 5 view .LVU256
 1015 0010 FFF7FEFF 		bl	dwt_writetodevice
 1016              	.LVL102:
 512:Core/Src/deca_device.c **** 
 1017              		.loc 1 512 1 view .LVU257
 1018 0014 03B0     		add	sp, sp, #12
 1019              		.cfi_def_cfa_offset 4
 1020              		@ sp needed
 1021 0016 5DF804FB 		ldr	pc, [sp], #4
 1022              		.cfi_endproc
 1023              	.LFE11:
 1025              		.section	.text.dwt_update_nonce_GCM,"ax",%progbits
 1026              		.align	1
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu fpv4-sp-d16
 1032              	dwt_update_nonce_GCM:
 1033              	.LVL103:
 1034              	.LFB136:
4311:Core/Src/deca_device.c **** 
4312:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4313:Core/Src/deca_device.c ****  * @brief this function sets the DW3000 to transmit cw signal at specific channel frequency
4314:Core/Src/deca_device.c ****  *
4315:Core/Src/deca_device.c ****  * input parameters:
4316:Core/Src/deca_device.c ****  * @param channel - specifies the operating channel (e.g. 5 or 9)
4317:Core/Src/deca_device.c ****  *
4318:Core/Src/deca_device.c ****  * output parameters
4319:Core/Src/deca_device.c ****  *
4320:Core/Src/deca_device.c ****  * no return value
4321:Core/Src/deca_device.c ****  */
4322:Core/Src/deca_device.c **** void dwt_configcwmode(uint8_t channel)
4323:Core/Src/deca_device.c **** {
4324:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 1);
4325:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
4326:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_SYS_TX);
4327:Core/Src/deca_device.c ****     dwt_repeated_cw(1, 0xF);    //PulseGen Channel 1, full power
4328:Core/Src/deca_device.c **** }
4329:Core/Src/deca_device.c **** 
4330:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4331:Core/Src/deca_device.c ****  * @brief this function sets the DW3000 to continuous tx frame mode for regulatory approvals testin
4332:Core/Src/deca_device.c ****  *
4333:Core/Src/deca_device.c ****  * input parameters:
4334:Core/Src/deca_device.c ****  * @param framerepetitionrate - This is a 32-bit value that is used to set the interval between tra
4335:Core/Src/deca_device.c ****  *  The minimum value is 4. The units are approximately 8 ns. (or more precisely 512/(499.2e6*128) 
ARM GAS  /tmp/cctZ3fzX.s 			page 99


4336:Core/Src/deca_device.c ****  * @param channel - specifies the operating channel (e.g. 5 or 9)
4337:Core/Src/deca_device.c ****  *
4338:Core/Src/deca_device.c ****  * output parameters
4339:Core/Src/deca_device.c ****  *
4340:Core/Src/deca_device.c ****  * no return value
4341:Core/Src/deca_device.c ****  */
4342:Core/Src/deca_device.c **** void dwt_configcontinuousframemode(uint32_t framerepetitionrate, uint8_t channel)
4343:Core/Src/deca_device.c **** {
4344:Core/Src/deca_device.c ****     //NOTE: dwt_configure and dwt_configuretxrf must be called before a call to this API
4345:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 1);
4346:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
4347:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_SYS_TX);
4348:Core/Src/deca_device.c ****     dwt_repeated_frames(framerepetitionrate);
4349:Core/Src/deca_device.c **** }
4350:Core/Src/deca_device.c **** 
4351:Core/Src/deca_device.c **** void dwt_disablecontinuousframemode(void)
4352:Core/Src/deca_device.c **** {
4353:Core/Src/deca_device.c **** 	 dwt_and8bitoffsetreg(TEST_CTRL0_ID, 0x0, TEST_CTRL0_TX_PSTM_BIT_OFFMASK);
4354:Core/Src/deca_device.c **** }
4355:Core/Src/deca_device.c **** 
4356:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4357:Core/Src/deca_device.c **** * @brief this function reads the raw battery voltage and temperature values of the DW IC.
4358:Core/Src/deca_device.c **** * The values read here will be the current values sampled by DW IC AtoD converters.
4359:Core/Src/deca_device.c **** *
4360:Core/Src/deca_device.c **** *
4361:Core/Src/deca_device.c **** * input parameters:
4362:Core/Src/deca_device.c **** *
4363:Core/Src/deca_device.c **** * output parameters
4364:Core/Src/deca_device.c **** *
4365:Core/Src/deca_device.c **** * returns  (temp_raw<<8)|(vbat_raw)
4366:Core/Src/deca_device.c **** */
4367:Core/Src/deca_device.c **** uint16_t dwt_readtempvbat(void)
4368:Core/Src/deca_device.c **** {
4369:Core/Src/deca_device.c ****     uint8_t vbat_raw = 0;
4370:Core/Src/deca_device.c ****     uint8_t temp_raw = 0;
4371:Core/Src/deca_device.c ****     uint8_t ldo_ctrl;
4372:Core/Src/deca_device.c ****     uint16_t wr_buf;
4373:Core/Src/deca_device.c **** 
4374:Core/Src/deca_device.c ****     /* Enable MS2 LDO - this is needed to read SAR if device is in IDLE_RC state, this LDO is on in
4375:Core/Src/deca_device.c ****     ldo_ctrl = dwt_read8bitoffsetreg(LDO_CTRL_ID, 0);
4376:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(LDO_CTRL_ID, 0, LDO_CTRL_LDO_VDDMS2_EN_BIT_MASK);
4377:Core/Src/deca_device.c **** 
4378:Core/Src/deca_device.c ****     /*
4379:Core/Src/deca_device.c ****     * SAR can read Vbat correctly by default. However, in order to read the Tsense value,
4380:Core/Src/deca_device.c ****     * the appropriate bit must be set in the SAR_TEST register.
4381:Core/Src/deca_device.c ****     */
4382:Core/Src/deca_device.c **** 
4383:Core/Src/deca_device.c ****     // Enable the TSENSE
4384:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(SAR_TEST_ID, 0, SAR_TEST_SAR_RDEN_BIT_MASK);
4385:Core/Src/deca_device.c **** 
4386:Core/Src/deca_device.c ****     // Reading All SAR inputs
4387:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(SAR_CTRL_ID, SAR_CTRL_SAR_START_BIT_OFFSET, SAR_CTRL_SAR_START_BIT_MASK)
4388:Core/Src/deca_device.c **** 
4389:Core/Src/deca_device.c ****     // Wait until SAR conversion is complete.
4390:Core/Src/deca_device.c ****     while (!(dwt_read8bitoffsetreg(SAR_STATUS_ID, SAR_STATUS_SAR_DONE_BIT_OFFSET) & SAR_STATUS_SAR_
4391:Core/Src/deca_device.c **** 
4392:Core/Src/deca_device.c ****     // Read voltage and temperature.
ARM GAS  /tmp/cctZ3fzX.s 			page 100


4393:Core/Src/deca_device.c ****     wr_buf = dwt_read16bitoffsetreg(SAR_READING_ID, SAR_READING_SAR_READING_VBAT_BIT_OFFSET);
4394:Core/Src/deca_device.c **** 
4395:Core/Src/deca_device.c ****     vbat_raw = (uint8_t)(wr_buf & 0x00ff);
4396:Core/Src/deca_device.c ****     temp_raw = (uint8_t)(wr_buf >> 8);
4397:Core/Src/deca_device.c **** 
4398:Core/Src/deca_device.c ****     // Clear SAR enable
4399:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(SAR_CTRL_ID, SAR_CTRL_SAR_START_BIT_OFFSET, 0x00);
4400:Core/Src/deca_device.c **** 
4401:Core/Src/deca_device.c ****     // Disable the TSENSE
4402:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(SAR_TEST_ID, 0, 0x0 << SAR_TEST_SAR_RDEN_BIT_OFFSET);
4403:Core/Src/deca_device.c **** 
4404:Core/Src/deca_device.c ****     // restore LDO control register
4405:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(LDO_CTRL_ID, 0, ldo_ctrl);
4406:Core/Src/deca_device.c **** 
4407:Core/Src/deca_device.c ****     return (uint16_t)((temp_raw << 8) | (vbat_raw));
4408:Core/Src/deca_device.c **** }
4409:Core/Src/deca_device.c **** 
4410:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4411:Core/Src/deca_device.c **** * @brief  this function takes in a raw temperature value and applies the conversion factor
4412:Core/Src/deca_device.c **** * to give true temperature. The dwt_initialise needs to be called before call to this to
4413:Core/Src/deca_device.c **** * ensure pdw3000local->tempP contains the SAR_LTEMP value from OTP.
4414:Core/Src/deca_device.c **** *
4415:Core/Src/deca_device.c **** * input parameters:
4416:Core/Src/deca_device.c **** * @param raw_temp - this is the 8-bit raw temperature value as read by dwt_readtempvbat
4417:Core/Src/deca_device.c **** *
4418:Core/Src/deca_device.c **** * output parameters:
4419:Core/Src/deca_device.c **** *
4420:Core/Src/deca_device.c **** * returns: temperature sensor value
4421:Core/Src/deca_device.c **** */
4422:Core/Src/deca_device.c **** float dwt_convertrawtemperature(uint8_t raw_temp)
4423:Core/Src/deca_device.c **** {
4424:Core/Src/deca_device.c ****     float realtemp;
4425:Core/Src/deca_device.c **** 
4426:Core/Src/deca_device.c ****     // the User Manual formula is: Temperature (�C) = ( (SAR_LTEMP � OTP_READ(Vtemp @ 20�C) )
4427:Core/Src/deca_device.c ****     realtemp = (float)((raw_temp - pdw3000local->tempP) * 1.05f) + 20.0f;
4428:Core/Src/deca_device.c ****     return realtemp;
4429:Core/Src/deca_device.c **** }
4430:Core/Src/deca_device.c **** 
4431:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4432:Core/Src/deca_device.c **** * @brief this function takes in a raw voltage value and applies the conversion factor
4433:Core/Src/deca_device.c **** * to give true voltage. The dwt_initialise needs to be called before call to this to
4434:Core/Src/deca_device.c **** * ensure pdw3000local->vBatP contains the SAR_LVBAT value from OTP
4435:Core/Src/deca_device.c **** *
4436:Core/Src/deca_device.c **** * input parameters:
4437:Core/Src/deca_device.c **** * @param raw_voltage - this is the 8-bit raw voltage value as read by dwt_readtempvbat
4438:Core/Src/deca_device.c **** *
4439:Core/Src/deca_device.c **** * output parameters:
4440:Core/Src/deca_device.c **** *
4441:Core/Src/deca_device.c **** * returns: voltage sensor value
4442:Core/Src/deca_device.c **** */
4443:Core/Src/deca_device.c **** float dwt_convertrawvoltage(uint8_t raw_voltage)
4444:Core/Src/deca_device.c **** {
4445:Core/Src/deca_device.c ****     float realvolt;
4446:Core/Src/deca_device.c **** 
4447:Core/Src/deca_device.c ****     // Bench measurements gives approximately: VDDBAT = sar_read * Vref / max_code * 16x_atten   - 
4448:Core/Src/deca_device.c ****     realvolt = (float)((float)(raw_voltage - pdw3000local->vBatP) * 0.4f * 16 / 255) + 3.0f;
4449:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
ARM GAS  /tmp/cctZ3fzX.s 			page 101


4450:Core/Src/deca_device.c ****     return realvolt;
4451:Core/Src/deca_device.c **** }
4452:Core/Src/deca_device.c **** 
4453:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4454:Core/Src/deca_device.c ****  * @brief this function reads the temperature of the DW3000 that was sampled
4455:Core/Src/deca_device.c ****  * on waking from Sleep/Deepsleep. They are not current values, but read on last
4456:Core/Src/deca_device.c ****  * wakeup if DWT_RUNSAR bit is set in mode parameter of dwt_configuresleep
4457:Core/Src/deca_device.c ****  *
4458:Core/Src/deca_device.c ****  * input parameters:
4459:Core/Src/deca_device.c ****  *
4460:Core/Src/deca_device.c ****  * output parameters:
4461:Core/Src/deca_device.c ****  *
4462:Core/Src/deca_device.c ****  * returns: 8-bit raw temperature sensor value
4463:Core/Src/deca_device.c ****  */
4464:Core/Src/deca_device.c **** uint8_t dwt_readwakeuptemp(void)
4465:Core/Src/deca_device.c **** {
4466:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(SAR_READING_ID, 1);
4467:Core/Src/deca_device.c **** }
4468:Core/Src/deca_device.c **** 
4469:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4470:Core/Src/deca_device.c ****  * @brief this function reads the battery voltage of the DW3000 that was sampled
4471:Core/Src/deca_device.c ****  * on waking from Sleep/Deepsleep. They are not current values, but read on last
4472:Core/Src/deca_device.c ****  * wakeup if DWT_RUNSAR bit is set in mode parameter of dwt_configuresleep
4473:Core/Src/deca_device.c ****  *
4474:Core/Src/deca_device.c ****  * input parameters:
4475:Core/Src/deca_device.c ****  *
4476:Core/Src/deca_device.c ****  * output parameters:
4477:Core/Src/deca_device.c ****  *
4478:Core/Src/deca_device.c ****  * returns: 8-bit raw battery voltage sensor value
4479:Core/Src/deca_device.c ****  */
4480:Core/Src/deca_device.c **** uint8_t dwt_readwakeupvbat(void)
4481:Core/Src/deca_device.c **** {
4482:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(SAR_READING_ID, 0);
4483:Core/Src/deca_device.c **** }
4484:Core/Src/deca_device.c **** 
4485:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4486:Core/Src/deca_device.c ****  * @brief this function determines the adjusted bandwidth setting (PG_DELAY bitfield setting)
4487:Core/Src/deca_device.c ****  * of the DW3000. The adjustment is a result of DW3000 internal PG cal routine, given a target coun
4488:Core/Src/deca_device.c ****  * find the PG delay which gives the closest count value.
4489:Core/Src/deca_device.c ****  * Manual sequencing of TX blocks and TX clocks need to be enabled for either channel 5 or 9.
4490:Core/Src/deca_device.c ****  * This function presumes that the PLL is already in the IDLE state. Please configure the PLL to ID
4491:Core/Src/deca_device.c ****  * state before calling this function, by calling dwt_configure.
4492:Core/Src/deca_device.c ****  *
4493:Core/Src/deca_device.c ****  * input parameters:
4494:Core/Src/deca_device.c ****  * @param target_count - uint16_t - the PG count target to reach in order to correct the bandwidth
4495:Core/Src/deca_device.c ****  * @param channel - int - The channel to configure for the corrected bandwidth (5 or 9)
4496:Core/Src/deca_device.c ****  *
4497:Core/Src/deca_device.c ****  * output parameters:
4498:Core/Src/deca_device.c ****  * returns: (uint8_t) The setting that was written to the PG_DELAY register (when calibration compl
4499:Core/Src/deca_device.c ****  */
4500:Core/Src/deca_device.c **** uint8_t dwt_calcbandwidthadj(uint16_t target_count, int channel)
4501:Core/Src/deca_device.c **** {
4502:Core/Src/deca_device.c ****     // Force system clock to FOSC/4 and TX clocks on and enable RF blocks
4503:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_SYS_TX);
4504:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 0);
4505:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
4506:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 102


4507:Core/Src/deca_device.c ****     // Write to the PG target before kicking off PG auto-cal with given target value
4508:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(PG_CAL_TARGET_ID, 0x0, target_count & PG_CAL_TARGET_TARGET_BIT_MASK);
4509:Core/Src/deca_device.c ****     // Run PG count cal
4510:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(PGC_CTRL_ID, 0x0, (uint8_t)(PGC_CTRL_PGC_START_BIT_MASK | PGC_CTRL_PGC_AUTO
4511:Core/Src/deca_device.c ****     // Wait for calibration to complete
4512:Core/Src/deca_device.c ****     while (dwt_read8bitoffsetreg(PGC_CTRL_ID, 0) & PGC_CTRL_PGC_START_BIT_MASK);
4513:Core/Src/deca_device.c **** 
4514:Core/Src/deca_device.c ****     //Restore clocks to AUTO and turn off TX blocks
4515:Core/Src/deca_device.c ****     dwt_disable_rftx_blocks();
4516:Core/Src/deca_device.c ****     dwt_disable_rf_tx(0);
4517:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_AUTO);
4518:Core/Src/deca_device.c **** 
4519:Core/Src/deca_device.c ****     return  (dwt_read8bitoffsetreg(TX_CTRL_HI_ID, 0) & TX_CTRL_HI_TX_PG_DELAY_BIT_MASK);
4520:Core/Src/deca_device.c **** }
4521:Core/Src/deca_device.c **** 
4522:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4523:Core/Src/deca_device.c ****  * @brief this function calculates the value in the pulse generator counter register (PGC_STATUS) f
4524:Core/Src/deca_device.c ****  * This is used to take a reference measurement, and the value recorded as the reference is used to
4525:Core/Src/deca_device.c ****  * bandwidth of the device when the temperature changes. This function presumes that the PLL is alr
4526:Core/Src/deca_device.c ****  * state.
4527:Core/Src/deca_device.c ****  *
4528:Core/Src/deca_device.c ****  * input parameters:
4529:Core/Src/deca_device.c ****  * @param pgdly - uint8_t - the PG_DELAY (max value 63) to set (to control bandwidth), and to find 
4530:Core/Src/deca_device.c ****  * @param channel - int - The channel to configure for the corrected bandwith (5 or 9)
4531:Core/Src/deca_device.c ****  *
4532:Core/Src/deca_device.c ****  * output parameters:
4533:Core/Src/deca_device.c ****  * returns (uint16_t) - The count value calculated from the provided PG_DELAY value (from PGC_STATU
4534:Core/Src/deca_device.c ****  * for later bandwidth adjustments
4535:Core/Src/deca_device.c ****  */
4536:Core/Src/deca_device.c **** uint16_t dwt_calcpgcount(uint8_t pgdly, int channel)
4537:Core/Src/deca_device.c **** {
4538:Core/Src/deca_device.c ****     uint16_t count = 0;
4539:Core/Src/deca_device.c **** 
4540:Core/Src/deca_device.c ****     // Force system clock to FOSC/4 and TX clocks on
4541:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_SYS_TX);
4542:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 0);
4543:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
4544:Core/Src/deca_device.c ****     
4545:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(TX_CTRL_HI_ID, TX_CTRL_HI_TX_PG_DELAY_BIT_OFFSET, pgdly & TX_CTRL_HI_TX_
4546:Core/Src/deca_device.c **** 
4547:Core/Src/deca_device.c ****     // Run count cal
4548:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(PGC_CTRL_ID, 0x0, PGC_CTRL_PGC_START_BIT_MASK);
4549:Core/Src/deca_device.c ****     // Wait for calibration to complete
4550:Core/Src/deca_device.c ****     while (dwt_read8bitoffsetreg(PGC_CTRL_ID, 0) & PGC_CTRL_PGC_START_BIT_MASK);
4551:Core/Src/deca_device.c ****     count = dwt_read16bitoffsetreg(PGC_STATUS_ID, PGC_STATUS_PG_DELAY_COUNT_BIT_OFFSET) & PGC_STATU
4552:Core/Src/deca_device.c **** 
4553:Core/Src/deca_device.c ****     dwt_disable_rftx_blocks();
4554:Core/Src/deca_device.c ****     dwt_disable_rf_tx(0);
4555:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_AUTO);
4556:Core/Src/deca_device.c **** 
4557:Core/Src/deca_device.c ****     return count;
4558:Core/Src/deca_device.c **** }
4559:Core/Src/deca_device.c **** 
4560:Core/Src/deca_device.c **** /* AES block */
4561:Core/Src/deca_device.c **** 
4562:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4563:Core/Src/deca_device.c ****  * @brief   This function provides the API for the configuration of the AES block before first usag
ARM GAS  /tmp/cctZ3fzX.s 			page 103


4564:Core/Src/deca_device.c ****  * @param   pCfg    - pointer to the configuration structure, which contains the AES configuration 
4565:Core/Src/deca_device.c ****  *
4566:Core/Src/deca_device.c ****  * output parameters
4567:Core/Src/deca_device.c ****  *
4568:Core/Src/deca_device.c ****  * no return value
4569:Core/Src/deca_device.c ****  */
4570:Core/Src/deca_device.c **** void dwt_configure_aes(const dwt_aes_config_t *pCfg)
4571:Core/Src/deca_device.c **** {
4572:Core/Src/deca_device.c ****     uint16_t tmp;
4573:Core/Src/deca_device.c **** 
4574:Core/Src/deca_device.c ****     tmp  = pCfg->mode;
4575:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_size) << AES_CFG_KEY_SIZE_BIT_OFFSET;
4576:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_addr) << AES_CFG_KEY_ADDR_BIT_OFFSET;
4577:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_load) << AES_CFG_KEY_LOAD_BIT_OFFSET;
4578:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_src)  << AES_CFG_KEY_SRC_BIT_OFFSET;
4579:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->mic)      << AES_CFG_TAG_SIZE_BIT_OFFSET;
4580:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_core_type)    << AES_CFG_CORE_SEL_BIT_OFFSET;
4581:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_key_otp_type) << AES_CFG_KEY_OTP_BIT_OFFSET;
4582:Core/Src/deca_device.c **** 
4583:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AES_CFG_ID,0,tmp);
4584:Core/Src/deca_device.c **** }
4585:Core/Src/deca_device.c **** 
4586:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4587:Core/Src/deca_device.c ****  * @brief   This gets mic size in bytes and convert it to value to write in AES_CFG
4588:Core/Src/deca_device.c ****  * @param   mic_size_in_bytes - mic size in bytes.
4589:Core/Src/deca_device.c ****  *
4590:Core/Src/deca_device.c ****  * @Return  dwt_mic_size_e - reg value number
4591:Core/Src/deca_device.c ****  */
4592:Core/Src/deca_device.c **** dwt_mic_size_e dwt_mic_size_from_bytes(uint8_t mic_size_in_bytes)
4593:Core/Src/deca_device.c **** {
4594:Core/Src/deca_device.c ****     dwt_mic_size_e  mic_size=MIC_0;
4595:Core/Src/deca_device.c **** 
4596:Core/Src/deca_device.c ****     if (mic_size_in_bytes!=0)
4597:Core/Src/deca_device.c ****     {
4598:Core/Src/deca_device.c ****         mic_size=(dwt_mic_size_e)((mic_size_in_bytes>>1)-1);
4599:Core/Src/deca_device.c ****     }
4600:Core/Src/deca_device.c ****     return mic_size;
4601:Core/Src/deca_device.c **** }
4602:Core/Src/deca_device.c **** 
4603:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4604:Core/Src/deca_device.c ****  * @brief   This function provides the API for the configuration of the AES key before first usage.
4605:Core/Src/deca_device.c ****  * @param   *key - pointer to the key which will be programmed to the Key register
4606:Core/Src/deca_device.c ****  *          Note, key register supports only 128-bit keys.
4607:Core/Src/deca_device.c ****  *
4608:Core/Src/deca_device.c ****  * output parameters
4609:Core/Src/deca_device.c ****  *
4610:Core/Src/deca_device.c ****  * no return value
4611:Core/Src/deca_device.c ****  */
4612:Core/Src/deca_device.c **** void dwt_set_keyreg_128(const dwt_aes_key_t  *key)
4613:Core/Src/deca_device.c **** {
4614:Core/Src/deca_device.c ****     /* program Key to the register : only 128 bit key can be used */
4615:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY0_ID, (uint32_t)key->key0);
4616:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY1_ID, (uint32_t)key->key1);
4617:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY2_ID, (uint32_t)key->key2);
4618:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY3_ID, (uint32_t)key->key3);
4619:Core/Src/deca_device.c **** }
4620:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 104


4621:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4622:Core/Src/deca_device.c ****  * @brief   poll AES block waiting for completion of encrypt/decrypt job
4623:Core/Src/deca_device.c ****  *          It clears all received errors/statuses.
4624:Core/Src/deca_device.c ****  *          This is not a safe function as it is waiting for AES_STS_AES_DONE_BIT_MASK forever.
4625:Core/Src/deca_device.c ****  *
4626:Core/Src/deca_device.c ****  * @return  AES_STS_ID status
4627:Core/Src/deca_device.c ****  */
4628:Core/Src/deca_device.c **** static
4629:Core/Src/deca_device.c **** uint8_t dwt_wait_aes_poll(void)
4630:Core/Src/deca_device.c **** {
4631:Core/Src/deca_device.c ****     uint8_t tmp;
4632:Core/Src/deca_device.c ****     do{
4633:Core/Src/deca_device.c ****         tmp = dwt_read8bitoffsetreg(AES_STS_ID,0);
4634:Core/Src/deca_device.c ****     }while(!(tmp & (AES_STS_AES_DONE_BIT_MASK | AES_STS_TRANS_ERR_BIT_MASK)));
4635:Core/Src/deca_device.c **** 
4636:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AES_STS_ID, 0, tmp); //clear all bits which were set as a result of AES 
4637:Core/Src/deca_device.c **** 
4638:Core/Src/deca_device.c ****     return (tmp&0x3F);
4639:Core/Src/deca_device.c **** }
4640:Core/Src/deca_device.c **** 
4641:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4642:Core/Src/deca_device.c ****  * @brief This function update the core IV regs according to the core type
4643:Core/Src/deca_device.c ****  *
4644:Core/Src/deca_device.c ****  * DW3000 IC stores the nonce in AES_IV0_ID to AES_IV3_ID registers.
4645:Core/Src/deca_device.c ****  * DW3000 IC, when operating in CCM* AES mode expects the nonce to be programmed into 4 words as fo
4646:Core/Src/deca_device.c ****  * AES_IV0_ID[0] = nonce[10]
4647:Core/Src/deca_device.c ****  * AES_IV0_ID[1] = nonce[9]
4648:Core/Src/deca_device.c ****  * AES_IV0_ID[2] = nonce[8]
4649:Core/Src/deca_device.c ****  * AES_IV0_ID[3] = nonce[7]
4650:Core/Src/deca_device.c ****  * AES_IV1_ID[0] = nonce[6]
4651:Core/Src/deca_device.c ****  * AES_IV1_ID[1] = nonce[5]
4652:Core/Src/deca_device.c ****  * AES_IV1_ID[2] = nonce[4]
4653:Core/Src/deca_device.c ****  * AES_IV1_ID[3] = nonce[3]
4654:Core/Src/deca_device.c ****  * AES_IV2_ID[0] = nonce[2]
4655:Core/Src/deca_device.c ****  * AES_IV2_ID[1] = nonce[1]
4656:Core/Src/deca_device.c ****  * AES_IV2_ID[2] = nonce[0]
4657:Core/Src/deca_device.c ****  * AES_IV2_ID[3] = don't care
4658:Core/Src/deca_device.c ****  * AES_IV3_ID[0] = payload_length[0]
4659:Core/Src/deca_device.c ****  * AES_IV3_ID[1] = payload_length[1]
4660:Core/Src/deca_device.c ****  * AES_IV3_ID[2] = nonce[12]
4661:Core/Src/deca_device.c ****  * AES_IV3_ID[3] = nonce[11]
4662:Core/Src/deca_device.c ****  *
4663:Core/Src/deca_device.c ****  * @param nonce - Pointer to the nonce
4664:Core/Src/deca_device.c ****  * @param payload - Length of data payload to encrypt/decrypt
4665:Core/Src/deca_device.c ****  *
4666:Core/Src/deca_device.c ****  */
4667:Core/Src/deca_device.c **** static
4668:Core/Src/deca_device.c **** void dwt_update_nonce_CCM(uint8_t *nonce, uint16_t payload)
4669:Core/Src/deca_device.c **** {
4670:Core/Src/deca_device.c ****     uint8_t iv[16];
4671:Core/Src/deca_device.c ****     iv[0] = nonce[10];
4672:Core/Src/deca_device.c ****     iv[1] = nonce[9];
4673:Core/Src/deca_device.c ****     iv[2] = nonce[8];
4674:Core/Src/deca_device.c ****     iv[3] = nonce[7];
4675:Core/Src/deca_device.c ****     iv[4] = nonce[6];
4676:Core/Src/deca_device.c ****     iv[5] = nonce[5];
4677:Core/Src/deca_device.c ****     iv[6] = nonce[4];
ARM GAS  /tmp/cctZ3fzX.s 			page 105


4678:Core/Src/deca_device.c ****     iv[7] = nonce[3];
4679:Core/Src/deca_device.c ****     iv[8] = nonce[2];
4680:Core/Src/deca_device.c ****     iv[9] = nonce[1];
4681:Core/Src/deca_device.c ****     iv[10] = nonce[0];
4682:Core/Src/deca_device.c ****     iv[11] = 0x00;    //don't care
4683:Core/Src/deca_device.c ****     iv[12] = (uint8_t) payload;
4684:Core/Src/deca_device.c ****     iv[13] = (uint8_t) (payload >> 8);
4685:Core/Src/deca_device.c ****     iv[14] = nonce[12];
4686:Core/Src/deca_device.c ****     iv[15] = nonce[11];
4687:Core/Src/deca_device.c **** 
4688:Core/Src/deca_device.c ****     dwt_writetodevice(AES_IV0_ID, 0, 16, iv);
4689:Core/Src/deca_device.c **** }
4690:Core/Src/deca_device.c **** 
4691:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4692:Core/Src/deca_device.c ****  * @brief This function update the nonce-IV regs when using GCM AES core type
4693:Core/Src/deca_device.c ****  *
4694:Core/Src/deca_device.c ****  * DW3000 IC, when operating in GCM AES mode expects the nonce to be programmed into 3 words as fol
4695:Core/Src/deca_device.c ****  * LSB (of nonce array) sent first. Nonce array is made up of 12 bytes.
4696:Core/Src/deca_device.c ****  *
4697:Core/Src/deca_device.c ****  * @param nonce - Pointer to the nonce value to set
4698:Core/Src/deca_device.c ****  *
4699:Core/Src/deca_device.c ****  */
4700:Core/Src/deca_device.c **** static
4701:Core/Src/deca_device.c **** void dwt_update_nonce_GCM(uint8_t *nonce)
4702:Core/Src/deca_device.c **** {
 1035              		.loc 1 4702 1 is_stmt 1 view -0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              		.loc 1 4702 1 is_stmt 0 view .LVU259
 1040 0000 08B5     		push	{r3, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 1044 0002 0346     		mov	r3, r0
4703:Core/Src/deca_device.c ****     dwt_writetodevice(AES_IV0_ID, 0, 12, nonce);
 1045              		.loc 1 4703 5 is_stmt 1 view .LVU260
 1046 0004 0C22     		movs	r2, #12
 1047 0006 0021     		movs	r1, #0
 1048 0008 0148     		ldr	r0, .L80
 1049              	.LVL104:
 1050              		.loc 1 4703 5 is_stmt 0 view .LVU261
 1051 000a FFF7FEFF 		bl	dwt_writetodevice
 1052              	.LVL105:
4704:Core/Src/deca_device.c **** }
 1053              		.loc 1 4704 1 view .LVU262
 1054 000e 08BD     		pop	{r3, pc}
 1055              	.L81:
 1056              		.align	2
 1057              	.L80:
 1058 0010 34000100 		.word	65588
 1059              		.cfi_endproc
 1060              	.LFE136:
 1062              		.section	.text.dwt_update_nonce_CCM,"ax",%progbits
 1063              		.align	1
 1064              		.syntax unified
 1065              		.thumb
ARM GAS  /tmp/cctZ3fzX.s 			page 106


 1066              		.thumb_func
 1067              		.fpu fpv4-sp-d16
 1069              	dwt_update_nonce_CCM:
 1070              	.LVL106:
 1071              	.LFB135:
4669:Core/Src/deca_device.c ****     uint8_t iv[16];
 1072              		.loc 1 4669 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 16
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
4669:Core/Src/deca_device.c ****     uint8_t iv[16];
 1076              		.loc 1 4669 1 is_stmt 0 view .LVU264
 1077 0000 00B5     		push	{lr}
 1078              		.cfi_def_cfa_offset 4
 1079              		.cfi_offset 14, -4
 1080 0002 85B0     		sub	sp, sp, #20
 1081              		.cfi_def_cfa_offset 24
 1082 0004 0B46     		mov	r3, r1
4670:Core/Src/deca_device.c ****     iv[0] = nonce[10];
 1083              		.loc 1 4670 5 is_stmt 1 view .LVU265
4671:Core/Src/deca_device.c ****     iv[1] = nonce[9];
 1084              		.loc 1 4671 5 view .LVU266
4671:Core/Src/deca_device.c ****     iv[1] = nonce[9];
 1085              		.loc 1 4671 11 is_stmt 0 view .LVU267
 1086 0006 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 1087 0008 8DF80020 		strb	r2, [sp]
4672:Core/Src/deca_device.c ****     iv[2] = nonce[8];
 1088              		.loc 1 4672 5 is_stmt 1 view .LVU268
4672:Core/Src/deca_device.c ****     iv[2] = nonce[8];
 1089              		.loc 1 4672 11 is_stmt 0 view .LVU269
 1090 000c 427A     		ldrb	r2, [r0, #9]	@ zero_extendqisi2
 1091 000e 8DF80120 		strb	r2, [sp, #1]
4673:Core/Src/deca_device.c ****     iv[3] = nonce[7];
 1092              		.loc 1 4673 5 is_stmt 1 view .LVU270
4673:Core/Src/deca_device.c ****     iv[3] = nonce[7];
 1093              		.loc 1 4673 11 is_stmt 0 view .LVU271
 1094 0012 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 1095 0014 8DF80220 		strb	r2, [sp, #2]
4674:Core/Src/deca_device.c ****     iv[4] = nonce[6];
 1096              		.loc 1 4674 5 is_stmt 1 view .LVU272
4674:Core/Src/deca_device.c ****     iv[4] = nonce[6];
 1097              		.loc 1 4674 11 is_stmt 0 view .LVU273
 1098 0018 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 1099 001a 8DF80320 		strb	r2, [sp, #3]
4675:Core/Src/deca_device.c ****     iv[5] = nonce[5];
 1100              		.loc 1 4675 5 is_stmt 1 view .LVU274
4675:Core/Src/deca_device.c ****     iv[5] = nonce[5];
 1101              		.loc 1 4675 11 is_stmt 0 view .LVU275
 1102 001e 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 1103 0020 8DF80420 		strb	r2, [sp, #4]
4676:Core/Src/deca_device.c ****     iv[6] = nonce[4];
 1104              		.loc 1 4676 5 is_stmt 1 view .LVU276
4676:Core/Src/deca_device.c ****     iv[6] = nonce[4];
 1105              		.loc 1 4676 11 is_stmt 0 view .LVU277
 1106 0024 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 1107 0026 8DF80520 		strb	r2, [sp, #5]
4677:Core/Src/deca_device.c ****     iv[7] = nonce[3];
ARM GAS  /tmp/cctZ3fzX.s 			page 107


 1108              		.loc 1 4677 5 is_stmt 1 view .LVU278
4677:Core/Src/deca_device.c ****     iv[7] = nonce[3];
 1109              		.loc 1 4677 11 is_stmt 0 view .LVU279
 1110 002a 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 1111 002c 8DF80620 		strb	r2, [sp, #6]
4678:Core/Src/deca_device.c ****     iv[8] = nonce[2];
 1112              		.loc 1 4678 5 is_stmt 1 view .LVU280
4678:Core/Src/deca_device.c ****     iv[8] = nonce[2];
 1113              		.loc 1 4678 11 is_stmt 0 view .LVU281
 1114 0030 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 1115 0032 8DF80720 		strb	r2, [sp, #7]
4679:Core/Src/deca_device.c ****     iv[9] = nonce[1];
 1116              		.loc 1 4679 5 is_stmt 1 view .LVU282
4679:Core/Src/deca_device.c ****     iv[9] = nonce[1];
 1117              		.loc 1 4679 11 is_stmt 0 view .LVU283
 1118 0036 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 1119 0038 8DF80820 		strb	r2, [sp, #8]
4680:Core/Src/deca_device.c ****     iv[10] = nonce[0];
 1120              		.loc 1 4680 5 is_stmt 1 view .LVU284
4680:Core/Src/deca_device.c ****     iv[10] = nonce[0];
 1121              		.loc 1 4680 11 is_stmt 0 view .LVU285
 1122 003c 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 1123 003e 8DF80920 		strb	r2, [sp, #9]
4681:Core/Src/deca_device.c ****     iv[11] = 0x00;    //don't care
 1124              		.loc 1 4681 5 is_stmt 1 view .LVU286
4681:Core/Src/deca_device.c ****     iv[11] = 0x00;    //don't care
 1125              		.loc 1 4681 19 is_stmt 0 view .LVU287
 1126 0042 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
4681:Core/Src/deca_device.c ****     iv[11] = 0x00;    //don't care
 1127              		.loc 1 4681 12 view .LVU288
 1128 0044 8DF80A20 		strb	r2, [sp, #10]
4682:Core/Src/deca_device.c ****     iv[12] = (uint8_t) payload;
 1129              		.loc 1 4682 5 is_stmt 1 view .LVU289
4682:Core/Src/deca_device.c ****     iv[12] = (uint8_t) payload;
 1130              		.loc 1 4682 12 is_stmt 0 view .LVU290
 1131 0048 0021     		movs	r1, #0
 1132              	.LVL107:
4682:Core/Src/deca_device.c ****     iv[12] = (uint8_t) payload;
 1133              		.loc 1 4682 12 view .LVU291
 1134 004a 8DF80B10 		strb	r1, [sp, #11]
4683:Core/Src/deca_device.c ****     iv[13] = (uint8_t) (payload >> 8);
 1135              		.loc 1 4683 5 is_stmt 1 view .LVU292
4683:Core/Src/deca_device.c ****     iv[13] = (uint8_t) (payload >> 8);
 1136              		.loc 1 4683 12 is_stmt 0 view .LVU293
 1137 004e 8DF80C30 		strb	r3, [sp, #12]
4684:Core/Src/deca_device.c ****     iv[14] = nonce[12];
 1138              		.loc 1 4684 5 is_stmt 1 view .LVU294
4684:Core/Src/deca_device.c ****     iv[14] = nonce[12];
 1139              		.loc 1 4684 14 is_stmt 0 view .LVU295
 1140 0052 1B0A     		lsrs	r3, r3, #8
4684:Core/Src/deca_device.c ****     iv[14] = nonce[12];
 1141              		.loc 1 4684 12 view .LVU296
 1142 0054 8DF80D30 		strb	r3, [sp, #13]
4685:Core/Src/deca_device.c ****     iv[15] = nonce[11];
 1143              		.loc 1 4685 5 is_stmt 1 view .LVU297
4685:Core/Src/deca_device.c ****     iv[15] = nonce[11];
 1144              		.loc 1 4685 12 is_stmt 0 view .LVU298
ARM GAS  /tmp/cctZ3fzX.s 			page 108


 1145 0058 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 1146 005a 8DF80E30 		strb	r3, [sp, #14]
4686:Core/Src/deca_device.c **** 
 1147              		.loc 1 4686 5 is_stmt 1 view .LVU299
4686:Core/Src/deca_device.c **** 
 1148              		.loc 1 4686 12 is_stmt 0 view .LVU300
 1149 005e C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1150 0060 8DF80F30 		strb	r3, [sp, #15]
4688:Core/Src/deca_device.c **** }
 1151              		.loc 1 4688 5 is_stmt 1 view .LVU301
 1152 0064 6B46     		mov	r3, sp
 1153 0066 1022     		movs	r2, #16
 1154 0068 0248     		ldr	r0, .L84
 1155              	.LVL108:
4688:Core/Src/deca_device.c **** }
 1156              		.loc 1 4688 5 is_stmt 0 view .LVU302
 1157 006a FFF7FEFF 		bl	dwt_writetodevice
 1158              	.LVL109:
4689:Core/Src/deca_device.c **** 
 1159              		.loc 1 4689 1 view .LVU303
 1160 006e 05B0     		add	sp, sp, #20
 1161              		.cfi_def_cfa_offset 4
 1162              		@ sp needed
 1163 0070 5DF804FB 		ldr	pc, [sp], #4
 1164              	.L85:
 1165              		.align	2
 1166              	.L84:
 1167 0074 34000100 		.word	65588
 1168              		.cfi_endproc
 1169              	.LFE135:
 1171              		.section	.text.dwt_readfromdevice,"ax",%progbits
 1172              		.align	1
 1173              		.global	dwt_readfromdevice
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1177              		.fpu fpv4-sp-d16
 1179              	dwt_readfromdevice:
 1180              	.LVL110:
 1181              	.LFB5:
 372:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_RD_BIT);
 1182              		.loc 1 372 1 is_stmt 1 view -0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 372:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, index, length, buffer, DW3000_SPI_RD_BIT);
 1186              		.loc 1 372 1 is_stmt 0 view .LVU305
 1187 0000 10B5     		push	{r4, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 4, -8
 1190              		.cfi_offset 14, -4
 1191 0002 82B0     		sub	sp, sp, #8
 1192              		.cfi_def_cfa_offset 16
 373:Core/Src/deca_device.c **** }
 1193              		.loc 1 373 5 is_stmt 1 view .LVU306
 1194 0004 0024     		movs	r4, #0
 1195 0006 0094     		str	r4, [sp]
ARM GAS  /tmp/cctZ3fzX.s 			page 109


 1196 0008 FFF7FEFF 		bl	dwt_xfer3000
 1197              	.LVL111:
 374:Core/Src/deca_device.c **** 
 1198              		.loc 1 374 1 is_stmt 0 view .LVU307
 1199 000c 02B0     		add	sp, sp, #8
 1200              		.cfi_def_cfa_offset 8
 1201              		@ sp needed
 1202 000e 10BD     		pop	{r4, pc}
 1203              		.cfi_endproc
 1204              	.LFE5:
 1206              		.section	.text.dwt_read32bitoffsetreg,"ax",%progbits
 1207              		.align	1
 1208              		.global	dwt_read32bitoffsetreg
 1209              		.syntax unified
 1210              		.thumb
 1211              		.thumb_func
 1212              		.fpu fpv4-sp-d16
 1214              	dwt_read32bitoffsetreg:
 1215              	.LVL112:
 1216              	.LFB6:
 388:Core/Src/deca_device.c ****     int     j ;
 1217              		.loc 1 388 1 is_stmt 1 view -0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 8
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Core/Src/deca_device.c ****     int     j ;
 1221              		.loc 1 388 1 is_stmt 0 view .LVU309
 1222 0000 00B5     		push	{lr}
 1223              		.cfi_def_cfa_offset 4
 1224              		.cfi_offset 14, -4
 1225 0002 83B0     		sub	sp, sp, #12
 1226              		.cfi_def_cfa_offset 16
 389:Core/Src/deca_device.c ****     uint32_t  regval = 0 ;
 1227              		.loc 1 389 5 is_stmt 1 view .LVU310
 390:Core/Src/deca_device.c ****     uint8_t   buffer[4] ;
 1228              		.loc 1 390 5 view .LVU311
 1229              	.LVL113:
 391:Core/Src/deca_device.c **** 
 1230              		.loc 1 391 5 view .LVU312
 393:Core/Src/deca_device.c **** 
 1231              		.loc 1 393 5 view .LVU313
 1232 0004 01AB     		add	r3, sp, #4
 1233 0006 0422     		movs	r2, #4
 1234 0008 89B2     		uxth	r1, r1
 1235              	.LVL114:
 393:Core/Src/deca_device.c **** 
 1236              		.loc 1 393 5 is_stmt 0 view .LVU314
 1237 000a FFF7FEFF 		bl	dwt_readfromdevice
 1238              	.LVL115:
 395:Core/Src/deca_device.c ****     {
 1239              		.loc 1 395 5 is_stmt 1 view .LVU315
 390:Core/Src/deca_device.c ****     uint8_t   buffer[4] ;
 1240              		.loc 1 390 15 is_stmt 0 view .LVU316
 1241 000e 0020     		movs	r0, #0
 395:Core/Src/deca_device.c ****     {
 1242              		.loc 1 395 12 view .LVU317
 1243 0010 0323     		movs	r3, #3
ARM GAS  /tmp/cctZ3fzX.s 			page 110


 395:Core/Src/deca_device.c ****     {
 1244              		.loc 1 395 5 view .LVU318
 1245 0012 07E0     		b	.L89
 1246              	.LVL116:
 1247              	.L90:
 397:Core/Src/deca_device.c ****     }
 1248              		.loc 1 397 9 is_stmt 1 discriminator 3 view .LVU319
 397:Core/Src/deca_device.c ****     }
 1249              		.loc 1 397 40 is_stmt 0 discriminator 3 view .LVU320
 1250 0014 03F10802 		add	r2, r3, #8
 1251 0018 6A44     		add	r2, sp, r2
 1252 001a 12F8042C 		ldrb	r2, [r2, #-4]	@ zero_extendqisi2
 397:Core/Src/deca_device.c ****     }
 1253              		.loc 1 397 16 discriminator 3 view .LVU321
 1254 001e 02EB0020 		add	r0, r2, r0, lsl #8
 1255              	.LVL117:
 395:Core/Src/deca_device.c ****     {
 1256              		.loc 1 395 27 is_stmt 1 discriminator 3 view .LVU322
 395:Core/Src/deca_device.c ****     {
 1257              		.loc 1 395 29 is_stmt 0 discriminator 3 view .LVU323
 1258 0022 013B     		subs	r3, r3, #1
 1259              	.LVL118:
 1260              	.L89:
 395:Core/Src/deca_device.c ****     {
 1261              		.loc 1 395 18 is_stmt 1 discriminator 1 view .LVU324
 395:Core/Src/deca_device.c ****     {
 1262              		.loc 1 395 5 is_stmt 0 discriminator 1 view .LVU325
 1263 0024 002B     		cmp	r3, #0
 1264 0026 F5DA     		bge	.L90
 400:Core/Src/deca_device.c **** 
 1265              		.loc 1 400 5 is_stmt 1 view .LVU326
 402:Core/Src/deca_device.c **** 
 1266              		.loc 1 402 1 is_stmt 0 view .LVU327
 1267 0028 03B0     		add	sp, sp, #12
 1268              		.cfi_def_cfa_offset 4
 1269              		@ sp needed
 1270 002a 5DF804FB 		ldr	pc, [sp], #4
 1271              		.cfi_endproc
 1272              	.LFE6:
 1274              		.section	.text._dwt_otpread,"ax",%progbits
 1275              		.align	1
 1276              		.syntax unified
 1277              		.thumb
 1278              		.thumb_func
 1279              		.fpu fpv4-sp-d16
 1281              	_dwt_otpread:
 1282              	.LVL119:
 1283              	.LFB78:
2725:Core/Src/deca_device.c ****     uint32_t ret_data = 0;
 1284              		.loc 1 2725 1 is_stmt 1 view -0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
2725:Core/Src/deca_device.c ****     uint32_t ret_data = 0;
 1288              		.loc 1 2725 1 is_stmt 0 view .LVU329
 1289 0000 38B5     		push	{r3, r4, r5, lr}
 1290              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cctZ3fzX.s 			page 111


 1291              		.cfi_offset 3, -16
 1292              		.cfi_offset 4, -12
 1293              		.cfi_offset 5, -8
 1294              		.cfi_offset 14, -4
 1295 0002 0446     		mov	r4, r0
2726:Core/Src/deca_device.c **** 
 1296              		.loc 1 2726 5 is_stmt 1 view .LVU330
 1297              	.LVL120:
2729:Core/Src/deca_device.c ****     // set the address
 1298              		.loc 1 2729 5 view .LVU331
 1299 0004 0A4D     		ldr	r5, .L94
 1300 0006 0122     		movs	r2, #1
 1301 0008 0021     		movs	r1, #0
 1302 000a 2846     		mov	r0, r5
 1303              	.LVL121:
2729:Core/Src/deca_device.c ****     // set the address
 1304              		.loc 1 2729 5 is_stmt 0 view .LVU332
 1305 000c FFF7FEFF 		bl	dwt_write16bitoffsetreg
 1306              	.LVL122:
2731:Core/Src/deca_device.c ****     // Assert the read strobe
 1307              		.loc 1 2731 5 is_stmt 1 view .LVU333
 1308 0010 2246     		mov	r2, r4
 1309 0012 0021     		movs	r1, #0
 1310 0014 0748     		ldr	r0, .L94+4
 1311 0016 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 1312              	.LVL123:
2733:Core/Src/deca_device.c ****     // attempt a read from OTP address
 1313              		.loc 1 2733 5 view .LVU334
 1314 001a 0222     		movs	r2, #2
 1315 001c 0021     		movs	r1, #0
 1316 001e 2846     		mov	r0, r5
 1317 0020 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 1318              	.LVL124:
2735:Core/Src/deca_device.c **** 
 1319              		.loc 1 2735 5 view .LVU335
2735:Core/Src/deca_device.c **** 
 1320              		.loc 1 2735 16 is_stmt 0 view .LVU336
 1321 0024 0021     		movs	r1, #0
 1322 0026 0448     		ldr	r0, .L94+8
 1323 0028 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 1324              	.LVL125:
2738:Core/Src/deca_device.c **** }
 1325              		.loc 1 2738 5 is_stmt 1 view .LVU337
2739:Core/Src/deca_device.c **** 
 1326              		.loc 1 2739 1 is_stmt 0 view .LVU338
 1327 002c 38BD     		pop	{r3, r4, r5, pc}
 1328              	.L95:
 1329 002e 00BF     		.align	2
 1330              	.L94:
 1331 0030 08000B00 		.word	720904
 1332 0034 04000B00 		.word	720900
 1333 0038 10000B00 		.word	720912
 1334              		.cfi_endproc
 1335              	.LFE78:
 1337              		.section	.text.dwt_read16bitoffsetreg,"ax",%progbits
 1338              		.align	1
 1339              		.global	dwt_read16bitoffsetreg
ARM GAS  /tmp/cctZ3fzX.s 			page 112


 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
 1343              		.fpu fpv4-sp-d16
 1345              	dwt_read16bitoffsetreg:
 1346              	.LVL126:
 1347              	.LFB7:
 416:Core/Src/deca_device.c ****     uint16_t  regval = 0 ;
 1348              		.loc 1 416 1 is_stmt 1 view -0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 8
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 416:Core/Src/deca_device.c ****     uint16_t  regval = 0 ;
 1352              		.loc 1 416 1 is_stmt 0 view .LVU340
 1353 0000 00B5     		push	{lr}
 1354              		.cfi_def_cfa_offset 4
 1355              		.cfi_offset 14, -4
 1356 0002 83B0     		sub	sp, sp, #12
 1357              		.cfi_def_cfa_offset 16
 417:Core/Src/deca_device.c ****     uint8_t   buffer[2] ;
 1358              		.loc 1 417 5 is_stmt 1 view .LVU341
 1359              	.LVL127:
 418:Core/Src/deca_device.c **** 
 1360              		.loc 1 418 5 view .LVU342
 420:Core/Src/deca_device.c **** 
 1361              		.loc 1 420 5 view .LVU343
 1362 0004 01AB     		add	r3, sp, #4
 1363 0006 0222     		movs	r2, #2
 1364 0008 89B2     		uxth	r1, r1
 1365              	.LVL128:
 420:Core/Src/deca_device.c **** 
 1366              		.loc 1 420 5 is_stmt 0 view .LVU344
 1367 000a FFF7FEFF 		bl	dwt_readfromdevice
 1368              	.LVL129:
 422:Core/Src/deca_device.c ****     return regval ;
 1369              		.loc 1 422 5 is_stmt 1 view .LVU345
 422:Core/Src/deca_device.c ****     return regval ;
 1370              		.loc 1 422 31 is_stmt 0 view .LVU346
 1371 000e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 422:Core/Src/deca_device.c ****     return regval ;
 1372              		.loc 1 422 49 view .LVU347
 1373 0012 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 422:Core/Src/deca_device.c ****     return regval ;
 1374              		.loc 1 422 12 view .LVU348
 1375 0016 00EB0320 		add	r0, r0, r3, lsl #8
 1376              	.LVL130:
 423:Core/Src/deca_device.c **** 
 1377              		.loc 1 423 5 is_stmt 1 view .LVU349
 425:Core/Src/deca_device.c **** 
 1378              		.loc 1 425 1 is_stmt 0 view .LVU350
 1379 001a 80B2     		uxth	r0, r0
 425:Core/Src/deca_device.c **** 
 1380              		.loc 1 425 1 view .LVU351
 1381 001c 03B0     		add	sp, sp, #12
 1382              		.cfi_def_cfa_offset 4
 1383              		@ sp needed
 1384 001e 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/cctZ3fzX.s 			page 113


 1385              		.cfi_endproc
 1386              	.LFE7:
 1388              		.section	.text.dwt_read8bitoffsetreg,"ax",%progbits
 1389              		.align	1
 1390              		.global	dwt_read8bitoffsetreg
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1394              		.fpu fpv4-sp-d16
 1396              	dwt_read8bitoffsetreg:
 1397              	.LVL131:
 1398              	.LFB8:
 439:Core/Src/deca_device.c ****     uint8_t regval;
 1399              		.loc 1 439 1 is_stmt 1 view -0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 8
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 439:Core/Src/deca_device.c ****     uint8_t regval;
 1403              		.loc 1 439 1 is_stmt 0 view .LVU353
 1404 0000 00B5     		push	{lr}
 1405              		.cfi_def_cfa_offset 4
 1406              		.cfi_offset 14, -4
 1407 0002 83B0     		sub	sp, sp, #12
 1408              		.cfi_def_cfa_offset 16
 440:Core/Src/deca_device.c **** 
 1409              		.loc 1 440 5 is_stmt 1 view .LVU354
 442:Core/Src/deca_device.c **** 
 1410              		.loc 1 442 5 view .LVU355
 1411 0004 0DF10703 		add	r3, sp, #7
 1412 0008 0122     		movs	r2, #1
 1413 000a 89B2     		uxth	r1, r1
 1414              	.LVL132:
 442:Core/Src/deca_device.c **** 
 1415              		.loc 1 442 5 is_stmt 0 view .LVU356
 1416 000c FFF7FEFF 		bl	dwt_readfromdevice
 1417              	.LVL133:
 444:Core/Src/deca_device.c **** }
 1418              		.loc 1 444 5 is_stmt 1 view .LVU357
 445:Core/Src/deca_device.c **** 
 1419              		.loc 1 445 1 is_stmt 0 view .LVU358
 1420 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1421 0014 03B0     		add	sp, sp, #12
 1422              		.cfi_def_cfa_offset 4
 1423              		@ sp needed
 1424 0016 5DF804FB 		ldr	pc, [sp], #4
 1425              		.cfi_endproc
 1426              	.LFE8:
 1428              		.section	.text.dwt_wait_aes_poll,"ax",%progbits
 1429              		.align	1
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu fpv4-sp-d16
 1435              	dwt_wait_aes_poll:
 1436              	.LFB134:
4630:Core/Src/deca_device.c ****     uint8_t tmp;
 1437              		.loc 1 4630 1 is_stmt 1 view -0
ARM GAS  /tmp/cctZ3fzX.s 			page 114


 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441 0000 10B5     		push	{r4, lr}
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 4, -8
 1444              		.cfi_offset 14, -4
 1445              	.L101:
4631:Core/Src/deca_device.c ****     do{
 1446              		.loc 1 4631 5 discriminator 1 view .LVU360
4632:Core/Src/deca_device.c ****         tmp = dwt_read8bitoffsetreg(AES_STS_ID,0);
 1447              		.loc 1 4632 5 discriminator 1 view .LVU361
4633:Core/Src/deca_device.c ****     }while(!(tmp & (AES_STS_AES_DONE_BIT_MASK | AES_STS_TRANS_ERR_BIT_MASK)));
 1448              		.loc 1 4633 9 discriminator 1 view .LVU362
4633:Core/Src/deca_device.c ****     }while(!(tmp & (AES_STS_AES_DONE_BIT_MASK | AES_STS_TRANS_ERR_BIT_MASK)));
 1449              		.loc 1 4633 15 is_stmt 0 discriminator 1 view .LVU363
 1450 0002 0021     		movs	r1, #0
 1451 0004 0748     		ldr	r0, .L103
 1452 0006 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 1453              	.LVL134:
4634:Core/Src/deca_device.c **** 
 1454              		.loc 1 4634 11 is_stmt 1 discriminator 1 view .LVU364
4634:Core/Src/deca_device.c **** 
 1455              		.loc 1 4634 5 is_stmt 0 discriminator 1 view .LVU365
 1456 000a 10F0050F 		tst	r0, #5
 1457 000e F8D0     		beq	.L101
 1458 0010 0446     		mov	r4, r0
4636:Core/Src/deca_device.c **** 
 1459              		.loc 1 4636 5 is_stmt 1 view .LVU366
 1460 0012 0246     		mov	r2, r0
 1461 0014 0021     		movs	r1, #0
 1462 0016 0348     		ldr	r0, .L103
 1463              	.LVL135:
4636:Core/Src/deca_device.c **** 
 1464              		.loc 1 4636 5 is_stmt 0 view .LVU367
 1465 0018 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 1466              	.LVL136:
4638:Core/Src/deca_device.c **** }
 1467              		.loc 1 4638 5 is_stmt 1 view .LVU368
4639:Core/Src/deca_device.c **** 
 1468              		.loc 1 4639 1 is_stmt 0 view .LVU369
 1469 001c 04F03F00 		and	r0, r4, #63
 1470 0020 10BD     		pop	{r4, pc}
 1471              	.L104:
 1472 0022 00BF     		.align	2
 1473              	.L103:
 1474 0024 50000100 		.word	65616
 1475              		.cfi_endproc
 1476              	.LFE134:
 1478              		.section	.text.dwt_modify32bitoffsetreg,"ax",%progbits
 1479              		.align	1
 1480              		.global	dwt_modify32bitoffsetreg
 1481              		.syntax unified
 1482              		.thumb
 1483              		.thumb_func
 1484              		.fpu fpv4-sp-d16
 1486              	dwt_modify32bitoffsetreg:
ARM GAS  /tmp/cctZ3fzX.s 			page 115


 1487              	.LVL137:
 1488              	.LFB12:
 525:Core/Src/deca_device.c ****     uint8_t buf[8];
 1489              		.loc 1 525 1 is_stmt 1 view -0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 8
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 525:Core/Src/deca_device.c ****     uint8_t buf[8];
 1493              		.loc 1 525 1 is_stmt 0 view .LVU371
 1494 0000 00B5     		push	{lr}
 1495              		.cfi_def_cfa_offset 4
 1496              		.cfi_offset 14, -4
 1497 0002 85B0     		sub	sp, sp, #20
 1498              		.cfi_def_cfa_offset 24
 526:Core/Src/deca_device.c ****     buf[0] = (uint8_t)_and;//       &0xFF;
 1499              		.loc 1 526 5 is_stmt 1 view .LVU372
 527:Core/Src/deca_device.c ****     buf[1] = (uint8_t)(_and>>8);//  &0xFF;
 1500              		.loc 1 527 5 view .LVU373
 527:Core/Src/deca_device.c ****     buf[1] = (uint8_t)(_and>>8);//  &0xFF;
 1501              		.loc 1 527 12 is_stmt 0 view .LVU374
 1502 0004 8DF80820 		strb	r2, [sp, #8]
 528:Core/Src/deca_device.c ****     buf[2] = (uint8_t)(_and>>16);// &0xFF;
 1503              		.loc 1 528 5 is_stmt 1 view .LVU375
 528:Core/Src/deca_device.c ****     buf[2] = (uint8_t)(_and>>16);// &0xFF;
 1504              		.loc 1 528 14 is_stmt 0 view .LVU376
 1505 0008 C2F3072C 		ubfx	ip, r2, #8, #8
 528:Core/Src/deca_device.c ****     buf[2] = (uint8_t)(_and>>16);// &0xFF;
 1506              		.loc 1 528 12 view .LVU377
 1507 000c 8DF809C0 		strb	ip, [sp, #9]
 529:Core/Src/deca_device.c ****     buf[3] = (uint8_t)(_and>>24);// &0xFF;
 1508              		.loc 1 529 5 is_stmt 1 view .LVU378
 529:Core/Src/deca_device.c ****     buf[3] = (uint8_t)(_and>>24);// &0xFF;
 1509              		.loc 1 529 14 is_stmt 0 view .LVU379
 1510 0010 C2F3074C 		ubfx	ip, r2, #16, #8
 529:Core/Src/deca_device.c ****     buf[3] = (uint8_t)(_and>>24);// &0xFF;
 1511              		.loc 1 529 12 view .LVU380
 1512 0014 8DF80AC0 		strb	ip, [sp, #10]
 530:Core/Src/deca_device.c ****     buf[4] = (uint8_t)_or;//        &0xFF;
 1513              		.loc 1 530 5 is_stmt 1 view .LVU381
 530:Core/Src/deca_device.c ****     buf[4] = (uint8_t)_or;//        &0xFF;
 1514              		.loc 1 530 14 is_stmt 0 view .LVU382
 1515 0018 120E     		lsrs	r2, r2, #24
 1516              	.LVL138:
 530:Core/Src/deca_device.c ****     buf[4] = (uint8_t)_or;//        &0xFF;
 1517              		.loc 1 530 12 view .LVU383
 1518 001a 8DF80B20 		strb	r2, [sp, #11]
 531:Core/Src/deca_device.c ****     buf[5] = (uint8_t)(_or>>8);//   &0xFF;
 1519              		.loc 1 531 5 is_stmt 1 view .LVU384
 531:Core/Src/deca_device.c ****     buf[5] = (uint8_t)(_or>>8);//   &0xFF;
 1520              		.loc 1 531 12 is_stmt 0 view .LVU385
 1521 001e 8DF80C30 		strb	r3, [sp, #12]
 532:Core/Src/deca_device.c ****     buf[6] = (uint8_t)(_or>>16);//  &0xFF;
 1522              		.loc 1 532 5 is_stmt 1 view .LVU386
 532:Core/Src/deca_device.c ****     buf[6] = (uint8_t)(_or>>16);//  &0xFF;
 1523              		.loc 1 532 14 is_stmt 0 view .LVU387
 1524 0022 C3F30722 		ubfx	r2, r3, #8, #8
 532:Core/Src/deca_device.c ****     buf[6] = (uint8_t)(_or>>16);//  &0xFF;
ARM GAS  /tmp/cctZ3fzX.s 			page 116


 1525              		.loc 1 532 12 view .LVU388
 1526 0026 8DF80D20 		strb	r2, [sp, #13]
 533:Core/Src/deca_device.c ****     buf[7] = (uint8_t)(_or>>24);//  &0xFF;
 1527              		.loc 1 533 5 is_stmt 1 view .LVU389
 533:Core/Src/deca_device.c ****     buf[7] = (uint8_t)(_or>>24);//  &0xFF;
 1528              		.loc 1 533 14 is_stmt 0 view .LVU390
 1529 002a C3F30742 		ubfx	r2, r3, #16, #8
 533:Core/Src/deca_device.c ****     buf[7] = (uint8_t)(_or>>24);//  &0xFF;
 1530              		.loc 1 533 12 view .LVU391
 1531 002e 8DF80E20 		strb	r2, [sp, #14]
 534:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_32);
 1532              		.loc 1 534 5 is_stmt 1 view .LVU392
 534:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_32);
 1533              		.loc 1 534 14 is_stmt 0 view .LVU393
 1534 0032 1B0E     		lsrs	r3, r3, #24
 1535              	.LVL139:
 534:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_32);
 1536              		.loc 1 534 12 view .LVU394
 1537 0034 8DF80F30 		strb	r3, [sp, #15]
 535:Core/Src/deca_device.c **** }
 1538              		.loc 1 535 5 is_stmt 1 view .LVU395
 1539 0038 48F20303 		movw	r3, #32771
 1540 003c 0093     		str	r3, [sp]
 1541 003e 02AB     		add	r3, sp, #8
 1542 0040 0822     		movs	r2, #8
 1543 0042 89B2     		uxth	r1, r1
 1544              	.LVL140:
 535:Core/Src/deca_device.c **** }
 1545              		.loc 1 535 5 is_stmt 0 view .LVU396
 1546 0044 FFF7FEFF 		bl	dwt_xfer3000
 1547              	.LVL141:
 536:Core/Src/deca_device.c **** 
 1548              		.loc 1 536 1 view .LVU397
 1549 0048 05B0     		add	sp, sp, #20
 1550              		.cfi_def_cfa_offset 4
 1551              		@ sp needed
 1552 004a 5DF804FB 		ldr	pc, [sp], #4
 1553              		.cfi_endproc
 1554              	.LFE12:
 1556              		.section	.text._dwt_kick_ops_table_on_wakeup,"ax",%progbits
 1557              		.align	1
 1558              		.syntax unified
 1559              		.thumb
 1560              		.thumb_func
 1561              		.fpu fpv4-sp-d16
 1563              	_dwt_kick_ops_table_on_wakeup:
 1564              	.LFB19:
 706:Core/Src/deca_device.c ****     /* Restore OPS table config and kick. */
 1565              		.loc 1 706 1 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569 0000 08B5     		push	{r3, lr}
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 3, -8
 1572              		.cfi_offset 14, -4
 711:Core/Src/deca_device.c ****     {
ARM GAS  /tmp/cctZ3fzX.s 			page 117


 1573              		.loc 1 711 5 view .LVU399
 711:Core/Src/deca_device.c ****     {
 1574              		.loc 1 711 25 is_stmt 0 view .LVU400
 1575 0002 0E4B     		ldr	r3, .L112
 1576 0004 1B68     		ldr	r3, [r3]
 1577 0006 1B8A     		ldrh	r3, [r3, #16]
 1578 0008 03F0E003 		and	r3, r3, #224
 711:Core/Src/deca_device.c ****     {
 1579              		.loc 1 711 5 view .LVU401
 1580 000c 202B     		cmp	r3, #32
 1581 000e 02D0     		beq	.L108
 1582 0010 602B     		cmp	r3, #96
 1583 0012 09D0     		beq	.L109
 1584              	.L107:
 724:Core/Src/deca_device.c **** 
 1585              		.loc 1 724 1 view .LVU402
 1586 0014 08BD     		pop	{r3, pc}
 1587              	.L108:
 715:Core/Src/deca_device.c ****         break;
 1588              		.loc 1 715 9 is_stmt 1 view .LVU403
 1589 0016 4FF48063 		mov	r3, #1024
 1590 001a 6FF4C052 		mvn	r2, #6144
 1591 001e 0021     		movs	r1, #0
 1592 0020 0748     		ldr	r0, .L112+4
 1593 0022 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1594              	.LVL142:
 716:Core/Src/deca_device.c ****     /* If SCP mode is enabled by dwt_configure(), the OPS table should be kicked off like so upon w
 1595              		.loc 1 716 9 view .LVU404
 1596 0026 F5E7     		b	.L107
 1597              	.L109:
 719:Core/Src/deca_device.c ****         break;
 1598              		.loc 1 719 9 view .LVU405
 1599 0028 4FF44063 		mov	r3, #3072
 1600 002c 6FF4C052 		mvn	r2, #6144
 1601 0030 0021     		movs	r1, #0
 1602 0032 0348     		ldr	r0, .L112+4
 1603 0034 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1604              	.LVL143:
 720:Core/Src/deca_device.c ****     default:
 1605              		.loc 1 720 9 view .LVU406
 724:Core/Src/deca_device.c **** 
 1606              		.loc 1 724 1 is_stmt 0 view .LVU407
 1607 0038 ECE7     		b	.L107
 1608              	.L113:
 1609 003a 00BF     		.align	2
 1610              	.L112:
 1611 003c 00000000 		.word	.LANCHOR2
 1612 0040 08000B00 		.word	720904
 1613              		.cfi_endproc
 1614              	.LFE19:
 1616              		.section	.text._dwt_kick_dgc_on_wakeup,"ax",%progbits
 1617              		.align	1
 1618              		.syntax unified
 1619              		.thumb
 1620              		.thumb_func
 1621              		.fpu fpv4-sp-d16
 1623              	_dwt_kick_dgc_on_wakeup:
ARM GAS  /tmp/cctZ3fzX.s 			page 118


 1624              	.LVL144:
 1625              	.LFB20:
 739:Core/Src/deca_device.c ****     /* The DGC_SEL bit must be set to '0' for channel 5 and '1' for channel 9 */
 1626              		.loc 1 739 1 is_stmt 1 view -0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Core/Src/deca_device.c ****     /* The DGC_SEL bit must be set to '0' for channel 5 and '1' for channel 9 */
 1630              		.loc 1 739 1 is_stmt 0 view .LVU409
 1631 0000 08B5     		push	{r3, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 3, -8
 1634              		.cfi_offset 14, -4
 741:Core/Src/deca_device.c ****     {
 1635              		.loc 1 741 5 is_stmt 1 view .LVU410
 741:Core/Src/deca_device.c ****     {
 1636              		.loc 1 741 8 is_stmt 0 view .LVU411
 1637 0002 0528     		cmp	r0, #5
 1638 0004 02D0     		beq	.L118
 746:Core/Src/deca_device.c ****     {
 1639              		.loc 1 746 10 is_stmt 1 view .LVU412
 746:Core/Src/deca_device.c ****     {
 1640              		.loc 1 746 13 is_stmt 0 view .LVU413
 1641 0006 0928     		cmp	r0, #9
 1642 0008 08D0     		beq	.L119
 1643              	.LVL145:
 1644              	.L114:
 751:Core/Src/deca_device.c **** 
 1645              		.loc 1 751 1 view .LVU414
 1646 000a 08BD     		pop	{r3, pc}
 1647              	.LVL146:
 1648              	.L118:
 743:Core/Src/deca_device.c ****                 (DWT_DGC_SEL_CH5 << OTP_CFG_DGC_SEL_BIT_OFFSET) | OTP_CFG_DGC_KICK_BIT_MASK);
 1649              		.loc 1 743 9 is_stmt 1 view .LVU415
 1650 000c 4023     		movs	r3, #64
 1651 000e 6FF40052 		mvn	r2, #8192
 1652 0012 0021     		movs	r1, #0
 1653 0014 0648     		ldr	r0, .L120
 1654              	.LVL147:
 743:Core/Src/deca_device.c ****                 (DWT_DGC_SEL_CH5 << OTP_CFG_DGC_SEL_BIT_OFFSET) | OTP_CFG_DGC_KICK_BIT_MASK);
 1655              		.loc 1 743 9 is_stmt 0 view .LVU416
 1656 0016 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1657              	.LVL148:
 1658 001a F6E7     		b	.L114
 1659              	.LVL149:
 1660              	.L119:
 748:Core/Src/deca_device.c ****                 (DWT_DGC_SEL_CH9 << OTP_CFG_DGC_SEL_BIT_OFFSET) | OTP_CFG_DGC_KICK_BIT_MASK);
 1661              		.loc 1 748 9 is_stmt 1 view .LVU417
 1662 001c 4FF40153 		mov	r3, #8256
 1663 0020 6FF40052 		mvn	r2, #8192
 1664 0024 0021     		movs	r1, #0
 1665 0026 0248     		ldr	r0, .L120
 1666              	.LVL150:
 748:Core/Src/deca_device.c ****                 (DWT_DGC_SEL_CH9 << OTP_CFG_DGC_SEL_BIT_OFFSET) | OTP_CFG_DGC_KICK_BIT_MASK);
 1667              		.loc 1 748 9 is_stmt 0 view .LVU418
 1668 0028 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1669              	.LVL151:
ARM GAS  /tmp/cctZ3fzX.s 			page 119


 751:Core/Src/deca_device.c **** 
 1670              		.loc 1 751 1 view .LVU419
 1671 002c EDE7     		b	.L114
 1672              	.L121:
 1673 002e 00BF     		.align	2
 1674              	.L120:
 1675 0030 08000B00 		.word	720904
 1676              		.cfi_endproc
 1677              	.LFE20:
 1679              		.section	.text.dwt_enable_rf_tx,"ax",%progbits
 1680              		.align	1
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1684              		.fpu fpv4-sp-d16
 1686              	dwt_enable_rf_tx:
 1687              	.LVL152:
 1688              	.LFB116:
4187:Core/Src/deca_device.c ****     //Turn on TX LDOs
 1689              		.loc 1 4187 1 is_stmt 1 view -0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
4187:Core/Src/deca_device.c ****     //Turn on TX LDOs
 1693              		.loc 1 4187 1 is_stmt 0 view .LVU421
 1694 0000 70B5     		push	{r4, r5, r6, lr}
 1695              		.cfi_def_cfa_offset 16
 1696              		.cfi_offset 4, -16
 1697              		.cfi_offset 5, -12
 1698              		.cfi_offset 6, -8
 1699              		.cfi_offset 14, -4
 1700 0002 0546     		mov	r5, r0
 1701 0004 0C46     		mov	r4, r1
4189:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDHVTX_EN_BIT_MASK));
 1702              		.loc 1 4189 5 is_stmt 1 view .LVU422
 1703 0006 164E     		ldr	r6, .L129
 1704 0008 4FF00823 		mov	r3, #134219776
 1705 000c 4FF0FF32 		mov	r2, #-1
 1706 0010 0021     		movs	r1, #0
 1707              	.LVL153:
4189:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDHVTX_EN_BIT_MASK));
 1708              		.loc 1 4189 5 is_stmt 0 view .LVU423
 1709 0012 3046     		mov	r0, r6
 1710              	.LVL154:
4189:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDHVTX_EN_BIT_MASK));
 1711              		.loc 1 4189 5 view .LVU424
 1712 0014 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1713              	.LVL155:
4191:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDTX1_VREF_BIT_MASK |
 1714              		.loc 1 4191 5 is_stmt 1 view .LVU425
 1715 0018 4FF06013 		mov	r3, #6291552
 1716 001c 4FF0FF32 		mov	r2, #-1
 1717 0020 0021     		movs	r1, #0
 1718 0022 3046     		mov	r0, r6
 1719 0024 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1720              	.LVL156:
4197:Core/Src/deca_device.c ****     {
ARM GAS  /tmp/cctZ3fzX.s 			page 120


 1721              		.loc 1 4197 5 view .LVU426
4197:Core/Src/deca_device.c ****     {
 1722              		.loc 1 4197 8 is_stmt 0 view .LVU427
 1723 0028 052D     		cmp	r5, #5
 1724 002a 09D0     		beq	.L127
4205:Core/Src/deca_device.c ****             | RF_ENABLE_TX_EN_BIT_MASK
 1725              		.loc 1 4205 9 is_stmt 1 view .LVU428
 1726 002c 0D4B     		ldr	r3, .L129+4
 1727 002e 4FF0FF32 		mov	r2, #-1
 1728 0032 0021     		movs	r1, #0
 1729 0034 4FF4E020 		mov	r0, #458752
 1730 0038 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1731              	.LVL157:
 1732              	.L124:
4210:Core/Src/deca_device.c ****     {
 1733              		.loc 1 4210 5 view .LVU429
4210:Core/Src/deca_device.c ****     {
 1734              		.loc 1 4210 8 is_stmt 0 view .LVU430
 1735 003c 4CB9     		cbnz	r4, .L128
 1736              	.L122:
4216:Core/Src/deca_device.c **** 
 1737              		.loc 1 4216 1 view .LVU431
 1738 003e 70BD     		pop	{r4, r5, r6, pc}
 1739              	.LVL158:
 1740              	.L127:
4199:Core/Src/deca_device.c ****             | RF_ENABLE_TX_CH5_BIT_MASK | RF_ENABLE_TX_EN_BIT_MASK
 1741              		.loc 1 4199 9 is_stmt 1 view .LVU432
 1742 0040 094B     		ldr	r3, .L129+8
 1743 0042 4FF0FF32 		mov	r2, #-1
 1744 0046 0021     		movs	r1, #0
 1745 0048 4FF4E020 		mov	r0, #458752
 1746 004c FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1747              	.LVL159:
 1748 0050 F4E7     		b	.L124
 1749              	.L128:
4213:Core/Src/deca_device.c ****     }
 1750              		.loc 1 4213 9 view .LVU433
 1751 0052 064A     		ldr	r2, .L129+12
 1752 0054 0021     		movs	r1, #0
 1753 0056 0648     		ldr	r0, .L129+16
 1754 0058 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 1755              	.LVL160:
4216:Core/Src/deca_device.c **** 
 1756              		.loc 1 4216 1 is_stmt 0 view .LVU434
 1757 005c EFE7     		b	.L122
 1758              	.L130:
 1759 005e 00BF     		.align	2
 1760              	.L129:
 1761 0060 48000700 		.word	458824
 1762 0064 001C0002 		.word	33561600
 1763 0068 003C0002 		.word	33569792
 1764 006c 00110101 		.word	16847104
 1765 0070 14000700 		.word	458772
 1766              		.cfi_endproc
 1767              	.LFE116:
 1769              		.section	.text.dwt_enable_rftx_blocks,"ax",%progbits
 1770              		.align	1
ARM GAS  /tmp/cctZ3fzX.s 			page 121


 1771              		.syntax unified
 1772              		.thumb
 1773              		.thumb_func
 1774              		.fpu fpv4-sp-d16
 1776              	dwt_enable_rftx_blocks:
 1777              	.LVL161:
 1778              	.LFB119:
4280:Core/Src/deca_device.c ****     if (channel == SEL_CHANNEL5)
 1779              		.loc 1 4280 1 is_stmt 1 view -0
 1780              		.cfi_startproc
 1781              		@ args = 0, pretend = 0, frame = 0
 1782              		@ frame_needed = 0, uses_anonymous_args = 0
4280:Core/Src/deca_device.c ****     if (channel == SEL_CHANNEL5)
 1783              		.loc 1 4280 1 is_stmt 0 view .LVU436
 1784 0000 08B5     		push	{r3, lr}
 1785              		.cfi_def_cfa_offset 8
 1786              		.cfi_offset 3, -8
 1787              		.cfi_offset 14, -4
4281:Core/Src/deca_device.c ****     {
 1788              		.loc 1 4281 5 is_stmt 1 view .LVU437
4281:Core/Src/deca_device.c ****     {
 1789              		.loc 1 4281 8 is_stmt 0 view .LVU438
 1790 0002 0528     		cmp	r0, #5
 1791 0004 02D0     		beq	.L135
4287:Core/Src/deca_device.c ****     {
 1792              		.loc 1 4287 10 is_stmt 1 view .LVU439
4287:Core/Src/deca_device.c ****     {
 1793              		.loc 1 4287 13 is_stmt 0 view .LVU440
 1794 0006 0928     		cmp	r0, #9
 1795 0008 08D0     		beq	.L136
 1796              	.LVL162:
 1797              	.L131:
4293:Core/Src/deca_device.c **** 
 1798              		.loc 1 4293 1 view .LVU441
 1799 000a 08BD     		pop	{r3, pc}
 1800              	.LVL163:
 1801              	.L135:
4283:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_CH5_BIT_MASK | RF_ENABLE_TX_EN_BIT_MASK
 1802              		.loc 1 4283 9 is_stmt 1 view .LVU442
 1803 000c 074B     		ldr	r3, .L137
 1804 000e 4FF0FF32 		mov	r2, #-1
 1805 0012 0021     		movs	r1, #0
 1806 0014 0648     		ldr	r0, .L137+4
 1807              	.LVL164:
4283:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_CH5_BIT_MASK | RF_ENABLE_TX_EN_BIT_MASK
 1808              		.loc 1 4283 9 is_stmt 0 view .LVU443
 1809 0016 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1810              	.LVL165:
 1811 001a F6E7     		b	.L131
 1812              	.LVL166:
 1813              	.L136:
4289:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_EN_BIT_MASK
 1814              		.loc 1 4289 9 is_stmt 1 view .LVU444
 1815 001c 054B     		ldr	r3, .L137+8
 1816 001e 4FF0FF32 		mov	r2, #-1
 1817 0022 0021     		movs	r1, #0
 1818 0024 0248     		ldr	r0, .L137+4
ARM GAS  /tmp/cctZ3fzX.s 			page 122


 1819              	.LVL167:
4289:Core/Src/deca_device.c ****                 | RF_ENABLE_TX_EN_BIT_MASK
 1820              		.loc 1 4289 9 is_stmt 0 view .LVU445
 1821 0026 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 1822              	.LVL168:
4293:Core/Src/deca_device.c **** 
 1823              		.loc 1 4293 1 view .LVU446
 1824 002a EEE7     		b	.L131
 1825              	.L138:
 1826              		.align	2
 1827              	.L137:
 1828 002c 003C0002 		.word	33569792
 1829 0030 04000700 		.word	458756
 1830 0034 001C0002 		.word	33561600
 1831              		.cfi_endproc
 1832              	.LFE119:
 1834              		.section	.text.dwt_modify16bitoffsetreg,"ax",%progbits
 1835              		.align	1
 1836              		.global	dwt_modify16bitoffsetreg
 1837              		.syntax unified
 1838              		.thumb
 1839              		.thumb_func
 1840              		.fpu fpv4-sp-d16
 1842              	dwt_modify16bitoffsetreg:
 1843              	.LVL169:
 1844              	.LFB13:
 549:Core/Src/deca_device.c ****     uint8_t buf[4];
 1845              		.loc 1 549 1 is_stmt 1 view -0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 8
 1848              		@ frame_needed = 0, uses_anonymous_args = 0
 549:Core/Src/deca_device.c ****     uint8_t buf[4];
 1849              		.loc 1 549 1 is_stmt 0 view .LVU448
 1850 0000 00B5     		push	{lr}
 1851              		.cfi_def_cfa_offset 4
 1852              		.cfi_offset 14, -4
 1853 0002 85B0     		sub	sp, sp, #20
 1854              		.cfi_def_cfa_offset 24
 550:Core/Src/deca_device.c ****     buf[0] = (uint8_t)_and;//       &0xFF;
 1855              		.loc 1 550 5 is_stmt 1 view .LVU449
 551:Core/Src/deca_device.c ****     buf[1] = (uint8_t)(_and>>8);//  &0xFF;
 1856              		.loc 1 551 5 view .LVU450
 551:Core/Src/deca_device.c ****     buf[1] = (uint8_t)(_and>>8);//  &0xFF;
 1857              		.loc 1 551 12 is_stmt 0 view .LVU451
 1858 0004 8DF80C20 		strb	r2, [sp, #12]
 552:Core/Src/deca_device.c ****     buf[2] = (uint8_t)_or;//        &0xFF;
 1859              		.loc 1 552 5 is_stmt 1 view .LVU452
 552:Core/Src/deca_device.c ****     buf[2] = (uint8_t)_or;//        &0xFF;
 1860              		.loc 1 552 14 is_stmt 0 view .LVU453
 1861 0008 120A     		lsrs	r2, r2, #8
 1862              	.LVL170:
 552:Core/Src/deca_device.c ****     buf[2] = (uint8_t)_or;//        &0xFF;
 1863              		.loc 1 552 12 view .LVU454
 1864 000a 8DF80D20 		strb	r2, [sp, #13]
 553:Core/Src/deca_device.c ****     buf[3] = (uint8_t)(_or>>8);//   &0xFF;
 1865              		.loc 1 553 5 is_stmt 1 view .LVU455
 553:Core/Src/deca_device.c ****     buf[3] = (uint8_t)(_or>>8);//   &0xFF;
ARM GAS  /tmp/cctZ3fzX.s 			page 123


 1866              		.loc 1 553 12 is_stmt 0 view .LVU456
 1867 000e 8DF80E30 		strb	r3, [sp, #14]
 554:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_16);
 1868              		.loc 1 554 5 is_stmt 1 view .LVU457
 554:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_16);
 1869              		.loc 1 554 14 is_stmt 0 view .LVU458
 1870 0012 1B0A     		lsrs	r3, r3, #8
 1871              	.LVL171:
 554:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf), buf, DW3000_SPI_AND_OR_16);
 1872              		.loc 1 554 12 view .LVU459
 1873 0014 8DF80F30 		strb	r3, [sp, #15]
 555:Core/Src/deca_device.c **** }
 1874              		.loc 1 555 5 is_stmt 1 view .LVU460
 1875 0018 48F20203 		movw	r3, #32770
 1876 001c 0093     		str	r3, [sp]
 1877 001e 03AB     		add	r3, sp, #12
 1878 0020 0422     		movs	r2, #4
 1879 0022 89B2     		uxth	r1, r1
 1880              	.LVL172:
 555:Core/Src/deca_device.c **** }
 1881              		.loc 1 555 5 is_stmt 0 view .LVU461
 1882 0024 FFF7FEFF 		bl	dwt_xfer3000
 1883              	.LVL173:
 556:Core/Src/deca_device.c **** 
 1884              		.loc 1 556 1 view .LVU462
 1885 0028 05B0     		add	sp, sp, #20
 1886              		.cfi_def_cfa_offset 4
 1887              		@ sp needed
 1888 002a 5DF804FB 		ldr	pc, [sp], #4
 1889              		.cfi_endproc
 1890              	.LFE13:
 1892              		.section	.text._dwt_prog_ldo_and_bias_tune,"ax",%progbits
 1893              		.align	1
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1897              		.fpu fpv4-sp-d16
 1899              	_dwt_prog_ldo_and_bias_tune:
 1900              	.LFB18:
 689:Core/Src/deca_device.c ****     dwt_or16bitoffsetreg(OTP_CFG_ID, 0, LDO_BIAS_KICK);
 1901              		.loc 1 689 1 is_stmt 1 view -0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905 0000 08B5     		push	{r3, lr}
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 3, -8
 1908              		.cfi_offset 14, -4
 690:Core/Src/deca_device.c ****     dwt_and_or16bitoffsetreg(BIAS_CTRL_ID, 0, (uint16_t)~BIAS_CTRL_BIAS_MASK, pdw3000local->bias_tu
 1909              		.loc 1 690 5 view .LVU464
 1910 0002 4FF4C073 		mov	r3, #384
 1911 0006 4FF6FF72 		movw	r2, #65535
 1912 000a 0021     		movs	r1, #0
 1913 000c 0648     		ldr	r0, .L143
 1914 000e FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 1915              	.LVL174:
 691:Core/Src/deca_device.c **** }
ARM GAS  /tmp/cctZ3fzX.s 			page 124


 1916              		.loc 1 691 5 view .LVU465
 1917 0012 064B     		ldr	r3, .L143+4
 1918 0014 1B68     		ldr	r3, [r3]
 1919 0016 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1920 0018 4FF6E072 		movw	r2, #65504
 1921 001c 0021     		movs	r1, #0
 1922 001e 0448     		ldr	r0, .L143+8
 1923 0020 FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 1924              	.LVL175:
 692:Core/Src/deca_device.c **** 
 1925              		.loc 1 692 1 is_stmt 0 view .LVU466
 1926 0024 08BD     		pop	{r3, pc}
 1927              	.L144:
 1928 0026 00BF     		.align	2
 1929              	.L143:
 1930 0028 08000B00 		.word	720904
 1931 002c 00000000 		.word	.LANCHOR2
 1932 0030 1F001100 		.word	1114143
 1933              		.cfi_endproc
 1934              	.LFE18:
 1936              		.section	.text.dwt_modify8bitoffsetreg,"ax",%progbits
 1937              		.align	1
 1938              		.global	dwt_modify8bitoffsetreg
 1939              		.syntax unified
 1940              		.thumb
 1941              		.thumb_func
 1942              		.fpu fpv4-sp-d16
 1944              	dwt_modify8bitoffsetreg:
 1945              	.LVL176:
 1946              	.LFB14:
 569:Core/Src/deca_device.c ****     uint8_t buf[2];
 1947              		.loc 1 569 1 is_stmt 1 view -0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 8
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 569:Core/Src/deca_device.c ****     uint8_t buf[2];
 1951              		.loc 1 569 1 is_stmt 0 view .LVU468
 1952 0000 00B5     		push	{lr}
 1953              		.cfi_def_cfa_offset 4
 1954              		.cfi_offset 14, -4
 1955 0002 85B0     		sub	sp, sp, #20
 1956              		.cfi_def_cfa_offset 24
 570:Core/Src/deca_device.c ****     buf[0] = _and;
 1957              		.loc 1 570 5 is_stmt 1 view .LVU469
 571:Core/Src/deca_device.c ****     buf[1] = _or;
 1958              		.loc 1 571 5 view .LVU470
 571:Core/Src/deca_device.c ****     buf[1] = _or;
 1959              		.loc 1 571 12 is_stmt 0 view .LVU471
 1960 0004 8DF80C20 		strb	r2, [sp, #12]
 572:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf),buf, DW3000_SPI_AND_OR_8);
 1961              		.loc 1 572 5 is_stmt 1 view .LVU472
 572:Core/Src/deca_device.c ****     dwt_xfer3000(regFileID, regOffset, sizeof(buf),buf, DW3000_SPI_AND_OR_8);
 1962              		.loc 1 572 12 is_stmt 0 view .LVU473
 1963 0008 8DF80D30 		strb	r3, [sp, #13]
 573:Core/Src/deca_device.c **** }
 1964              		.loc 1 573 5 is_stmt 1 view .LVU474
 1965 000c 48F20103 		movw	r3, #32769
ARM GAS  /tmp/cctZ3fzX.s 			page 125


 1966              	.LVL177:
 573:Core/Src/deca_device.c **** }
 1967              		.loc 1 573 5 is_stmt 0 view .LVU475
 1968 0010 0093     		str	r3, [sp]
 1969 0012 03AB     		add	r3, sp, #12
 1970 0014 0222     		movs	r2, #2
 1971              	.LVL178:
 573:Core/Src/deca_device.c **** }
 1972              		.loc 1 573 5 view .LVU476
 1973 0016 89B2     		uxth	r1, r1
 1974              	.LVL179:
 573:Core/Src/deca_device.c **** }
 1975              		.loc 1 573 5 view .LVU477
 1976 0018 FFF7FEFF 		bl	dwt_xfer3000
 1977              	.LVL180:
 574:Core/Src/deca_device.c **** 
 1978              		.loc 1 574 1 view .LVU478
 1979 001c 05B0     		add	sp, sp, #20
 1980              		.cfi_def_cfa_offset 4
 1981              		@ sp needed
 1982 001e 5DF804FB 		ldr	pc, [sp], #4
 1983              		.cfi_endproc
 1984              	.LFE14:
 1986              		.section	.text.dwt_enablespicrccheck,"ax",%progbits
 1987              		.align	1
 1988              		.global	dwt_enablespicrccheck
 1989              		.syntax unified
 1990              		.thumb
 1991              		.thumb_func
 1992              		.fpu fpv4-sp-d16
 1994              	dwt_enablespicrccheck:
 1995              	.LVL181:
 1996              	.LFB17:
 668:Core/Src/deca_device.c ****     if (crc_mode != DWT_SPI_CRC_MODE_NO) //enable CRC check in DW3000
 1997              		.loc 1 668 1 is_stmt 1 view -0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 0
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 668:Core/Src/deca_device.c ****     if (crc_mode != DWT_SPI_CRC_MODE_NO) //enable CRC check in DW3000
 2001              		.loc 1 668 1 is_stmt 0 view .LVU480
 2002 0000 38B5     		push	{r3, r4, r5, lr}
 2003              		.cfi_def_cfa_offset 16
 2004              		.cfi_offset 3, -16
 2005              		.cfi_offset 4, -12
 2006              		.cfi_offset 5, -8
 2007              		.cfi_offset 14, -4
 669:Core/Src/deca_device.c ****     {
 2008              		.loc 1 669 5 is_stmt 1 view .LVU481
 669:Core/Src/deca_device.c ****     {
 2009              		.loc 1 669 8 is_stmt 0 view .LVU482
 2010 0002 0546     		mov	r5, r0
 2011 0004 90B1     		cbz	r0, .L148
 2012 0006 0C46     		mov	r4, r1
 671:Core/Src/deca_device.c **** 
 2013              		.loc 1 671 9 is_stmt 1 view .LVU483
 2014 0008 4023     		movs	r3, #64
 2015 000a FF22     		movs	r2, #255
ARM GAS  /tmp/cctZ3fzX.s 			page 126


 2016 000c 0021     		movs	r1, #0
 2017              	.LVL182:
 671:Core/Src/deca_device.c **** 
 2018              		.loc 1 671 9 is_stmt 0 view .LVU484
 2019 000e 1020     		movs	r0, #16
 2020              	.LVL183:
 671:Core/Src/deca_device.c **** 
 2021              		.loc 1 671 9 view .LVU485
 2022 0010 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2023              	.LVL184:
 673:Core/Src/deca_device.c ****         {
 2024              		.loc 1 673 9 is_stmt 1 view .LVU486
 673:Core/Src/deca_device.c ****         {
 2025              		.loc 1 673 12 is_stmt 0 view .LVU487
 2026 0014 022D     		cmp	r5, #2
 2027 0016 05D0     		beq	.L152
 2028              	.L149:
 678:Core/Src/deca_device.c ****     }
 2029              		.loc 1 678 9 is_stmt 1 view .LVU488
 2030 0018 FFF7FEFF 		bl	_dwt_crc8init
 2031              	.LVL185:
 2032              	.L150:
 684:Core/Src/deca_device.c **** }
 2033              		.loc 1 684 5 view .LVU489
 684:Core/Src/deca_device.c **** }
 2034              		.loc 1 684 17 is_stmt 0 view .LVU490
 2035 001c 074B     		ldr	r3, .L153
 2036 001e 1B68     		ldr	r3, [r3]
 684:Core/Src/deca_device.c **** }
 2037              		.loc 1 684 26 view .LVU491
 2038 0020 1D75     		strb	r5, [r3, #20]
 685:Core/Src/deca_device.c **** 
 2039              		.loc 1 685 1 view .LVU492
 2040 0022 38BD     		pop	{r3, r4, r5, pc}
 2041              	.LVL186:
 2042              	.L152:
 675:Core/Src/deca_device.c ****         }
 2043              		.loc 1 675 13 is_stmt 1 view .LVU493
 675:Core/Src/deca_device.c ****         }
 2044              		.loc 1 675 25 is_stmt 0 view .LVU494
 2045 0024 054B     		ldr	r3, .L153
 2046 0026 1B68     		ldr	r3, [r3]
 675:Core/Src/deca_device.c ****         }
 2047              		.loc 1 675 38 view .LVU495
 2048 0028 5C62     		str	r4, [r3, #36]
 2049 002a F5E7     		b	.L149
 2050              	.LVL187:
 2051              	.L148:
 682:Core/Src/deca_device.c ****     }
 2052              		.loc 1 682 9 is_stmt 1 view .LVU496
 2053 002c 0023     		movs	r3, #0
 2054 002e BF22     		movs	r2, #191
 2055 0030 1946     		mov	r1, r3
 2056              	.LVL188:
 682:Core/Src/deca_device.c ****     }
 2057              		.loc 1 682 9 is_stmt 0 view .LVU497
 2058 0032 1020     		movs	r0, #16
ARM GAS  /tmp/cctZ3fzX.s 			page 127


 2059              	.LVL189:
 682:Core/Src/deca_device.c ****     }
 2060              		.loc 1 682 9 view .LVU498
 2061 0034 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2062              	.LVL190:
 2063 0038 F0E7     		b	.L150
 2064              	.L154:
 2065 003a 00BF     		.align	2
 2066              	.L153:
 2067 003c 00000000 		.word	.LANCHOR2
 2068              		.cfi_endproc
 2069              	.LFE17:
 2071              		.section	.text.dwt_setdwstate,"ax",%progbits
 2072              		.align	1
 2073              		.global	dwt_setdwstate
 2074              		.syntax unified
 2075              		.thumb
 2076              		.thumb_func
 2077              		.fpu fpv4-sp-d16
 2079              	dwt_setdwstate:
 2080              	.LVL191:
 2081              	.LFB22:
 865:Core/Src/deca_device.c ****     if (state == DWT_DW_IDLE) // Set the auto INIT2IDLE bit so that DW3000 enters IDLE mode before 
 2082              		.loc 1 865 1 is_stmt 1 view -0
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 0
 2085              		@ frame_needed = 0, uses_anonymous_args = 0
 865:Core/Src/deca_device.c ****     if (state == DWT_DW_IDLE) // Set the auto INIT2IDLE bit so that DW3000 enters IDLE mode before 
 2086              		.loc 1 865 1 is_stmt 0 view .LVU500
 2087 0000 10B5     		push	{r4, lr}
 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 4, -8
 2090              		.cfi_offset 14, -4
 866:Core/Src/deca_device.c ****     //NOTE: PLL should be configured prior to this, and the device should be in IDLE_RC (if the PLL
 2091              		.loc 1 866 5 is_stmt 1 view .LVU501
 866:Core/Src/deca_device.c ****     //NOTE: PLL should be configured prior to this, and the device should be in IDLE_RC (if the PLL
 2092              		.loc 1 866 8 is_stmt 0 view .LVU502
 2093 0002 0128     		cmp	r0, #1
 2094 0004 17D0     		beq	.L160
 873:Core/Src/deca_device.c ****     {
 2095              		.loc 1 873 10 is_stmt 1 view .LVU503
 873:Core/Src/deca_device.c ****     {
 2096              		.loc 1 873 12 is_stmt 0 view .LVU504
 2097 0006 0228     		cmp	r0, #2
 2098 0008 1FD0     		beq	.L161
 887:Core/Src/deca_device.c ****         //clear the auto INIT2IDLE bit and set FORCE2INIT
 2099              		.loc 1 887 9 is_stmt 1 view .LVU505
 2100 000a 0123     		movs	r3, #1
 2101 000c FF22     		movs	r2, #255
 2102 000e 0021     		movs	r1, #0
 2103 0010 1A48     		ldr	r0, .L162
 2104              	.LVL192:
 887:Core/Src/deca_device.c ****         //clear the auto INIT2IDLE bit and set FORCE2INIT
 2105              		.loc 1 887 9 is_stmt 0 view .LVU506
 2106 0012 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2107              	.LVL193:
 889:Core/Src/deca_device.c ****         dwt_and8bitoffsetreg(SEQ_CTRL_ID, 0x2, (uint8_t) ~(SEQ_CTRL_FORCE2INIT_BIT_MASK>>16));
ARM GAS  /tmp/cctZ3fzX.s 			page 128


 2108              		.loc 1 889 9 is_stmt 1 view .LVU507
 2109 0016 1A4C     		ldr	r4, .L162+4
 2110 0018 4FF40003 		mov	r3, #8388608
 2111 001c 6FF48072 		mvn	r2, #256
 2112 0020 0021     		movs	r1, #0
 2113 0022 2046     		mov	r0, r4
 2114 0024 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 2115              	.LVL194:
 890:Core/Src/deca_device.c ****     }
 2116              		.loc 1 890 9 view .LVU508
 2117 0028 0023     		movs	r3, #0
 2118 002a 7F22     		movs	r2, #127
 2119 002c 0221     		movs	r1, #2
 2120 002e 2046     		mov	r0, r4
 2121 0030 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2122              	.LVL195:
 2123              	.L155:
 892:Core/Src/deca_device.c **** 
 2124              		.loc 1 892 1 is_stmt 0 view .LVU509
 2125 0034 10BD     		pop	{r4, pc}
 2126              	.LVL196:
 2127              	.L160:
 870:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(SEQ_CTRL_ID, 0x01, SEQ_CTRL_AINIT2IDLE_BIT_MASK>>8);
 2128              		.loc 1 870 9 is_stmt 1 view .LVU510
 2129 0036 0520     		movs	r0, #5
 2130              	.LVL197:
 870:Core/Src/deca_device.c ****         dwt_or8bitoffsetreg(SEQ_CTRL_ID, 0x01, SEQ_CTRL_AINIT2IDLE_BIT_MASK>>8);
 2131              		.loc 1 870 9 is_stmt 0 view .LVU511
 2132 0038 FFF7FEFF 		bl	dwt_force_clocks
 2133              	.LVL198:
 871:Core/Src/deca_device.c ****     }
 2134              		.loc 1 871 9 is_stmt 1 view .LVU512
 2135 003c 0123     		movs	r3, #1
 2136 003e FF22     		movs	r2, #255
 2137 0040 1946     		mov	r1, r3
 2138 0042 0F48     		ldr	r0, .L162+4
 2139 0044 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2140              	.LVL199:
 2141 0048 F4E7     		b	.L155
 2142              	.LVL200:
 2143              	.L161:
 876:Core/Src/deca_device.c ****         //clear the auto INIT2IDLE bit and set FORCE2INIT
 2144              		.loc 1 876 9 view .LVU513
 2145 004a 0323     		movs	r3, #3
 2146 004c FF22     		movs	r2, #255
 2147 004e 0021     		movs	r1, #0
 2148 0050 0A48     		ldr	r0, .L162
 2149              	.LVL201:
 876:Core/Src/deca_device.c ****         //clear the auto INIT2IDLE bit and set FORCE2INIT
 2150              		.loc 1 876 9 is_stmt 0 view .LVU514
 2151 0052 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2152              	.LVL202:
 878:Core/Src/deca_device.c ****         //clear force bits (device will stay in IDLE_RC)
 2153              		.loc 1 878 9 is_stmt 1 view .LVU515
 2154 0056 0A4C     		ldr	r4, .L162+4
 2155 0058 4FF40003 		mov	r3, #8388608
 2156 005c 6FF48072 		mvn	r2, #256
ARM GAS  /tmp/cctZ3fzX.s 			page 129


 2157 0060 0021     		movs	r1, #0
 2158 0062 2046     		mov	r0, r4
 2159 0064 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 2160              	.LVL203:
 880:Core/Src/deca_device.c ****         //switch clock to auto
 2161              		.loc 1 880 9 view .LVU516
 2162 0068 0023     		movs	r3, #0
 2163 006a 7F22     		movs	r2, #127
 2164 006c 0221     		movs	r1, #2
 2165 006e 2046     		mov	r0, r4
 2166 0070 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2167              	.LVL204:
 882:Core/Src/deca_device.c ****     }
 2168              		.loc 1 882 9 view .LVU517
 2169 0074 0520     		movs	r0, #5
 2170 0076 FFF7FEFF 		bl	dwt_force_clocks
 2171              	.LVL205:
 2172 007a DBE7     		b	.L155
 2173              	.L163:
 2174              		.align	2
 2175              	.L162:
 2176 007c 04001100 		.word	1114116
 2177 0080 08001100 		.word	1114120
 2178              		.cfi_endproc
 2179              	.LFE22:
 2181              		.section	.text.dwt_enablegpioclocks,"ax",%progbits
 2182              		.align	1
 2183              		.global	dwt_enablegpioclocks
 2184              		.syntax unified
 2185              		.thumb
 2186              		.thumb_func
 2187              		.fpu fpv4-sp-d16
 2189              	dwt_enablegpioclocks:
 2190              	.LFB23:
 904:Core/Src/deca_device.c ****     dwt_or32bitoffsetreg(CLK_CTRL_ID, 0, CLK_CTRL_GPIO_CLK_EN_BIT_MASK);
 2191              		.loc 1 904 1 view -0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 0
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 2195 0000 08B5     		push	{r3, lr}
 2196              		.cfi_def_cfa_offset 8
 2197              		.cfi_offset 3, -8
 2198              		.cfi_offset 14, -4
 905:Core/Src/deca_device.c **** }
 2199              		.loc 1 905 5 view .LVU519
 2200 0002 4FF48033 		mov	r3, #65536
 2201 0006 4FF0FF32 		mov	r2, #-1
 2202 000a 0021     		movs	r1, #0
 2203 000c 0148     		ldr	r0, .L166
 2204 000e FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 2205              	.LVL206:
 906:Core/Src/deca_device.c **** 
 2206              		.loc 1 906 1 is_stmt 0 view .LVU520
 2207 0012 08BD     		pop	{r3, pc}
 2208              	.L167:
 2209              		.align	2
 2210              	.L166:
ARM GAS  /tmp/cctZ3fzX.s 			page 130


 2211 0014 04001100 		.word	1114116
 2212              		.cfi_endproc
 2213              	.LFE23:
 2215              		.section	.text.dwt_otprevision,"ax",%progbits
 2216              		.align	1
 2217              		.global	dwt_otprevision
 2218              		.syntax unified
 2219              		.thumb
 2220              		.thumb_func
 2221              		.fpu fpv4-sp-d16
 2223              	dwt_otprevision:
 2224              	.LFB24:
 920:Core/Src/deca_device.c ****     return pdw3000local->otprev ;
 2225              		.loc 1 920 1 is_stmt 1 view -0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 0, uses_anonymous_args = 0
 2229              		@ link register save eliminated.
 921:Core/Src/deca_device.c **** }
 2230              		.loc 1 921 5 view .LVU522
 921:Core/Src/deca_device.c **** }
 2231              		.loc 1 921 24 is_stmt 0 view .LVU523
 2232 0000 014B     		ldr	r3, .L169
 2233 0002 1B68     		ldr	r3, [r3]
 922:Core/Src/deca_device.c **** 
 2234              		.loc 1 922 1 view .LVU524
 2235 0004 587B     		ldrb	r0, [r3, #13]	@ zero_extendqisi2
 2236 0006 7047     		bx	lr
 2237              	.L170:
 2238              		.align	2
 2239              	.L169:
 2240 0008 00000000 		.word	.LANCHOR2
 2241              		.cfi_endproc
 2242              	.LFE24:
 2244              		.section	.text.dwt_setfinegraintxseq,"ax",%progbits
 2245              		.align	1
 2246              		.global	dwt_setfinegraintxseq
 2247              		.syntax unified
 2248              		.thumb
 2249              		.thumb_func
 2250              		.fpu fpv4-sp-d16
 2252              	dwt_setfinegraintxseq:
 2253              	.LVL207:
 2254              	.LFB25:
 935:Core/Src/deca_device.c ****     if (enable)
 2255              		.loc 1 935 1 is_stmt 1 view -0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 0
 2258              		@ frame_needed = 0, uses_anonymous_args = 0
 935:Core/Src/deca_device.c ****     if (enable)
 2259              		.loc 1 935 1 is_stmt 0 view .LVU526
 2260 0000 08B5     		push	{r3, lr}
 2261              		.cfi_def_cfa_offset 8
 2262              		.cfi_offset 3, -8
 2263              		.cfi_offset 14, -4
 936:Core/Src/deca_device.c ****     {
 2264              		.loc 1 936 5 is_stmt 1 view .LVU527
ARM GAS  /tmp/cctZ3fzX.s 			page 131


 936:Core/Src/deca_device.c ****     {
 2265              		.loc 1 936 8 is_stmt 0 view .LVU528
 2266 0002 28B1     		cbz	r0, .L172
 938:Core/Src/deca_device.c ****     }
 2267              		.loc 1 938 9 is_stmt 1 view .LVU529
 2268 0004 054A     		ldr	r2, .L175
 2269 0006 0221     		movs	r1, #2
 2270 0008 0548     		ldr	r0, .L175+4
 2271              	.LVL208:
 938:Core/Src/deca_device.c ****     }
 2272              		.loc 1 938 9 is_stmt 0 view .LVU530
 2273 000a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2274              	.LVL209:
 2275              	.L171:
 944:Core/Src/deca_device.c **** 
 2276              		.loc 1 944 1 view .LVU531
 2277 000e 08BD     		pop	{r3, pc}
 2278              	.LVL210:
 2279              	.L172:
 942:Core/Src/deca_device.c ****     }
 2280              		.loc 1 942 9 is_stmt 1 view .LVU532
 2281 0010 044A     		ldr	r2, .L175+8
 2282 0012 0221     		movs	r1, #2
 2283 0014 0248     		ldr	r0, .L175+4
 2284              	.LVL211:
 942:Core/Src/deca_device.c ****     }
 2285              		.loc 1 942 9 is_stmt 0 view .LVU533
 2286 0016 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2287              	.LVL212:
 944:Core/Src/deca_device.c **** 
 2288              		.loc 1 944 1 view .LVU534
 2289 001a F8E7     		b	.L171
 2290              	.L176:
 2291              		.align	2
 2292              	.L175:
 2293 001c 7488D204 		.word	80906356
 2294 0020 10001100 		.word	1114128
 2295 0024 7408D200 		.word	13764724
 2296              		.cfi_endproc
 2297              	.LFE25:
 2299              		.section	.text.dwt_setlnapamode,"ax",%progbits
 2300              		.align	1
 2301              		.global	dwt_setlnapamode
 2302              		.syntax unified
 2303              		.thumb
 2304              		.thumb_func
 2305              		.fpu fpv4-sp-d16
 2307              	dwt_setlnapamode:
 2308              	.LVL213:
 2309              	.LFB26:
 962:Core/Src/deca_device.c ****     uint32_t gpio_mode = dwt_read32bitreg(GPIO_MODE_ID);
 2310              		.loc 1 962 1 is_stmt 1 view -0
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 0
 2313              		@ frame_needed = 0, uses_anonymous_args = 0
 962:Core/Src/deca_device.c ****     uint32_t gpio_mode = dwt_read32bitreg(GPIO_MODE_ID);
 2314              		.loc 1 962 1 is_stmt 0 view .LVU536
ARM GAS  /tmp/cctZ3fzX.s 			page 132


 2315 0000 10B5     		push	{r4, lr}
 2316              		.cfi_def_cfa_offset 8
 2317              		.cfi_offset 4, -8
 2318              		.cfi_offset 14, -4
 2319 0002 0446     		mov	r4, r0
 963:Core/Src/deca_device.c ****     gpio_mode &= (~(GPIO_MODE_MSGP0_MODE_BIT_MASK | GPIO_MODE_MSGP1_MODE_BIT_MASK
 2320              		.loc 1 963 5 is_stmt 1 view .LVU537
 963:Core/Src/deca_device.c ****     gpio_mode &= (~(GPIO_MODE_MSGP0_MODE_BIT_MASK | GPIO_MODE_MSGP1_MODE_BIT_MASK
 2321              		.loc 1 963 26 is_stmt 0 view .LVU538
 2322 0004 0021     		movs	r1, #0
 2323 0006 4FF4A020 		mov	r0, #327680
 2324              	.LVL214:
 963:Core/Src/deca_device.c ****     gpio_mode &= (~(GPIO_MODE_MSGP0_MODE_BIT_MASK | GPIO_MODE_MSGP1_MODE_BIT_MASK
 2325              		.loc 1 963 26 view .LVU539
 2326 000a FFF7FEFF 		bl	dwt_read32bitoffsetreg
 2327              	.LVL215:
 964:Core/Src/deca_device.c ****             | GPIO_MODE_MSGP4_MODE_BIT_MASK | GPIO_MODE_MSGP5_MODE_BIT_MASK | GPIO_MODE_MSGP6_MODE_
 2328              		.loc 1 964 5 is_stmt 1 view .LVU540
 964:Core/Src/deca_device.c ****             | GPIO_MODE_MSGP4_MODE_BIT_MASK | GPIO_MODE_MSGP5_MODE_BIT_MASK | GPIO_MODE_MSGP6_MODE_
 2329              		.loc 1 964 15 is_stmt 0 view .LVU541
 2330 000e 0B4A     		ldr	r2, .L182
 2331 0010 0240     		ands	r2, r2, r0
 2332              	.LVL216:
 966:Core/Src/deca_device.c ****     {
 2333              		.loc 1 966 5 is_stmt 1 view .LVU542
 966:Core/Src/deca_device.c ****     {
 2334              		.loc 1 966 8 is_stmt 0 view .LVU543
 2335 0012 14F0010F 		tst	r4, #1
 2336 0016 01D0     		beq	.L178
 968:Core/Src/deca_device.c ****     }
 2337              		.loc 1 968 9 is_stmt 1 view .LVU544
 968:Core/Src/deca_device.c ****     }
 2338              		.loc 1 968 19 is_stmt 0 view .LVU545
 2339 0018 42F48022 		orr	r2, r2, #262144
 2340              	.LVL217:
 2341              	.L178:
 970:Core/Src/deca_device.c ****     {
 2342              		.loc 1 970 5 is_stmt 1 view .LVU546
 970:Core/Src/deca_device.c ****     {
 2343              		.loc 1 970 8 is_stmt 0 view .LVU547
 2344 001c 14F0020F 		tst	r4, #2
 2345 0020 01D0     		beq	.L179
 972:Core/Src/deca_device.c ****     }
 2346              		.loc 1 972 9 is_stmt 1 view .LVU548
 972:Core/Src/deca_device.c ****     }
 2347              		.loc 1 972 19 is_stmt 0 view .LVU549
 2348 0022 42F41042 		orr	r2, r2, #36864
 2349              	.LVL218:
 2350              	.L179:
 974:Core/Src/deca_device.c ****     {
 2351              		.loc 1 974 5 is_stmt 1 view .LVU550
 974:Core/Src/deca_device.c ****     {
 2352              		.loc 1 974 8 is_stmt 0 view .LVU551
 2353 0026 14F0040F 		tst	r4, #4
 2354 002a 01D0     		beq	.L180
 976:Core/Src/deca_device.c ****     }
 2355              		.loc 1 976 9 is_stmt 1 view .LVU552
ARM GAS  /tmp/cctZ3fzX.s 			page 133


 976:Core/Src/deca_device.c ****     }
 2356              		.loc 1 976 19 is_stmt 0 view .LVU553
 2357 002c 42F01202 		orr	r2, r2, #18
 2358              	.LVL219:
 2359              	.L180:
 979:Core/Src/deca_device.c **** }
 2360              		.loc 1 979 5 is_stmt 1 view .LVU554
 2361 0030 0021     		movs	r1, #0
 2362 0032 4FF4A020 		mov	r0, #327680
 2363 0036 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2364              	.LVL220:
 980:Core/Src/deca_device.c **** 
 2365              		.loc 1 980 1 is_stmt 0 view .LVU555
 2366 003a 10BD     		pop	{r4, pc}
 2367              	.LVL221:
 2368              	.L183:
 980:Core/Src/deca_device.c **** 
 2369              		.loc 1 980 1 view .LVU556
 2370              		.align	2
 2371              	.L182:
 2372 003c C00FE0FF 		.word	-2093120
 2373              		.cfi_endproc
 2374              	.LFE26:
 2376              		.section	.text.dwt_readpgdelay,"ax",%progbits
 2377              		.align	1
 2378              		.global	dwt_readpgdelay
 2379              		.syntax unified
 2380              		.thumb
 2381              		.thumb_func
 2382              		.fpu fpv4-sp-d16
 2384              	dwt_readpgdelay:
 2385              	.LFB27:
 992:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(TX_CTRL_HI_ID, 0);
 2386              		.loc 1 992 1 is_stmt 1 view -0
 2387              		.cfi_startproc
 2388              		@ args = 0, pretend = 0, frame = 0
 2389              		@ frame_needed = 0, uses_anonymous_args = 0
 2390 0000 08B5     		push	{r3, lr}
 2391              		.cfi_def_cfa_offset 8
 2392              		.cfi_offset 3, -8
 2393              		.cfi_offset 14, -4
 993:Core/Src/deca_device.c **** }
 2394              		.loc 1 993 5 view .LVU558
 993:Core/Src/deca_device.c **** }
 2395              		.loc 1 993 12 is_stmt 0 view .LVU559
 2396 0002 0021     		movs	r1, #0
 2397 0004 0148     		ldr	r0, .L186
 2398 0006 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 2399              	.LVL222:
 994:Core/Src/deca_device.c **** 
 2400              		.loc 1 994 1 view .LVU560
 2401 000a 08BD     		pop	{r3, pc}
 2402              	.L187:
 2403              		.align	2
 2404              	.L186:
 2405 000c 1C000700 		.word	458780
 2406              		.cfi_endproc
ARM GAS  /tmp/cctZ3fzX.s 			page 134


 2407              	.LFE27:
 2409              		.section	.text.dwt_geticrefvolt,"ax",%progbits
 2410              		.align	1
 2411              		.global	dwt_geticrefvolt
 2412              		.syntax unified
 2413              		.thumb
 2414              		.thumb_func
 2415              		.fpu fpv4-sp-d16
 2417              	dwt_geticrefvolt:
 2418              	.LFB28:
1008:Core/Src/deca_device.c ****     return pdw3000local->vBatP;
 2419              		.loc 1 1008 1 is_stmt 1 view -0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 0
 2422              		@ frame_needed = 0, uses_anonymous_args = 0
 2423              		@ link register save eliminated.
1009:Core/Src/deca_device.c **** }
 2424              		.loc 1 1009 5 view .LVU562
1009:Core/Src/deca_device.c **** }
 2425              		.loc 1 1009 24 is_stmt 0 view .LVU563
 2426 0000 014B     		ldr	r3, .L189
 2427 0002 1B68     		ldr	r3, [r3]
1010:Core/Src/deca_device.c **** 
 2428              		.loc 1 1010 1 view .LVU564
 2429 0004 987A     		ldrb	r0, [r3, #10]	@ zero_extendqisi2
 2430 0006 7047     		bx	lr
 2431              	.L190:
 2432              		.align	2
 2433              	.L189:
 2434 0008 00000000 		.word	.LANCHOR2
 2435              		.cfi_endproc
 2436              	.LFE28:
 2438              		.section	.text.dwt_geticreftemp,"ax",%progbits
 2439              		.align	1
 2440              		.global	dwt_geticreftemp
 2441              		.syntax unified
 2442              		.thumb
 2443              		.thumb_func
 2444              		.fpu fpv4-sp-d16
 2446              	dwt_geticreftemp:
 2447              	.LFB29:
1024:Core/Src/deca_device.c ****     return pdw3000local->tempP;
 2448              		.loc 1 1024 1 is_stmt 1 view -0
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 0
 2451              		@ frame_needed = 0, uses_anonymous_args = 0
 2452              		@ link register save eliminated.
1025:Core/Src/deca_device.c **** }
 2453              		.loc 1 1025 5 view .LVU566
1025:Core/Src/deca_device.c **** }
 2454              		.loc 1 1025 24 is_stmt 0 view .LVU567
 2455 0000 014B     		ldr	r3, .L192
 2456 0002 1B68     		ldr	r3, [r3]
1026:Core/Src/deca_device.c **** 
 2457              		.loc 1 1026 1 view .LVU568
 2458 0004 D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 2459 0006 7047     		bx	lr
ARM GAS  /tmp/cctZ3fzX.s 			page 135


 2460              	.L193:
 2461              		.align	2
 2462              	.L192:
 2463 0008 00000000 		.word	.LANCHOR2
 2464              		.cfi_endproc
 2465              	.LFE29:
 2467              		.section	.text.dwt_getpartid,"ax",%progbits
 2468              		.align	1
 2469              		.global	dwt_getpartid
 2470              		.syntax unified
 2471              		.thumb
 2472              		.thumb_func
 2473              		.fpu fpv4-sp-d16
 2475              	dwt_getpartid:
 2476              	.LFB30:
1040:Core/Src/deca_device.c ****     return pdw3000local->partID;
 2477              		.loc 1 1040 1 is_stmt 1 view -0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 0, uses_anonymous_args = 0
 2481              		@ link register save eliminated.
1041:Core/Src/deca_device.c **** }
 2482              		.loc 1 1041 5 view .LVU570
1041:Core/Src/deca_device.c **** }
 2483              		.loc 1 1041 24 is_stmt 0 view .LVU571
 2484 0000 014B     		ldr	r3, .L195
 2485 0002 1B68     		ldr	r3, [r3]
1042:Core/Src/deca_device.c **** 
 2486              		.loc 1 1042 1 view .LVU572
 2487 0004 1868     		ldr	r0, [r3]
 2488 0006 7047     		bx	lr
 2489              	.L196:
 2490              		.align	2
 2491              	.L195:
 2492 0008 00000000 		.word	.LANCHOR2
 2493              		.cfi_endproc
 2494              	.LFE30:
 2496              		.section	.text.dwt_getlotid,"ax",%progbits
 2497              		.align	1
 2498              		.global	dwt_getlotid
 2499              		.syntax unified
 2500              		.thumb
 2501              		.thumb_func
 2502              		.fpu fpv4-sp-d16
 2504              	dwt_getlotid:
 2505              	.LFB31:
1056:Core/Src/deca_device.c ****     return pdw3000local->lotID;
 2506              		.loc 1 1056 1 is_stmt 1 view -0
 2507              		.cfi_startproc
 2508              		@ args = 0, pretend = 0, frame = 0
 2509              		@ frame_needed = 0, uses_anonymous_args = 0
 2510              		@ link register save eliminated.
1057:Core/Src/deca_device.c **** }
 2511              		.loc 1 1057 5 view .LVU574
1057:Core/Src/deca_device.c **** }
 2512              		.loc 1 1057 24 is_stmt 0 view .LVU575
 2513 0000 014B     		ldr	r3, .L198
ARM GAS  /tmp/cctZ3fzX.s 			page 136


 2514 0002 1B68     		ldr	r3, [r3]
1058:Core/Src/deca_device.c **** 
 2515              		.loc 1 1058 1 view .LVU576
 2516 0004 5868     		ldr	r0, [r3, #4]
 2517 0006 7047     		bx	lr
 2518              	.L199:
 2519              		.align	2
 2520              	.L198:
 2521 0008 00000000 		.word	.LANCHOR2
 2522              		.cfi_endproc
 2523              	.LFE31:
 2525              		.section	.text.dwt_readdevid,"ax",%progbits
 2526              		.align	1
 2527              		.global	dwt_readdevid
 2528              		.syntax unified
 2529              		.thumb
 2530              		.thumb_func
 2531              		.fpu fpv4-sp-d16
 2533              	dwt_readdevid:
 2534              	.LFB32:
1070:Core/Src/deca_device.c ****     return dwt_read32bitoffsetreg(DEV_ID_ID, 0);
 2535              		.loc 1 1070 1 is_stmt 1 view -0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 0
 2538              		@ frame_needed = 0, uses_anonymous_args = 0
 2539 0000 08B5     		push	{r3, lr}
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 3, -8
 2542              		.cfi_offset 14, -4
1071:Core/Src/deca_device.c **** }
 2543              		.loc 1 1071 5 view .LVU578
1071:Core/Src/deca_device.c **** }
 2544              		.loc 1 1071 12 is_stmt 0 view .LVU579
 2545 0002 0021     		movs	r1, #0
 2546 0004 0846     		mov	r0, r1
 2547 0006 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 2548              	.LVL223:
1072:Core/Src/deca_device.c **** 
 2549              		.loc 1 1072 1 view .LVU580
 2550 000a 08BD     		pop	{r3, pc}
 2551              		.cfi_endproc
 2552              	.LFE32:
 2554              		.section	.text.dwt_configurestskey,"ax",%progbits
 2555              		.align	1
 2556              		.global	dwt_configurestskey
 2557              		.syntax unified
 2558              		.thumb
 2559              		.thumb_func
 2560              		.fpu fpv4-sp-d16
 2562              	dwt_configurestskey:
 2563              	.LVL224:
 2564              	.LFB34:
1122:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY0_ID, pStsKey->key0);
 2565              		.loc 1 1122 1 is_stmt 1 view -0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 137


1122:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY0_ID, pStsKey->key0);
 2569              		.loc 1 1122 1 is_stmt 0 view .LVU582
 2570 0000 10B5     		push	{r4, lr}
 2571              		.cfi_def_cfa_offset 8
 2572              		.cfi_offset 4, -8
 2573              		.cfi_offset 14, -4
 2574 0002 0446     		mov	r4, r0
1123:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY1_ID, pStsKey->key1);
 2575              		.loc 1 1123 5 is_stmt 1 view .LVU583
 2576 0004 0268     		ldr	r2, [r0]
 2577 0006 0021     		movs	r1, #0
 2578 0008 0948     		ldr	r0, .L204
 2579              	.LVL225:
1123:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY1_ID, pStsKey->key1);
 2580              		.loc 1 1123 5 is_stmt 0 view .LVU584
 2581 000a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2582              	.LVL226:
1124:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY2_ID, pStsKey->key2);
 2583              		.loc 1 1124 5 is_stmt 1 view .LVU585
 2584 000e 6268     		ldr	r2, [r4, #4]
 2585 0010 0021     		movs	r1, #0
 2586 0012 0848     		ldr	r0, .L204+4
 2587 0014 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2588              	.LVL227:
1125:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_KEY3_ID, pStsKey->key3);
 2589              		.loc 1 1125 5 view .LVU586
 2590 0018 A268     		ldr	r2, [r4, #8]
 2591 001a 0021     		movs	r1, #0
 2592 001c 0648     		ldr	r0, .L204+8
 2593 001e FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2594              	.LVL228:
1126:Core/Src/deca_device.c **** }
 2595              		.loc 1 1126 5 view .LVU587
 2596 0022 E268     		ldr	r2, [r4, #12]
 2597 0024 0021     		movs	r1, #0
 2598 0026 0548     		ldr	r0, .L204+12
 2599 0028 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2600              	.LVL229:
1127:Core/Src/deca_device.c **** 
 2601              		.loc 1 1127 1 is_stmt 0 view .LVU588
 2602 002c 10BD     		pop	{r4, pc}
 2603              	.LVL230:
 2604              	.L205:
1127:Core/Src/deca_device.c **** 
 2605              		.loc 1 1127 1 view .LVU589
 2606 002e 00BF     		.align	2
 2607              	.L204:
 2608 0030 0C000200 		.word	131084
 2609 0034 10000200 		.word	131088
 2610 0038 14000200 		.word	131092
 2611 003c 18000200 		.word	131096
 2612              		.cfi_endproc
 2613              	.LFE34:
 2615              		.section	.text.dwt_configurestsiv,"ax",%progbits
 2616              		.align	1
 2617              		.global	dwt_configurestsiv
 2618              		.syntax unified
ARM GAS  /tmp/cctZ3fzX.s 			page 138


 2619              		.thumb
 2620              		.thumb_func
 2621              		.fpu fpv4-sp-d16
 2623              	dwt_configurestsiv:
 2624              	.LVL231:
 2625              	.LFB35:
1140:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV0_ID, pStsIv->iv0);
 2626              		.loc 1 1140 1 is_stmt 1 view -0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 0, uses_anonymous_args = 0
1140:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV0_ID, pStsIv->iv0);
 2630              		.loc 1 1140 1 is_stmt 0 view .LVU591
 2631 0000 10B5     		push	{r4, lr}
 2632              		.cfi_def_cfa_offset 8
 2633              		.cfi_offset 4, -8
 2634              		.cfi_offset 14, -4
 2635 0002 0446     		mov	r4, r0
1141:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV1_ID, pStsIv->iv1);
 2636              		.loc 1 1141 5 is_stmt 1 view .LVU592
 2637 0004 0268     		ldr	r2, [r0]
 2638 0006 0021     		movs	r1, #0
 2639 0008 0948     		ldr	r0, .L208
 2640              	.LVL232:
1141:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV1_ID, pStsIv->iv1);
 2641              		.loc 1 1141 5 is_stmt 0 view .LVU593
 2642 000a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2643              	.LVL233:
1142:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV2_ID, pStsIv->iv2);
 2644              		.loc 1 1142 5 is_stmt 1 view .LVU594
 2645 000e 6268     		ldr	r2, [r4, #4]
 2646 0010 0021     		movs	r1, #0
 2647 0012 0848     		ldr	r0, .L208+4
 2648 0014 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2649              	.LVL234:
1143:Core/Src/deca_device.c ****     dwt_write32bitreg(STS_IV3_ID, pStsIv->iv3);
 2650              		.loc 1 1143 5 view .LVU595
 2651 0018 A268     		ldr	r2, [r4, #8]
 2652 001a 0021     		movs	r1, #0
 2653 001c 0648     		ldr	r0, .L208+8
 2654 001e FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2655              	.LVL235:
1144:Core/Src/deca_device.c **** }
 2656              		.loc 1 1144 5 view .LVU596
 2657 0022 E268     		ldr	r2, [r4, #12]
 2658 0024 0021     		movs	r1, #0
 2659 0026 0548     		ldr	r0, .L208+12
 2660 0028 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2661              	.LVL236:
1145:Core/Src/deca_device.c **** 
 2662              		.loc 1 1145 1 is_stmt 0 view .LVU597
 2663 002c 10BD     		pop	{r4, pc}
 2664              	.LVL237:
 2665              	.L209:
1145:Core/Src/deca_device.c **** 
 2666              		.loc 1 1145 1 view .LVU598
 2667 002e 00BF     		.align	2
ARM GAS  /tmp/cctZ3fzX.s 			page 139


 2668              	.L208:
 2669 0030 1C000200 		.word	131100
 2670 0034 20000200 		.word	131104
 2671 0038 24000200 		.word	131108
 2672 003c 28000200 		.word	131112
 2673              		.cfi_endproc
 2674              	.LFE35:
 2676              		.section	.text.dwt_configurestsloadiv,"ax",%progbits
 2677              		.align	1
 2678              		.global	dwt_configurestsloadiv
 2679              		.syntax unified
 2680              		.thumb
 2681              		.thumb_func
 2682              		.fpu fpv4-sp-d16
 2684              	dwt_configurestsloadiv:
 2685              	.LFB36:
1157:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(STS_CTRL_ID, 0, STS_CTRL_LOAD_IV_BIT_MASK);
 2686              		.loc 1 1157 1 is_stmt 1 view -0
 2687              		.cfi_startproc
 2688              		@ args = 0, pretend = 0, frame = 0
 2689              		@ frame_needed = 0, uses_anonymous_args = 0
 2690 0000 08B5     		push	{r3, lr}
 2691              		.cfi_def_cfa_offset 8
 2692              		.cfi_offset 3, -8
 2693              		.cfi_offset 14, -4
1158:Core/Src/deca_device.c **** }
 2694              		.loc 1 1158 5 view .LVU600
 2695 0002 0123     		movs	r3, #1
 2696 0004 FF22     		movs	r2, #255
 2697 0006 0021     		movs	r1, #0
 2698 0008 0148     		ldr	r0, .L212
 2699 000a FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 2700              	.LVL238:
1159:Core/Src/deca_device.c **** 
 2701              		.loc 1 1159 1 is_stmt 0 view .LVU601
 2702 000e 08BD     		pop	{r3, pc}
 2703              	.L213:
 2704              		.align	2
 2705              	.L212:
 2706 0010 04000200 		.word	131076
 2707              		.cfi_endproc
 2708              	.LFE36:
 2710              		.section	.text.dwt_configmrxlut,"ax",%progbits
 2711              		.align	1
 2712              		.global	dwt_configmrxlut
 2713              		.syntax unified
 2714              		.thumb
 2715              		.thumb_func
 2716              		.fpu fpv4-sp-d16
 2718              	dwt_configmrxlut:
 2719              	.LVL239:
 2720              	.LFB38:
1192:Core/Src/deca_device.c **** 	uint32_t lut0, lut1, lut2, lut3, lut4, lut5, lut6 = 0;
 2721              		.loc 1 1192 1 is_stmt 1 view -0
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 140


1192:Core/Src/deca_device.c **** 	uint32_t lut0, lut1, lut2, lut3, lut4, lut5, lut6 = 0;
 2725              		.loc 1 1192 1 is_stmt 0 view .LVU603
 2726 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2727              		.cfi_def_cfa_offset 32
 2728              		.cfi_offset 3, -32
 2729              		.cfi_offset 4, -28
 2730              		.cfi_offset 5, -24
 2731              		.cfi_offset 6, -20
 2732              		.cfi_offset 7, -16
 2733              		.cfi_offset 8, -12
 2734              		.cfi_offset 9, -8
 2735              		.cfi_offset 14, -4
1193:Core/Src/deca_device.c **** 
 2736              		.loc 1 1193 2 is_stmt 1 view .LVU604
 2737              	.LVL240:
1195:Core/Src/deca_device.c ****     {
 2738              		.loc 1 1195 5 view .LVU605
1195:Core/Src/deca_device.c ****     {
 2739              		.loc 1 1195 8 is_stmt 0 view .LVU606
 2740 0004 0528     		cmp	r0, #5
 2741 0006 36D0     		beq	.L218
1213:Core/Src/deca_device.c ****     }
 2742              		.loc 1 1213 14 view .LVU607
 2743 0008 204C     		ldr	r4, .L219
1212:Core/Src/deca_device.c ****         lut6 = (uint32_t)CH9_DGC_LUT_6;
 2744              		.loc 1 1212 14 view .LVU608
 2745 000a 2546     		mov	r5, r4
1211:Core/Src/deca_device.c ****         lut5 = (uint32_t)CH9_DGC_LUT_5;
 2746              		.loc 1 1211 14 view .LVU609
 2747 000c 204E     		ldr	r6, .L219+4
1210:Core/Src/deca_device.c ****         lut4 = (uint32_t)CH9_DGC_LUT_4;
 2748              		.loc 1 1210 14 view .LVU610
 2749 000e 214F     		ldr	r7, .L219+8
1209:Core/Src/deca_device.c ****         lut3 = (uint32_t)CH9_DGC_LUT_3;
 2750              		.loc 1 1209 14 view .LVU611
 2751 0010 DFF8C880 		ldr	r8, .L219+80
1208:Core/Src/deca_device.c ****         lut2 = (uint32_t)CH9_DGC_LUT_2;
 2752              		.loc 1 1208 14 view .LVU612
 2753 0014 DFF8C890 		ldr	r9, .L219+84
1207:Core/Src/deca_device.c ****         lut1 = (uint32_t)CH9_DGC_LUT_1;
 2754              		.loc 1 1207 14 view .LVU613
 2755 0018 1F4A     		ldr	r2, .L219+12
 2756              	.L215:
 2757              	.LVL241:
1215:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_1_CFG_ID, 0x0, lut1);
 2758              		.loc 1 1215 5 is_stmt 1 view .LVU614
 2759 001a 0021     		movs	r1, #0
 2760 001c 1F48     		ldr	r0, .L219+16
 2761              	.LVL242:
1215:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_1_CFG_ID, 0x0, lut1);
 2762              		.loc 1 1215 5 is_stmt 0 view .LVU615
 2763 001e FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2764              	.LVL243:
1216:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_2_CFG_ID, 0x0, lut2);
 2765              		.loc 1 1216 5 is_stmt 1 view .LVU616
 2766 0022 4A46     		mov	r2, r9
 2767 0024 0021     		movs	r1, #0
ARM GAS  /tmp/cctZ3fzX.s 			page 141


 2768 0026 1E48     		ldr	r0, .L219+20
 2769 0028 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2770              	.LVL244:
1217:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_3_CFG_ID, 0x0, lut3);
 2771              		.loc 1 1217 5 view .LVU617
 2772 002c 4246     		mov	r2, r8
 2773 002e 0021     		movs	r1, #0
 2774 0030 1C48     		ldr	r0, .L219+24
 2775 0032 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2776              	.LVL245:
1218:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_4_CFG_ID, 0x0, lut4);
 2777              		.loc 1 1218 5 view .LVU618
 2778 0036 3A46     		mov	r2, r7
 2779 0038 0021     		movs	r1, #0
 2780 003a 1B48     		ldr	r0, .L219+28
 2781 003c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2782              	.LVL246:
1219:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_5_CFG_ID, 0x0, lut5);
 2783              		.loc 1 1219 5 view .LVU619
 2784 0040 3246     		mov	r2, r6
 2785 0042 0021     		movs	r1, #0
 2786 0044 1948     		ldr	r0, .L219+32
 2787 0046 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2788              	.LVL247:
1220:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_LUT_6_CFG_ID, 0x0, lut6);
 2789              		.loc 1 1220 5 view .LVU620
 2790 004a 2A46     		mov	r2, r5
 2791 004c 0021     		movs	r1, #0
 2792 004e 1848     		ldr	r0, .L219+36
 2793 0050 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2794              	.LVL248:
1221:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_CFG0_ID, 0x0, DWT_DGC_CFG0);
 2795              		.loc 1 1221 5 view .LVU621
 2796 0054 2246     		mov	r2, r4
 2797 0056 0021     		movs	r1, #0
 2798 0058 1648     		ldr	r0, .L219+40
 2799 005a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2800              	.LVL249:
1222:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DGC_CFG1_ID, 0x0, DWT_DGC_CFG1);
 2801              		.loc 1 1222 5 view .LVU622
 2802 005e 164A     		ldr	r2, .L219+44
 2803 0060 0021     		movs	r1, #0
 2804 0062 1648     		ldr	r0, .L219+48
 2805 0064 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2806              	.LVL250:
1223:Core/Src/deca_device.c **** }
 2807              		.loc 1 1223 5 view .LVU623
 2808 0068 154A     		ldr	r2, .L219+52
 2809 006a 0021     		movs	r1, #0
 2810 006c 1548     		ldr	r0, .L219+56
 2811 006e FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2812              	.LVL251:
1224:Core/Src/deca_device.c **** 
 2813              		.loc 1 1224 1 is_stmt 0 view .LVU624
 2814 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2815              	.LVL252:
 2816              	.L218:
ARM GAS  /tmp/cctZ3fzX.s 			page 142


1203:Core/Src/deca_device.c ****     }
 2817              		.loc 1 1203 14 view .LVU625
 2818 0076 144C     		ldr	r4, .L219+60
1202:Core/Src/deca_device.c ****         lut6 = (uint32_t)CH5_DGC_LUT_6;
 2819              		.loc 1 1202 14 view .LVU626
 2820 0078 144D     		ldr	r5, .L219+64
1201:Core/Src/deca_device.c ****         lut5 = (uint32_t)CH5_DGC_LUT_5;
 2821              		.loc 1 1201 14 view .LVU627
 2822 007a 154E     		ldr	r6, .L219+68
1200:Core/Src/deca_device.c ****         lut4 = (uint32_t)CH5_DGC_LUT_4;
 2823              		.loc 1 1200 14 view .LVU628
 2824 007c 154F     		ldr	r7, .L219+72
1199:Core/Src/deca_device.c ****         lut3 = (uint32_t)CH5_DGC_LUT_3;
 2825              		.loc 1 1199 14 view .LVU629
 2826 007e DFF86480 		ldr	r8, .L219+88
1198:Core/Src/deca_device.c ****         lut2 = (uint32_t)CH5_DGC_LUT_2;
 2827              		.loc 1 1198 14 view .LVU630
 2828 0082 DFF86490 		ldr	r9, .L219+92
1197:Core/Src/deca_device.c ****         lut1 = (uint32_t)CH5_DGC_LUT_1;
 2829              		.loc 1 1197 14 view .LVU631
 2830 0086 144A     		ldr	r2, .L219+76
 2831 0088 C7E7     		b	.L215
 2832              	.L220:
 2833 008a 00BF     		.align	2
 2834              	.L219:
 2835 008c B5AF0200 		.word	176053
 2836 0090 7DAF0200 		.word	175997
 2837 0094 3EAF0200 		.word	175934
 2838 0098 FEA80200 		.word	174334
 2839 009c 38000300 		.word	196664
 2840 00a0 3C000300 		.word	196668
 2841 00a4 40000300 		.word	196672
 2842 00a8 44000300 		.word	196676
 2843 00ac 48000300 		.word	196680
 2844 00b0 4C000300 		.word	196684
 2845 00b4 50000300 		.word	196688
 2846 00b8 40020010 		.word	268436032
 2847 00bc 1C000300 		.word	196636
 2848 00c0 89A46D1B 		.word	460170377
 2849 00c4 20000300 		.word	196640
 2850 00c8 F5CF0100 		.word	118773
 2851 00cc B5CF0100 		.word	118709
 2852 00d0 36CF0100 		.word	118582
 2853 00d4 7EC70100 		.word	116606
 2854 00d8 FDC00100 		.word	114941
 2855 00dc FEA50200 		.word	173566
 2856 00e0 36AC0200 		.word	175158
 2857 00e4 BEC60100 		.word	116414
 2858 00e8 3EC40100 		.word	115774
 2859              		.cfi_endproc
 2860              	.LFE38:
 2862              		.section	.text.dwt_restoreconfig,"ax",%progbits
 2863              		.align	1
 2864              		.global	dwt_restoreconfig
 2865              		.syntax unified
 2866              		.thumb
 2867              		.thumb_func
ARM GAS  /tmp/cctZ3fzX.s 			page 143


 2868              		.fpu fpv4-sp-d16
 2870              	dwt_restoreconfig:
 2871              	.LFB39:
1236:Core/Src/deca_device.c ****     uint8_t channel = 5;
 2872              		.loc 1 1236 1 is_stmt 1 view -0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 0
 2875              		@ frame_needed = 0, uses_anonymous_args = 0
 2876 0000 08B5     		push	{r3, lr}
 2877              		.cfi_def_cfa_offset 8
 2878              		.cfi_offset 3, -8
 2879              		.cfi_offset 14, -4
1237:Core/Src/deca_device.c ****     uint16_t chan_ctrl;
 2880              		.loc 1 1237 5 view .LVU633
 2881              	.LVL253:
1238:Core/Src/deca_device.c **** 
 2882              		.loc 1 1238 5 view .LVU634
1240:Core/Src/deca_device.c ****     {
 2883              		.loc 1 1240 5 view .LVU635
1240:Core/Src/deca_device.c ****     {
 2884              		.loc 1 1240 21 is_stmt 0 view .LVU636
 2885 0002 1A4B     		ldr	r3, .L230
 2886 0004 1B68     		ldr	r3, [r3]
 2887 0006 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
1240:Core/Src/deca_device.c ****     {
 2888              		.loc 1 1240 8 view .LVU637
 2889 0008 3BBB     		cbnz	r3, .L228
 2890              	.L222:
1244:Core/Src/deca_device.c ****     /*Restoring indirect access register B configuration as this is not preserved when device is in
 2891              		.loc 1 1244 5 is_stmt 1 view .LVU638
 2892 000a 1422     		movs	r2, #20
 2893 000c 0121     		movs	r1, #1
 2894 000e 1848     		ldr	r0, .L230+4
 2895 0010 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 2896              	.LVL254:
1247:Core/Src/deca_device.c ****     dwt_write32bitreg(ADDR_OFFSET_B_ID, BUF1_RX_FINFO & 0xffff);
 2897              		.loc 1 1247 5 view .LVU639
 2898 0014 1822     		movs	r2, #24
 2899 0016 0021     		movs	r1, #0
 2900 0018 1648     		ldr	r0, .L230+8
 2901 001a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2902              	.LVL255:
1248:Core/Src/deca_device.c **** 
 2903              		.loc 1 1248 5 view .LVU640
 2904 001e E822     		movs	r2, #232
 2905 0020 0021     		movs	r1, #0
 2906 0022 1548     		ldr	r0, .L230+12
 2907 0024 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 2908              	.LVL256:
1251:Core/Src/deca_device.c **** 
 2909              		.loc 1 1251 5 view .LVU641
 2910 0028 FFF7FEFF 		bl	_dwt_kick_ops_table_on_wakeup
 2911              	.LVL257:
1253:Core/Src/deca_device.c **** 
 2912              		.loc 1 1253 5 view .LVU642
1253:Core/Src/deca_device.c **** 
 2913              		.loc 1 1253 17 is_stmt 0 view .LVU643
ARM GAS  /tmp/cctZ3fzX.s 			page 144


 2914 002c 0021     		movs	r1, #0
 2915 002e 1348     		ldr	r0, .L230+16
 2916 0030 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 2917              	.LVL258:
1256:Core/Src/deca_device.c ****     {
 2918              		.loc 1 1256 5 is_stmt 1 view .LVU644
1256:Core/Src/deca_device.c ****     {
 2919              		.loc 1 1256 54 is_stmt 0 view .LVU645
 2920 0034 C0F3CF03 		ubfx	r3, r0, #3, #16
 2921 0038 03F0F803 		and	r3, r3, #248
1256:Core/Src/deca_device.c ****     {
 2922              		.loc 1 1256 90 view .LVU646
 2923 003c 093B     		subs	r3, r3, #9
1256:Core/Src/deca_device.c ****     {
 2924              		.loc 1 1256 7 view .LVU647
 2925 003e 0F2B     		cmp	r3, #15
 2926 0040 0AD8     		bhi	.L221
1258:Core/Src/deca_device.c ****         {
 2927              		.loc 1 1258 9 is_stmt 1 view .LVU648
1258:Core/Src/deca_device.c ****         {
 2928              		.loc 1 1258 12 is_stmt 0 view .LVU649
 2929 0042 10F0010F 		tst	r0, #1
 2930 0046 0BD1     		bne	.L226
1237:Core/Src/deca_device.c ****     uint16_t chan_ctrl;
 2931              		.loc 1 1237 13 view .LVU650
 2932 0048 0520     		movs	r0, #5
 2933              	.LVL259:
 2934              	.L224:
1264:Core/Src/deca_device.c ****         {
 2935              		.loc 1 1264 9 is_stmt 1 view .LVU651
1264:Core/Src/deca_device.c ****         {
 2936              		.loc 1 1264 25 is_stmt 0 view .LVU652
 2937 004a 084B     		ldr	r3, .L230
 2938 004c 1B68     		ldr	r3, [r3]
 2939 004e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
1264:Core/Src/deca_device.c ****         {
 2940              		.loc 1 1264 12 view .LVU653
 2941 0050 012B     		cmp	r3, #1
 2942 0052 07D0     		beq	.L229
1271:Core/Src/deca_device.c ****         }
 2943              		.loc 1 1271 13 is_stmt 1 view .LVU654
 2944 0054 FFF7FEFF 		bl	dwt_configmrxlut
 2945              	.LVL260:
 2946              	.L221:
1274:Core/Src/deca_device.c **** 
 2947              		.loc 1 1274 1 is_stmt 0 view .LVU655
 2948 0058 08BD     		pop	{r3, pc}
 2949              	.LVL261:
 2950              	.L228:
1242:Core/Src/deca_device.c ****     }
 2951              		.loc 1 1242 9 is_stmt 1 view .LVU656
 2952 005a FFF7FEFF 		bl	_dwt_prog_ldo_and_bias_tune
 2953              	.LVL262:
 2954 005e D4E7     		b	.L222
 2955              	.LVL263:
 2956              	.L226:
1260:Core/Src/deca_device.c ****         }
ARM GAS  /tmp/cctZ3fzX.s 			page 145


 2957              		.loc 1 1260 21 is_stmt 0 view .LVU657
 2958 0060 0920     		movs	r0, #9
 2959              	.LVL264:
1260:Core/Src/deca_device.c ****         }
 2960              		.loc 1 1260 21 view .LVU658
 2961 0062 F2E7     		b	.L224
 2962              	.LVL265:
 2963              	.L229:
1266:Core/Src/deca_device.c ****         }
 2964              		.loc 1 1266 13 is_stmt 1 view .LVU659
 2965 0064 FFF7FEFF 		bl	_dwt_kick_dgc_on_wakeup
 2966              	.LVL266:
1266:Core/Src/deca_device.c ****         }
 2967              		.loc 1 1266 13 is_stmt 0 view .LVU660
 2968 0068 F6E7     		b	.L221
 2969              	.L231:
 2970 006a 00BF     		.align	2
 2971              	.L230:
 2972 006c 00000000 		.word	.LANCHOR2
 2973 0070 50000700 		.word	458832
 2974 0074 0C001F00 		.word	2031628
 2975 0078 10001F00 		.word	2031632
 2976 007c 14000100 		.word	65556
 2977              		.cfi_endproc
 2978              	.LFE39:
 2980              		.section	.text.dwt_configurestsmode,"ax",%progbits
 2981              		.align	1
 2982              		.global	dwt_configurestsmode
 2983              		.syntax unified
 2984              		.thumb
 2985              		.thumb_func
 2986              		.fpu fpv4-sp-d16
 2988              	dwt_configurestsmode:
 2989              	.LVL267:
 2990              	.LFB40:
1287:Core/Src/deca_device.c **** 
 2991              		.loc 1 1287 1 is_stmt 1 view -0
 2992              		.cfi_startproc
 2993              		@ args = 0, pretend = 0, frame = 0
 2994              		@ frame_needed = 0, uses_anonymous_args = 0
1287:Core/Src/deca_device.c **** 
 2995              		.loc 1 1287 1 is_stmt 0 view .LVU662
 2996 0000 10B5     		push	{r4, lr}
 2997              		.cfi_def_cfa_offset 8
 2998              		.cfi_offset 4, -8
 2999              		.cfi_offset 14, -4
 3000 0002 0446     		mov	r4, r0
1289:Core/Src/deca_device.c **** 
 3001              		.loc 1 1289 5 is_stmt 1 view .LVU663
1289:Core/Src/deca_device.c **** 
 3002              		.loc 1 1289 17 is_stmt 0 view .LVU664
 3003 0004 0D4B     		ldr	r3, .L237
 3004 0006 1B68     		ldr	r3, [r3]
1289:Core/Src/deca_device.c **** 
 3005              		.loc 1 1289 29 view .LVU665
 3006 0008 5875     		strb	r0, [r3, #21]
1295:Core/Src/deca_device.c ****         ((uint16_t)stsMode & DWT_STS_CONFIG_MASK) << SYS_CFG_CP_SPC_BIT_OFFSET);
ARM GAS  /tmp/cctZ3fzX.s 			page 146


 3007              		.loc 1 1295 5 is_stmt 1 view .LVU666
1296:Core/Src/deca_device.c **** 
 3008              		.loc 1 1296 51 is_stmt 0 view .LVU667
 3009 000a 0303     		lsls	r3, r0, #12
1295:Core/Src/deca_device.c ****         ((uint16_t)stsMode & DWT_STS_CONFIG_MASK) << SYS_CFG_CP_SPC_BIT_OFFSET);
 3010              		.loc 1 1295 5 view .LVU668
 3011 000c 03F43043 		and	r3, r3, #45056
 3012 0010 6FF43042 		mvn	r2, #45056
 3013 0014 0021     		movs	r1, #0
 3014 0016 1020     		movs	r0, #16
 3015              	.LVL268:
1295:Core/Src/deca_device.c ****         ((uint16_t)stsMode & DWT_STS_CONFIG_MASK) << SYS_CFG_CP_SPC_BIT_OFFSET);
 3016              		.loc 1 1295 5 view .LVU669
 3017 0018 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 3018              	.LVL269:
1298:Core/Src/deca_device.c ****     {
 3019              		.loc 1 1298 5 is_stmt 1 view .LVU670
1298:Core/Src/deca_device.c ****     {
 3020              		.loc 1 1298 7 is_stmt 0 view .LVU671
 3021 001c 04F00304 		and	r4, r4, #3
 3022 0020 032C     		cmp	r4, #3
 3023 0022 05D0     		beq	.L236
1305:Core/Src/deca_device.c ****     }
 3024              		.loc 1 1305 9 is_stmt 1 view .LVU672
 3025 0024 064A     		ldr	r2, .L237+4
 3026 0026 0021     		movs	r1, #0
 3027 0028 0648     		ldr	r0, .L237+8
 3028 002a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3029              	.LVL270:
 3030              	.L232:
1307:Core/Src/deca_device.c **** 
 3031              		.loc 1 1307 1 is_stmt 0 view .LVU673
 3032 002e 10BD     		pop	{r4, pc}
 3033              	.L236:
1301:Core/Src/deca_device.c ****     }
 3034              		.loc 1 1301 9 is_stmt 1 view .LVU674
 3035 0030 054A     		ldr	r2, .L237+12
 3036 0032 0021     		movs	r1, #0
 3037 0034 0348     		ldr	r0, .L237+8
 3038 0036 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3039              	.LVL271:
 3040 003a F8E7     		b	.L232
 3041              	.L238:
 3042              		.align	2
 3043              	.L237:
 3044 003c 00000000 		.word	.LANCHOR2
 3045 0040 4C585FAF 		.word	-1352705972
 3046 0044 0C000600 		.word	393228
 3047 0048 CC355FAF 		.word	-1352714804
 3048              		.cfi_endproc
 3049              	.LFE40:
 3051              		.section	.text.dwt_run_pgfcal,"ax",%progbits
 3052              		.align	1
 3053              		.global	dwt_run_pgfcal
 3054              		.syntax unified
 3055              		.thumb
 3056              		.thumb_func
ARM GAS  /tmp/cctZ3fzX.s 			page 147


 3057              		.fpu fpv4-sp-d16
 3059              	dwt_run_pgfcal:
 3060              	.LFB43:
1612:Core/Src/deca_device.c ****     int result = DWT_SUCCESS;
 3061              		.loc 1 1612 1 view -0
 3062              		.cfi_startproc
 3063              		@ args = 0, pretend = 0, frame = 0
 3064              		@ frame_needed = 0, uses_anonymous_args = 0
 3065 0000 38B5     		push	{r3, r4, r5, lr}
 3066              		.cfi_def_cfa_offset 16
 3067              		.cfi_offset 3, -16
 3068              		.cfi_offset 4, -12
 3069              		.cfi_offset 5, -8
 3070              		.cfi_offset 14, -4
1613:Core/Src/deca_device.c ****     uint32_t    data;
 3071              		.loc 1 1613 5 view .LVU676
 3072              	.LVL272:
1614:Core/Src/deca_device.c ****     uint32_t    val = 0;
 3073              		.loc 1 1614 5 view .LVU677
1615:Core/Src/deca_device.c ****     uint8_t     cnt,flag;
 3074              		.loc 1 1615 5 view .LVU678
1616:Core/Src/deca_device.c ****     //put into cal mode
 3075              		.loc 1 1616 5 view .LVU679
1619:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(RX_CAL_CFG_ID, 0x0, data);
 3076              		.loc 1 1619 5 view .LVU680
1620:Core/Src/deca_device.c ****     // Trigger PGF Cal
 3077              		.loc 1 1620 5 view .LVU681
 3078 0002 264C     		ldr	r4, .L255
 3079 0004 264A     		ldr	r2, .L255+4
 3080 0006 0021     		movs	r1, #0
 3081 0008 2046     		mov	r0, r4
 3082 000a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3083              	.LVL273:
1622:Core/Src/deca_device.c ****     
 3084              		.loc 1 1622 5 view .LVU682
 3085 000e 1023     		movs	r3, #16
 3086 0010 FF22     		movs	r2, #255
 3087 0012 0021     		movs	r1, #0
 3088 0014 2046     		mov	r0, r4
 3089 0016 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 3090              	.LVL274:
1624:Core/Src/deca_device.c ****     {
 3091              		.loc 1 1624 5 view .LVU683
1624:Core/Src/deca_device.c ****     {
 3092              		.loc 1 1624 20 is_stmt 0 view .LVU684
 3093 001a 0024     		movs	r4, #0
1624:Core/Src/deca_device.c ****     {
 3094              		.loc 1 1624 5 view .LVU685
 3095 001c 01E0     		b	.L240
 3096              	.LVL275:
 3097              	.L252:
1624:Core/Src/deca_device.c ****     {
 3098              		.loc 1 1624 47 is_stmt 1 discriminator 2 view .LVU686
1624:Core/Src/deca_device.c ****     {
 3099              		.loc 1 1624 50 is_stmt 0 discriminator 2 view .LVU687
 3100 001e 0134     		adds	r4, r4, #1
 3101              	.LVL276:
ARM GAS  /tmp/cctZ3fzX.s 			page 148


1624:Core/Src/deca_device.c ****     {
 3102              		.loc 1 1624 50 discriminator 2 view .LVU688
 3103 0020 E4B2     		uxtb	r4, r4
 3104              	.LVL277:
 3105              	.L240:
1624:Core/Src/deca_device.c ****     {
 3106              		.loc 1 1624 23 is_stmt 1 discriminator 1 view .LVU689
1624:Core/Src/deca_device.c ****     {
 3107              		.loc 1 1624 5 is_stmt 0 discriminator 1 view .LVU690
 3108 0022 022C     		cmp	r4, #2
 3109 0024 0AD8     		bhi	.L251
1626:Core/Src/deca_device.c ****         if(dwt_read8bitoffsetreg(RX_CAL_STS_ID, 0x0) == 1)
 3110              		.loc 1 1626 9 is_stmt 1 view .LVU691
 3111 0026 1420     		movs	r0, #20
 3112 0028 FFF7FEFF 		bl	deca_usleep
 3113              	.LVL278:
1627:Core/Src/deca_device.c ****         {//PGF cal is complete
 3114              		.loc 1 1627 9 view .LVU692
1627:Core/Src/deca_device.c ****         {//PGF cal is complete
 3115              		.loc 1 1627 12 is_stmt 0 view .LVU693
 3116 002c 0021     		movs	r1, #0
 3117 002e 1D48     		ldr	r0, .L255+8
 3118 0030 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 3119              	.LVL279:
1627:Core/Src/deca_device.c ****         {//PGF cal is complete
 3120              		.loc 1 1627 11 view .LVU694
 3121 0034 0128     		cmp	r0, #1
 3122 0036 F2D1     		bne	.L252
1629:Core/Src/deca_device.c ****             break;
 3123              		.loc 1 1629 17 view .LVU695
 3124 0038 0023     		movs	r3, #0
 3125 003a 00E0     		b	.L241
 3126              	.L251:
1624:Core/Src/deca_device.c ****     {
 3127              		.loc 1 1624 14 view .LVU696
 3128 003c 0123     		movs	r3, #1
 3129              	.L241:
 3130              	.LVL280:
1633:Core/Src/deca_device.c ****     {
 3131              		.loc 1 1633 5 is_stmt 1 view .LVU697
1633:Core/Src/deca_device.c ****     {
 3132              		.loc 1 1633 8 is_stmt 0 view .LVU698
 3133 003e 1BBB     		cbnz	r3, .L247
1613:Core/Src/deca_device.c ****     uint32_t    data;
 3134              		.loc 1 1613 9 view .LVU699
 3135 0040 0025     		movs	r5, #0
 3136              	.L243:
 3137              	.LVL281:
1639:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(RX_CAL_STS_ID, 0x0, 1); //clear the status
 3138              		.loc 1 1639 5 is_stmt 1 view .LVU700
 3139 0042 164C     		ldr	r4, .L255
 3140              	.LVL282:
1639:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(RX_CAL_STS_ID, 0x0, 1); //clear the status
 3141              		.loc 1 1639 5 is_stmt 0 view .LVU701
 3142 0044 0022     		movs	r2, #0
 3143 0046 1146     		mov	r1, r2
 3144 0048 2046     		mov	r0, r4
ARM GAS  /tmp/cctZ3fzX.s 			page 149


 3145 004a FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3146              	.LVL283:
1640:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(RX_CAL_CFG_ID, 0x2, 0x1); //enable reading
 3147              		.loc 1 1640 5 is_stmt 1 view .LVU702
 3148 004e 0122     		movs	r2, #1
 3149 0050 0021     		movs	r1, #0
 3150 0052 1448     		ldr	r0, .L255+8
 3151 0054 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3152              	.LVL284:
1641:Core/Src/deca_device.c ****     val = dwt_read32bitoffsetreg(RX_CAL_RESI_ID, 0x0);
 3153              		.loc 1 1641 5 view .LVU703
 3154 0058 0123     		movs	r3, #1
 3155 005a FF22     		movs	r2, #255
 3156 005c 0221     		movs	r1, #2
 3157 005e 2046     		mov	r0, r4
 3158 0060 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 3159              	.LVL285:
1642:Core/Src/deca_device.c ****     if (val == ERR_RX_CAL_FAIL)
 3160              		.loc 1 1642 5 view .LVU704
1642:Core/Src/deca_device.c ****     if (val == ERR_RX_CAL_FAIL)
 3161              		.loc 1 1642 11 is_stmt 0 view .LVU705
 3162 0064 0021     		movs	r1, #0
 3163 0066 1048     		ldr	r0, .L255+12
 3164 0068 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 3165              	.LVL286:
1643:Core/Src/deca_device.c ****     {
 3166              		.loc 1 1643 5 is_stmt 1 view .LVU706
1643:Core/Src/deca_device.c ****     {
 3167              		.loc 1 1643 8 is_stmt 0 view .LVU707
 3168 006c 6FF06043 		mvn	r3, #-536870912
 3169 0070 9842     		cmp	r0, r3
 3170 0072 0CD0     		beq	.L253
 3171              	.LVL287:
 3172              	.L244:
1648:Core/Src/deca_device.c ****     if (val == ERR_RX_CAL_FAIL)
 3173              		.loc 1 1648 5 is_stmt 1 view .LVU708
1648:Core/Src/deca_device.c ****     if (val == ERR_RX_CAL_FAIL)
 3174              		.loc 1 1648 11 is_stmt 0 view .LVU709
 3175 0074 0021     		movs	r1, #0
 3176 0076 0D48     		ldr	r0, .L255+16
 3177              	.LVL288:
1648:Core/Src/deca_device.c ****     if (val == ERR_RX_CAL_FAIL)
 3178              		.loc 1 1648 11 view .LVU710
 3179 0078 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 3180              	.LVL289:
1649:Core/Src/deca_device.c ****     {
 3181              		.loc 1 1649 5 is_stmt 1 view .LVU711
1649:Core/Src/deca_device.c ****     {
 3182              		.loc 1 1649 8 is_stmt 0 view .LVU712
 3183 007c 6FF06043 		mvn	r3, #-536870912
 3184 0080 9842     		cmp	r0, r3
 3185 0082 07D0     		beq	.L254
 3186              	.LVL290:
 3187              	.L239:
1656:Core/Src/deca_device.c **** 
 3188              		.loc 1 1656 1 view .LVU713
 3189 0084 2846     		mov	r0, r5
ARM GAS  /tmp/cctZ3fzX.s 			page 150


 3190              	.LVL291:
1656:Core/Src/deca_device.c **** 
 3191              		.loc 1 1656 1 view .LVU714
 3192 0086 38BD     		pop	{r3, r4, r5, pc}
 3193              	.LVL292:
 3194              	.L247:
1635:Core/Src/deca_device.c ****     }
 3195              		.loc 1 1635 16 view .LVU715
 3196 0088 4FF0FF35 		mov	r5, #-1
 3197 008c D9E7     		b	.L243
 3198              	.LVL293:
 3199              	.L253:
1646:Core/Src/deca_device.c ****     }
 3200              		.loc 1 1646 16 view .LVU716
 3201 008e 4FF0FF35 		mov	r5, #-1
 3202              	.LVL294:
1646:Core/Src/deca_device.c ****     }
 3203              		.loc 1 1646 16 view .LVU717
 3204 0092 EFE7     		b	.L244
 3205              	.LVL295:
 3206              	.L254:
1652:Core/Src/deca_device.c ****     }
 3207              		.loc 1 1652 16 view .LVU718
 3208 0094 4FF0FF35 		mov	r5, #-1
 3209              	.LVL296:
1655:Core/Src/deca_device.c **** }
 3210              		.loc 1 1655 5 is_stmt 1 view .LVU719
1655:Core/Src/deca_device.c **** }
 3211              		.loc 1 1655 12 is_stmt 0 view .LVU720
 3212 0098 F4E7     		b	.L239
 3213              	.L256:
 3214 009a 00BF     		.align	2
 3215              	.L255:
 3216 009c 0C000400 		.word	262156
 3217 00a0 01000200 		.word	131073
 3218 00a4 20000400 		.word	262176
 3219 00a8 14000400 		.word	262164
 3220 00ac 1C000400 		.word	262172
 3221              		.cfi_endproc
 3222              	.LFE43:
 3224              		.section	.text.dwt_pgf_cal,"ax",%progbits
 3225              		.align	1
 3226              		.global	dwt_pgf_cal
 3227              		.syntax unified
 3228              		.thumb
 3229              		.thumb_func
 3230              		.fpu fpv4-sp-d16
 3232              	dwt_pgf_cal:
 3233              	.LVL297:
 3234              	.LFB42:
1576:Core/Src/deca_device.c ****     int temp;
 3235              		.loc 1 1576 1 is_stmt 1 view -0
 3236              		.cfi_startproc
 3237              		@ args = 0, pretend = 0, frame = 0
 3238              		@ frame_needed = 0, uses_anonymous_args = 0
1576:Core/Src/deca_device.c ****     int temp;
 3239              		.loc 1 1576 1 is_stmt 0 view .LVU722
ARM GAS  /tmp/cctZ3fzX.s 			page 151


 3240 0000 70B5     		push	{r4, r5, r6, lr}
 3241              		.cfi_def_cfa_offset 16
 3242              		.cfi_offset 4, -16
 3243              		.cfi_offset 5, -12
 3244              		.cfi_offset 6, -8
 3245              		.cfi_offset 14, -4
 3246 0002 0446     		mov	r4, r0
 3247 0004 0026     		movs	r6, #0
1577:Core/Src/deca_device.c ****     uint16_t val;
 3248              		.loc 1 1577 5 is_stmt 1 view .LVU723
1578:Core/Src/deca_device.c **** 
 3249              		.loc 1 1578 5 view .LVU724
1581:Core/Src/deca_device.c ****     {
 3250              		.loc 1 1581 5 view .LVU725
1581:Core/Src/deca_device.c ****     {
 3251              		.loc 1 1581 8 is_stmt 0 view .LVU726
 3252 0006 0128     		cmp	r0, #1
 3253 0008 06D0     		beq	.L261
 3254              	.LVL298:
 3255              	.L258:
1592:Core/Src/deca_device.c **** 
 3256              		.loc 1 1592 5 is_stmt 1 view .LVU727
1592:Core/Src/deca_device.c **** 
 3257              		.loc 1 1592 12 is_stmt 0 view .LVU728
 3258 000a FFF7FEFF 		bl	dwt_run_pgfcal
 3259              	.LVL299:
 3260 000e 0546     		mov	r5, r0
 3261              	.LVL300:
1595:Core/Src/deca_device.c ****     {
 3262              		.loc 1 1595 5 is_stmt 1 view .LVU729
1595:Core/Src/deca_device.c ****     {
 3263              		.loc 1 1595 8 is_stmt 0 view .LVU730
 3264 0010 012C     		cmp	r4, #1
 3265 0012 10D0     		beq	.L262
 3266              	.LVL301:
 3267              	.L257:
1600:Core/Src/deca_device.c **** 
 3268              		.loc 1 1600 1 view .LVU731
 3269 0014 2846     		mov	r0, r5
 3270 0016 70BD     		pop	{r4, r5, r6, pc}
 3271              	.LVL302:
 3272              	.L261:
1583:Core/Src/deca_device.c **** 
 3273              		.loc 1 1583 9 is_stmt 1 view .LVU732
1583:Core/Src/deca_device.c **** 
 3274              		.loc 1 1583 15 is_stmt 0 view .LVU733
 3275 0018 0A4D     		ldr	r5, .L263
 3276 001a 3146     		mov	r1, r6
 3277 001c 2846     		mov	r0, r5
 3278              	.LVL303:
1583:Core/Src/deca_device.c **** 
 3279              		.loc 1 1583 15 view .LVU734
 3280 001e FFF7FEFF 		bl	dwt_read16bitoffsetreg
 3281              	.LVL304:
 3282 0022 0646     		mov	r6, r0
 3283              	.LVL305:
1585:Core/Src/deca_device.c ****             LDO_CTRL_LDO_VDDIF2_EN_BIT_MASK |
ARM GAS  /tmp/cctZ3fzX.s 			page 152


 3284              		.loc 1 1585 9 is_stmt 1 view .LVU735
 3285 0024 40F20513 		movw	r3, #261
 3286 0028 4FF6FF72 		movw	r2, #65535
 3287 002c 0021     		movs	r1, #0
 3288 002e 2846     		mov	r0, r5
 3289 0030 FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 3290              	.LVL306:
 3291 0034 E9E7     		b	.L258
 3292              	.LVL307:
 3293              	.L262:
1597:Core/Src/deca_device.c ****     }
 3294              		.loc 1 1597 9 view .LVU736
 3295 0036 0023     		movs	r3, #0
 3296 0038 3246     		mov	r2, r6
 3297 003a 1946     		mov	r1, r3
 3298 003c 0148     		ldr	r0, .L263
 3299              	.LVL308:
1597:Core/Src/deca_device.c ****     }
 3300              		.loc 1 1597 9 is_stmt 0 view .LVU737
 3301 003e FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 3302              	.LVL309:
1599:Core/Src/deca_device.c **** }
 3303              		.loc 1 1599 5 is_stmt 1 view .LVU738
1599:Core/Src/deca_device.c **** }
 3304              		.loc 1 1599 12 is_stmt 0 view .LVU739
 3305 0042 E7E7     		b	.L257
 3306              	.L264:
 3307              		.align	2
 3308              	.L263:
 3309 0044 48000700 		.word	458824
 3310              		.cfi_endproc
 3311              	.LFE42:
 3313              		.section	.text.dwt_setrxantennadelay,"ax",%progbits
 3314              		.align	1
 3315              		.global	dwt_setrxantennadelay
 3316              		.syntax unified
 3317              		.thumb
 3318              		.thumb_func
 3319              		.fpu fpv4-sp-d16
 3321              	dwt_setrxantennadelay:
 3322              	.LVL310:
 3323              	.LFB44:
1670:Core/Src/deca_device.c ****     // Set the RX antenna delay for auto TX timestamp adjustment
 3324              		.loc 1 1670 1 is_stmt 1 view -0
 3325              		.cfi_startproc
 3326              		@ args = 0, pretend = 0, frame = 0
 3327              		@ frame_needed = 0, uses_anonymous_args = 0
1670:Core/Src/deca_device.c ****     // Set the RX antenna delay for auto TX timestamp adjustment
 3328              		.loc 1 1670 1 is_stmt 0 view .LVU741
 3329 0000 08B5     		push	{r3, lr}
 3330              		.cfi_def_cfa_offset 8
 3331              		.cfi_offset 3, -8
 3332              		.cfi_offset 14, -4
 3333 0002 0246     		mov	r2, r0
1672:Core/Src/deca_device.c **** }
 3334              		.loc 1 1672 5 is_stmt 1 view .LVU742
 3335 0004 0021     		movs	r1, #0
ARM GAS  /tmp/cctZ3fzX.s 			page 153


 3336 0006 4FF46020 		mov	r0, #917504
 3337              	.LVL311:
1672:Core/Src/deca_device.c **** }
 3338              		.loc 1 1672 5 is_stmt 0 view .LVU743
 3339 000a FFF7FEFF 		bl	dwt_write16bitoffsetreg
 3340              	.LVL312:
1673:Core/Src/deca_device.c **** 
 3341              		.loc 1 1673 1 view .LVU744
 3342 000e 08BD     		pop	{r3, pc}
 3343              		.cfi_endproc
 3344              	.LFE44:
 3346              		.section	.text.dwt_settxantennadelay,"ax",%progbits
 3347              		.align	1
 3348              		.global	dwt_settxantennadelay
 3349              		.syntax unified
 3350              		.thumb
 3351              		.thumb_func
 3352              		.fpu fpv4-sp-d16
 3354              	dwt_settxantennadelay:
 3355              	.LVL313:
 3356              	.LFB45:
1687:Core/Src/deca_device.c ****     // Set the TX antenna delay for auto TX timestamp adjustment
 3357              		.loc 1 1687 1 is_stmt 1 view -0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
1687:Core/Src/deca_device.c ****     // Set the TX antenna delay for auto TX timestamp adjustment
 3361              		.loc 1 1687 1 is_stmt 0 view .LVU746
 3362 0000 08B5     		push	{r3, lr}
 3363              		.cfi_def_cfa_offset 8
 3364              		.cfi_offset 3, -8
 3365              		.cfi_offset 14, -4
 3366 0002 0246     		mov	r2, r0
1689:Core/Src/deca_device.c **** }
 3367              		.loc 1 1689 5 is_stmt 1 view .LVU747
 3368 0004 0021     		movs	r1, #0
 3369 0006 0248     		ldr	r0, .L269
 3370              	.LVL314:
1689:Core/Src/deca_device.c **** }
 3371              		.loc 1 1689 5 is_stmt 0 view .LVU748
 3372 0008 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 3373              	.LVL315:
1690:Core/Src/deca_device.c **** 
 3374              		.loc 1 1690 1 view .LVU749
 3375 000c 08BD     		pop	{r3, pc}
 3376              	.L270:
 3377 000e 00BF     		.align	2
 3378              	.L269:
 3379 0010 04000100 		.word	65540
 3380              		.cfi_endproc
 3381              	.LFE45:
 3383              		.section	.text.dwt_writetxdata,"ax",%progbits
 3384              		.align	1
 3385              		.global	dwt_writetxdata
 3386              		.syntax unified
 3387              		.thumb
 3388              		.thumb_func
ARM GAS  /tmp/cctZ3fzX.s 			page 154


 3389              		.fpu fpv4-sp-d16
 3391              	dwt_writetxdata:
 3392              	.LVL316:
 3393              	.LFB46:
1712:Core/Src/deca_device.c **** #ifdef DWT_API_ERROR_CHECK
 3394              		.loc 1 1712 1 is_stmt 1 view -0
 3395              		.cfi_startproc
 3396              		@ args = 0, pretend = 0, frame = 0
 3397              		@ frame_needed = 0, uses_anonymous_args = 0
1719:Core/Src/deca_device.c ****     {
 3398              		.loc 1 1719 5 view .LVU751
1719:Core/Src/deca_device.c ****     {
 3399              		.loc 1 1719 25 is_stmt 0 view .LVU752
 3400 0000 1318     		adds	r3, r2, r0
1719:Core/Src/deca_device.c ****     {
 3401              		.loc 1 1719 8 view .LVU753
 3402 0002 B3F5806F 		cmp	r3, #1024
 3403 0006 20DA     		bge	.L275
1712:Core/Src/deca_device.c **** #ifdef DWT_API_ERROR_CHECK
 3404              		.loc 1 1712 1 view .LVU754
 3405 0008 70B5     		push	{r4, r5, r6, lr}
 3406              		.cfi_def_cfa_offset 16
 3407              		.cfi_offset 4, -16
 3408              		.cfi_offset 5, -12
 3409              		.cfi_offset 6, -8
 3410              		.cfi_offset 14, -4
 3411 000a 0546     		mov	r5, r0
 3412 000c 0E46     		mov	r6, r1
 3413 000e 1446     		mov	r4, r2
1721:Core/Src/deca_device.c ****         {
 3414              		.loc 1 1721 9 is_stmt 1 view .LVU755
1721:Core/Src/deca_device.c ****         {
 3415              		.loc 1 1721 11 is_stmt 0 view .LVU756
 3416 0010 7F2A     		cmp	r2, #127
 3417 0012 08D8     		bhi	.L273
1724:Core/Src/deca_device.c ****         }
 3418              		.loc 1 1724 13 is_stmt 1 view .LVU757
 3419 0014 0B46     		mov	r3, r1
 3420 0016 0246     		mov	r2, r0
 3421              	.LVL317:
1724:Core/Src/deca_device.c ****         }
 3422              		.loc 1 1724 13 is_stmt 0 view .LVU758
 3423 0018 2146     		mov	r1, r4
 3424              	.LVL318:
1724:Core/Src/deca_device.c ****         }
 3425              		.loc 1 1724 13 view .LVU759
 3426 001a 4FF4A010 		mov	r0, #1310720
 3427              	.LVL319:
1724:Core/Src/deca_device.c ****         }
 3428              		.loc 1 1724 13 view .LVU760
 3429 001e FFF7FEFF 		bl	dwt_writetodevice
 3430              	.LVL320:
 3431              	.L274:
1735:Core/Src/deca_device.c ****     }
 3432              		.loc 1 1735 9 is_stmt 1 view .LVU761
1735:Core/Src/deca_device.c ****     }
 3433              		.loc 1 1735 16 is_stmt 0 view .LVU762
ARM GAS  /tmp/cctZ3fzX.s 			page 155


 3434 0022 0020     		movs	r0, #0
1739:Core/Src/deca_device.c **** 
 3435              		.loc 1 1739 1 view .LVU763
 3436 0024 70BD     		pop	{r4, r5, r6, pc}
 3437              	.LVL321:
 3438              	.L273:
1729:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   txBufferOffset);
 3439              		.loc 1 1729 13 is_stmt 1 view .LVU764
 3440 0026 1422     		movs	r2, #20
 3441              	.LVL322:
1729:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   txBufferOffset);
 3442              		.loc 1 1729 13 is_stmt 0 view .LVU765
 3443 0028 0021     		movs	r1, #0
 3444              	.LVL323:
1729:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   txBufferOffset);
 3445              		.loc 1 1729 13 view .LVU766
 3446 002a 0948     		ldr	r0, .L280
 3447              	.LVL324:
1729:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   txBufferOffset);
 3448              		.loc 1 1729 13 view .LVU767
 3449 002c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3450              	.LVL325:
1730:Core/Src/deca_device.c **** 
 3451              		.loc 1 1730 13 is_stmt 1 view .LVU768
 3452 0030 2246     		mov	r2, r4
 3453 0032 0021     		movs	r1, #0
 3454 0034 0748     		ldr	r0, .L280+4
 3455 0036 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3456              	.LVL326:
1733:Core/Src/deca_device.c ****         }
 3457              		.loc 1 1733 13 view .LVU769
 3458 003a 3346     		mov	r3, r6
 3459 003c 2A46     		mov	r2, r5
 3460 003e 0021     		movs	r1, #0
 3461 0040 4FF4E810 		mov	r0, #1900544
 3462 0044 FFF7FEFF 		bl	dwt_writetodevice
 3463              	.LVL327:
 3464 0048 EBE7     		b	.L274
 3465              	.LVL328:
 3466              	.L275:
 3467              		.cfi_def_cfa_offset 0
 3468              		.cfi_restore 4
 3469              		.cfi_restore 5
 3470              		.cfi_restore 6
 3471              		.cfi_restore 14
1738:Core/Src/deca_device.c **** } // end dwt_writetxdata()
 3472              		.loc 1 1738 16 is_stmt 0 view .LVU770
 3473 004a 4FF0FF30 		mov	r0, #-1
 3474              	.LVL329:
1739:Core/Src/deca_device.c **** 
 3475              		.loc 1 1739 1 view .LVU771
 3476 004e 7047     		bx	lr
 3477              	.L281:
 3478              		.align	2
 3479              	.L280:
 3480 0050 04001F00 		.word	2031620
 3481 0054 08001F00 		.word	2031624
ARM GAS  /tmp/cctZ3fzX.s 			page 156


 3482              		.cfi_endproc
 3483              	.LFE46:
 3485              		.section	.text.dwt_writetxfctrl,"ax",%progbits
 3486              		.align	1
 3487              		.global	dwt_writetxfctrl
 3488              		.syntax unified
 3489              		.thumb
 3490              		.thumb_func
 3491              		.fpu fpv4-sp-d16
 3493              	dwt_writetxfctrl:
 3494              	.LVL330:
 3495              	.LFB47:
1757:Core/Src/deca_device.c ****     uint32_t reg32;
 3496              		.loc 1 1757 1 is_stmt 1 view -0
 3497              		.cfi_startproc
 3498              		@ args = 0, pretend = 0, frame = 0
 3499              		@ frame_needed = 0, uses_anonymous_args = 0
1757:Core/Src/deca_device.c ****     uint32_t reg32;
 3500              		.loc 1 1757 1 is_stmt 0 view .LVU773
 3501 0000 08B5     		push	{r3, lr}
 3502              		.cfi_def_cfa_offset 8
 3503              		.cfi_offset 3, -8
 3504              		.cfi_offset 14, -4
1758:Core/Src/deca_device.c **** #ifdef DWT_API_ERROR_CHECK
 3505              		.loc 1 1758 5 is_stmt 1 view .LVU774
1766:Core/Src/deca_device.c ****     {
 3506              		.loc 1 1766 5 view .LVU775
1766:Core/Src/deca_device.c ****     {
 3507              		.loc 1 1766 7 is_stmt 0 view .LVU776
 3508 0002 7F29     		cmp	r1, #127
 3509 0004 09D8     		bhi	.L283
1769:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXB_OFFSET_BIT_MASK | TX_FCTRL_TR_BIT_M
 3510              		.loc 1 1769 9 is_stmt 1 view .LVU777
1769:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXB_OFFSET_BIT_MASK | TX_FCTRL_TR_BIT_M
 3511              		.loc 1 1769 31 is_stmt 0 view .LVU778
 3512 0006 40EA0140 		orr	r0, r0, r1, lsl #16
 3513              	.LVL331:
1770:Core/Src/deca_device.c ****     }
 3514              		.loc 1 1770 9 is_stmt 1 view .LVU779
 3515 000a 40EAC223 		orr	r3, r0, r2, lsl #11
 3516              	.LVL332:
1770:Core/Src/deca_device.c ****     }
 3517              		.loc 1 1770 9 is_stmt 0 view .LVU780
 3518 000e 0B4A     		ldr	r2, .L286
 3519              	.LVL333:
1770:Core/Src/deca_device.c ****     }
 3520              		.loc 1 1770 9 view .LVU781
 3521 0010 0021     		movs	r1, #0
 3522              	.LVL334:
1770:Core/Src/deca_device.c ****     }
 3523              		.loc 1 1770 9 view .LVU782
 3524 0012 2420     		movs	r0, #36
 3525 0014 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 3526              	.LVL335:
 3527              	.L282:
1780:Core/Src/deca_device.c **** 
 3528              		.loc 1 1780 1 view .LVU783
ARM GAS  /tmp/cctZ3fzX.s 			page 157


 3529 0018 08BD     		pop	{r3, pc}
 3530              	.LVL336:
 3531              	.L283:
1775:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXB_OFFSET_BIT_MASK | TX_FCTRL_TR_BIT_M
 3532              		.loc 1 1775 9 is_stmt 1 view .LVU784
1775:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXB_OFFSET_BIT_MASK | TX_FCTRL_TR_BIT_M
 3533              		.loc 1 1775 60 is_stmt 0 view .LVU785
 3534 001a 8031     		adds	r1, r1, #128
 3535              	.LVL337:
1775:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(TX_FCTRL_ID, 0, ~(TX_FCTRL_TXB_OFFSET_BIT_MASK | TX_FCTRL_TR_BIT_M
 3536              		.loc 1 1775 31 view .LVU786
 3537 001c 40EA0140 		orr	r0, r0, r1, lsl #16
 3538              	.LVL338:
1776:Core/Src/deca_device.c ****         reg32 = dwt_read8bitoffsetreg(SAR_CTRL_ID, 0); //DW3000/3700 - need to read this to load th
 3539              		.loc 1 1776 9 is_stmt 1 view .LVU787
 3540 0020 40EAC223 		orr	r3, r0, r2, lsl #11
 3541              	.LVL339:
1776:Core/Src/deca_device.c ****         reg32 = dwt_read8bitoffsetreg(SAR_CTRL_ID, 0); //DW3000/3700 - need to read this to load th
 3542              		.loc 1 1776 9 is_stmt 0 view .LVU788
 3543 0024 054A     		ldr	r2, .L286
 3544              	.LVL340:
1776:Core/Src/deca_device.c ****         reg32 = dwt_read8bitoffsetreg(SAR_CTRL_ID, 0); //DW3000/3700 - need to read this to load th
 3545              		.loc 1 1776 9 view .LVU789
 3546 0026 0021     		movs	r1, #0
 3547 0028 2420     		movs	r0, #36
 3548 002a FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 3549              	.LVL341:
1777:Core/Src/deca_device.c ****     }
 3550              		.loc 1 1777 9 is_stmt 1 view .LVU790
1777:Core/Src/deca_device.c ****     }
 3551              		.loc 1 1777 17 is_stmt 0 view .LVU791
 3552 002e 0021     		movs	r1, #0
 3553 0030 4FF40020 		mov	r0, #524288
 3554 0034 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 3555              	.LVL342:
1780:Core/Src/deca_device.c **** 
 3556              		.loc 1 1780 1 view .LVU792
 3557 0038 EEE7     		b	.L282
 3558              	.L287:
 3559 003a 00BF     		.align	2
 3560              	.L286:
 3561 003c 00F400FC 		.word	-67046400
 3562              		.cfi_endproc
 3563              	.LFE47:
 3565              		.section	.text.dwt_setplenfine,"ax",%progbits
 3566              		.align	1
 3567              		.global	dwt_setplenfine
 3568              		.syntax unified
 3569              		.thumb
 3570              		.thumb_func
 3571              		.fpu fpv4-sp-d16
 3573              	dwt_setplenfine:
 3574              	.LVL343:
 3575              	.LFB48:
1795:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(TX_FCTRL_HI_ID, 1, preambleLength);
 3576              		.loc 1 1795 1 is_stmt 1 view -0
 3577              		.cfi_startproc
ARM GAS  /tmp/cctZ3fzX.s 			page 158


 3578              		@ args = 0, pretend = 0, frame = 0
 3579              		@ frame_needed = 0, uses_anonymous_args = 0
1795:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(TX_FCTRL_HI_ID, 1, preambleLength);
 3580              		.loc 1 1795 1 is_stmt 0 view .LVU794
 3581 0000 08B5     		push	{r3, lr}
 3582              		.cfi_def_cfa_offset 8
 3583              		.cfi_offset 3, -8
 3584              		.cfi_offset 14, -4
 3585 0002 0246     		mov	r2, r0
1796:Core/Src/deca_device.c **** }
 3586              		.loc 1 1796 5 is_stmt 1 view .LVU795
 3587 0004 0121     		movs	r1, #1
 3588 0006 2820     		movs	r0, #40
 3589              	.LVL344:
1796:Core/Src/deca_device.c **** }
 3590              		.loc 1 1796 5 is_stmt 0 view .LVU796
 3591 0008 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3592              	.LVL345:
1797:Core/Src/deca_device.c **** 
 3593              		.loc 1 1797 1 view .LVU797
 3594 000c 08BD     		pop	{r3, pc}
 3595              		.cfi_endproc
 3596              	.LFE48:
 3598              		.section	.text.dwt_configure,"ax",%progbits
 3599              		.align	1
 3600              		.global	dwt_configure
 3601              		.syntax unified
 3602              		.thumb
 3603              		.thumb_func
 3604              		.fpu fpv4-sp-d16
 3606              	dwt_configure:
 3607              	.LVL346:
 3608              	.LFB41:
1324:Core/Src/deca_device.c ****     uint8_t chan = config->chan,cnt,flag;
 3609              		.loc 1 1324 1 is_stmt 1 view -0
 3610              		.cfi_startproc
 3611              		@ args = 0, pretend = 0, frame = 0
 3612              		@ frame_needed = 0, uses_anonymous_args = 0
1324:Core/Src/deca_device.c ****     uint8_t chan = config->chan,cnt,flag;
 3613              		.loc 1 1324 1 is_stmt 0 view .LVU799
 3614 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3615              		.cfi_def_cfa_offset 32
 3616              		.cfi_offset 3, -32
 3617              		.cfi_offset 4, -28
 3618              		.cfi_offset 5, -24
 3619              		.cfi_offset 6, -20
 3620              		.cfi_offset 7, -16
 3621              		.cfi_offset 8, -12
 3622              		.cfi_offset 9, -8
 3623              		.cfi_offset 14, -4
 3624 0004 0446     		mov	r4, r0
1325:Core/Src/deca_device.c ****     uint32_t temp;
 3625              		.loc 1 1325 5 is_stmt 1 view .LVU800
1325:Core/Src/deca_device.c ****     uint32_t temp;
 3626              		.loc 1 1325 13 is_stmt 0 view .LVU801
 3627 0006 0778     		ldrb	r7, [r0]	@ zero_extendqisi2
 3628              	.LVL347:
ARM GAS  /tmp/cctZ3fzX.s 			page 159


1326:Core/Src/deca_device.c ****     uint8_t scp = ((config->rxCode > 24) || (config->txCode > 24)) ? 1 : 0;
 3629              		.loc 1 1326 5 is_stmt 1 view .LVU802
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3630              		.loc 1 1327 5 view .LVU803
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3631              		.loc 1 1327 27 is_stmt 0 view .LVU804
 3632 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3633              		.loc 1 1327 72 view .LVU805
 3634 000a 182B     		cmp	r3, #24
 3635 000c 04D8     		bhi	.L321
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3636              		.loc 1 1327 52 discriminator 2 view .LVU806
 3637 000e C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3638              		.loc 1 1327 72 discriminator 2 view .LVU807
 3639 0010 182B     		cmp	r3, #24
 3640 0012 15D9     		bls	.L322
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3641              		.loc 1 1327 72 view .LVU808
 3642 0014 0126     		movs	r6, #1
 3643 0016 00E0     		b	.L291
 3644              	.L321:
 3645 0018 0126     		movs	r6, #1
 3646              	.L291:
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3647              		.loc 1 1327 13 discriminator 6 view .LVU809
 3648 001a F6B2     		uxtb	r6, r6
 3649              	.LVL348:
1328:Core/Src/deca_device.c ****     uint16_t sts_len;
 3650              		.loc 1 1328 5 is_stmt 1 discriminator 6 view .LVU810
1328:Core/Src/deca_device.c ****     uint16_t sts_len;
 3651              		.loc 1 1328 27 is_stmt 0 discriminator 6 view .LVU811
 3652 001c E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
1328:Core/Src/deca_device.c ****     uint16_t sts_len;
 3653              		.loc 1 1328 13 discriminator 6 view .LVU812
 3654 001e 012B     		cmp	r3, #1
 3655 0020 10D0     		beq	.L328
1328:Core/Src/deca_device.c ****     uint16_t sts_len;
 3656              		.loc 1 1328 13 view .LVU813
 3657 0022 0021     		movs	r1, #0
 3658              	.L292:
 3659              	.LVL349:
1329:Core/Src/deca_device.c ****     int error = DWT_SUCCESS;
 3660              		.loc 1 1329 5 is_stmt 1 discriminator 4 view .LVU814
1330:Core/Src/deca_device.c **** 
 3661              		.loc 1 1330 5 discriminator 4 view .LVU815
1353:Core/Src/deca_device.c **** 
 3662              		.loc 1 1353 5 discriminator 4 view .LVU816
1355:Core/Src/deca_device.c ****     {
 3663              		.loc 1 1355 5 discriminator 4 view .LVU817
1355:Core/Src/deca_device.c ****     {
 3664              		.loc 1 1355 19 is_stmt 0 discriminator 4 view .LVU818
 3665 0024 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
1355:Core/Src/deca_device.c ****     {
 3666              		.loc 1 1355 5 discriminator 4 view .LVU819
 3667 0026 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cctZ3fzX.s 			page 160


 3668 0028 062B     		cmp	r3, #6
 3669 002a 00F2F980 		bhi	.L293
 3670 002e DFE813F0 		tbh	[pc, r3, lsl #1]
 3671              	.L295:
 3672 0032 FA00     		.2byte	(.L324-.L295)/2
 3673 0034 F700     		.2byte	(.L293-.L295)/2
 3674 0036 F700     		.2byte	(.L293-.L295)/2
 3675 0038 0B00     		.2byte	(.L297-.L295)/2
 3676 003a F400     		.2byte	(.L296-.L295)/2
 3677 003c F700     		.2byte	(.L293-.L295)/2
 3678 003e 0E00     		.2byte	(.L294-.L295)/2
 3679              	.LVL350:
 3680              		.p2align 1
 3681              	.L322:
1327:Core/Src/deca_device.c ****     uint8_t mode = (config->phrMode == DWT_PHRMODE_EXT) ? SYS_CFG_PHR_MODE_BIT_MASK : 0;
 3682              		.loc 1 1327 72 view .LVU820
 3683 0040 0026     		movs	r6, #0
 3684 0042 EAE7     		b	.L291
 3685              	.LVL351:
 3686              	.L328:
1328:Core/Src/deca_device.c ****     uint16_t sts_len;
 3687              		.loc 1 1328 13 view .LVU821
 3688 0044 1021     		movs	r1, #16
 3689 0046 EDE7     		b	.L292
 3690              	.LVL352:
 3691              	.L297:
1355:Core/Src/deca_device.c ****     {
 3692              		.loc 1 1355 5 view .LVU822
 3693 0048 4FF02009 		mov	r9, #32
 3694 004c 01E0     		b	.L298
 3695              	.L294:
1364:Core/Src/deca_device.c ****         break;
 3696              		.loc 1 1364 9 is_stmt 1 view .LVU823
 3697              	.LVL353:
1365:Core/Src/deca_device.c ****     case DWT_PLEN_128:
 3698              		.loc 1 1365 9 view .LVU824
1364:Core/Src/deca_device.c ****         break;
 3699              		.loc 1 1364 22 is_stmt 0 view .LVU825
 3700 004e 4FF04809 		mov	r9, #72
 3701              	.LVL354:
 3702              	.L298:
1374:Core/Src/deca_device.c ****     pdw3000local->longFrames = config->phrMode ;
 3703              		.loc 1 1374 5 is_stmt 1 view .LVU826
1374:Core/Src/deca_device.c ****     pdw3000local->longFrames = config->phrMode ;
 3704              		.loc 1 1374 30 is_stmt 0 view .LVU827
 3705 0052 B74B     		ldr	r3, .L337
 3706 0054 1B68     		ldr	r3, [r3]
 3707 0056 1A8A     		ldrh	r2, [r3, #16]
 3708 0058 22F0E002 		bic	r2, r2, #224
 3709 005c 1A82     		strh	r2, [r3, #16]	@ movhi
1375:Core/Src/deca_device.c ****     sts_len=GET_STS_REG_SET_VALUE((uint16_t)(config->stsLength));
 3710              		.loc 1 1375 5 is_stmt 1 view .LVU828
1375:Core/Src/deca_device.c ****     sts_len=GET_STS_REG_SET_VALUE((uint16_t)(config->stsLength));
 3711              		.loc 1 1375 38 is_stmt 0 view .LVU829
 3712 005e E279     		ldrb	r2, [r4, #7]	@ zero_extendqisi2
1375:Core/Src/deca_device.c ****     sts_len=GET_STS_REG_SET_VALUE((uint16_t)(config->stsLength));
 3713              		.loc 1 1375 30 view .LVU830
ARM GAS  /tmp/cctZ3fzX.s 			page 161


 3714 0060 1A73     		strb	r2, [r3, #12]
1376:Core/Src/deca_device.c ****     pdw3000local->ststhreshold = (int16_t)((((uint32_t)sts_len) * 8) * STSQUAL_THRESH_64);
 3715              		.loc 1 1376 5 is_stmt 1 view .LVU831
1376:Core/Src/deca_device.c ****     pdw3000local->ststhreshold = (int16_t)((((uint32_t)sts_len) * 8) * STSQUAL_THRESH_64);
 3716              		.loc 1 1376 13 is_stmt 0 view .LVU832
 3717 0062 657B     		ldrb	r5, [r4, #13]	@ zero_extendqisi2
 3718 0064 AA1C     		adds	r2, r5, #2
 3719 0066 0125     		movs	r5, #1
 3720 0068 9540     		lsls	r5, r5, r2
 3721              	.LVL355:
1377:Core/Src/deca_device.c ****     pdw3000local->stsconfig = config->stsMode;
 3722              		.loc 1 1377 5 is_stmt 1 view .LVU833
 3723 006a 1FFA85F8 		uxth	r8, r5
1377:Core/Src/deca_device.c ****     pdw3000local->stsconfig = config->stsMode;
 3724              		.loc 1 1377 65 is_stmt 0 view .LVU834
 3725 006e 4FEAC802 		lsl	r2, r8, #3
 3726 0072 07EE902A 		vmov	s15, r2	@ int
1377:Core/Src/deca_device.c ****     pdw3000local->stsconfig = config->stsMode;
 3727              		.loc 1 1377 70 view .LVU835
 3728 0076 F8EE677A 		vcvt.f32.u32	s15, s15
 3729 007a 9FEDAE7A 		vldr.32	s14, .L337+4
 3730 007e 67EE877A 		vmul.f32	s15, s15, s14
1377:Core/Src/deca_device.c ****     pdw3000local->stsconfig = config->stsMode;
 3731              		.loc 1 1377 34 view .LVU836
 3732 0082 FDEEE77A 		vcvt.s32.f32	s15, s15
1377:Core/Src/deca_device.c ****     pdw3000local->stsconfig = config->stsMode;
 3733              		.loc 1 1377 32 view .LVU837
 3734 0086 17EE902A 		vmov	r2, s15	@ int
 3735 008a 5A82     		strh	r2, [r3, #18]	@ movhi
1378:Core/Src/deca_device.c **** 
 3736              		.loc 1 1378 5 is_stmt 1 view .LVU838
1378:Core/Src/deca_device.c **** 
 3737              		.loc 1 1378 37 is_stmt 0 view .LVU839
 3738 008c 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
1378:Core/Src/deca_device.c **** 
 3739              		.loc 1 1378 29 view .LVU840
 3740 008e 5A75     		strb	r2, [r3, #21]
1384:Core/Src/deca_device.c ****         ((uint32_t)config->pdoaMode) << SYS_CFG_PDOA_MODE_BIT_OFFSET
 3741              		.loc 1 1384 5 is_stmt 1 view .LVU841
1385:Core/Src/deca_device.c ****         | ((uint16_t)config->stsMode & DWT_STS_CONFIG_MASK) << SYS_CFG_CP_SPC_BIT_OFFSET
 3742              		.loc 1 1385 26 is_stmt 0 view .LVU842
 3743 0090 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
1386:Core/Src/deca_device.c ****         | (SYS_CFG_PHR_6M8_BIT_MASK & ((uint32_t)config->phrRate << SYS_CFG_PHR_6M8_BIT_OFFSET))
 3744              		.loc 1 1386 61 view .LVU843
 3745 0092 1203     		lsls	r2, r2, #12
 3746 0094 02F43042 		and	r2, r2, #45056
1386:Core/Src/deca_device.c ****         | (SYS_CFG_PHR_6M8_BIT_MASK & ((uint32_t)config->phrRate << SYS_CFG_PHR_6M8_BIT_OFFSET))
 3747              		.loc 1 1386 9 view .LVU844
 3748 0098 42EA0342 		orr	r2, r2, r3, lsl #16
1387:Core/Src/deca_device.c ****         | mode);
 3749              		.loc 1 1387 56 view .LVU845
 3750 009c 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
1387:Core/Src/deca_device.c ****         | mode);
 3751              		.loc 1 1387 66 view .LVU846
 3752 009e 5B01     		lsls	r3, r3, #5
1387:Core/Src/deca_device.c ****         | mode);
 3753              		.loc 1 1387 37 view .LVU847
ARM GAS  /tmp/cctZ3fzX.s 			page 162


 3754 00a0 03F02003 		and	r3, r3, #32
1387:Core/Src/deca_device.c ****         | mode);
 3755              		.loc 1 1387 9 view .LVU848
 3756 00a4 1343     		orrs	r3, r3, r2
1384:Core/Src/deca_device.c ****         ((uint32_t)config->pdoaMode) << SYS_CFG_PDOA_MODE_BIT_OFFSET
 3757              		.loc 1 1384 5 view .LVU849
 3758 00a6 0B43     		orrs	r3, r3, r1
 3759 00a8 A34A     		ldr	r2, .L337+8
 3760 00aa 0021     		movs	r1, #0
 3761              	.LVL356:
1384:Core/Src/deca_device.c ****         ((uint32_t)config->pdoaMode) << SYS_CFG_PDOA_MODE_BIT_OFFSET
 3762              		.loc 1 1384 5 view .LVU850
 3763 00ac 1020     		movs	r0, #16
 3764              	.LVL357:
1384:Core/Src/deca_device.c ****         ((uint32_t)config->pdoaMode) << SYS_CFG_PDOA_MODE_BIT_OFFSET
 3765              		.loc 1 1384 5 view .LVU851
 3766 00ae FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 3767              	.LVL358:
1391:Core/Src/deca_device.c ****     {
 3768              		.loc 1 1391 5 is_stmt 1 view .LVU852
1391:Core/Src/deca_device.c ****     {
 3769              		.loc 1 1391 8 is_stmt 0 view .LVU853
 3770 00b2 002E     		cmp	r6, #0
 3771 00b4 40F0BA80 		bne	.L329
 3772              	.LBB8:
1405:Core/Src/deca_device.c ****         if (config->stsMode != DWT_STS_MODE_OFF)
 3773              		.loc 1 1405 9 is_stmt 1 view .LVU854
1406:Core/Src/deca_device.c ****         {
 3774              		.loc 1 1406 9 view .LVU855
1406:Core/Src/deca_device.c ****         {
 3775              		.loc 1 1406 19 is_stmt 0 view .LVU856
 3776 00b8 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
1406:Core/Src/deca_device.c ****         {
 3777              		.loc 1 1406 12 view .LVU857
 3778 00ba ABB1     		cbz	r3, .L301
1410:Core/Src/deca_device.c ****             {
 3779              		.loc 1 1410 13 is_stmt 1 view .LVU858
1410:Core/Src/deca_device.c ****             {
 3780              		.loc 1 1410 24 is_stmt 0 view .LVU859
 3781 00bc A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
1410:Core/Src/deca_device.c ****             {
 3782              		.loc 1 1410 16 view .LVU860
 3783 00be 012B     		cmp	r3, #1
 3784 00c0 40F2D980 		bls	.L330
1418:Core/Src/deca_device.c ****             }
 3785              		.loc 1 1418 17 is_stmt 1 view .LVU861
1418:Core/Src/deca_device.c ****             }
 3786              		.loc 1 1418 74 is_stmt 0 view .LVU862
 3787 00c4 607B     		ldrb	r0, [r4, #13]	@ zero_extendqisi2
1418:Core/Src/deca_device.c ****             }
 3788              		.loc 1 1418 26 view .LVU863
 3789 00c6 0422     		movs	r2, #4
 3790 00c8 1021     		movs	r1, #16
 3791 00ca 9C4B     		ldr	r3, .L337+12
 3792 00cc 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 3793 00d0 FFF7FEFF 		bl	get_sts_mnth
 3794              	.LVL359:
ARM GAS  /tmp/cctZ3fzX.s 			page 163


 3795              	.L303:
1421:Core/Src/deca_device.c **** 
 3796              		.loc 1 1421 13 is_stmt 1 view .LVU864
1421:Core/Src/deca_device.c **** 
 3797              		.loc 1 1421 26 is_stmt 0 view .LVU865
 3798 00d4 09EBC809 		add	r9, r9, r8, lsl #3
 3799              	.LVL360:
1423:Core/Src/deca_device.c **** 
 3800              		.loc 1 1423 13 is_stmt 1 view .LVU866
 3801 00d8 00F07F03 		and	r3, r0, #127
 3802 00dc 4FF68072 		movw	r2, #65408
 3803 00e0 0221     		movs	r1, #2
 3804 00e2 9748     		ldr	r0, .L337+16
 3805              	.LVL361:
1423:Core/Src/deca_device.c **** 
 3806              		.loc 1 1423 13 is_stmt 0 view .LVU867
 3807 00e4 FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 3808              	.LVL362:
 3809              	.L301:
1428:Core/Src/deca_device.c ****         {
 3810              		.loc 1 1428 9 is_stmt 1 view .LVU868
1428:Core/Src/deca_device.c ****         {
 3811              		.loc 1 1428 12 is_stmt 0 view .LVU869
 3812 00e8 B9F1FF0F 		cmp	r9, #255
 3813 00ec 40F3CC80 		ble	.L304
1430:Core/Src/deca_device.c ****             dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_LONG | OT
 3814              		.loc 1 1430 13 is_stmt 1 view .LVU870
1430:Core/Src/deca_device.c ****             dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_LONG | OT
 3815              		.loc 1 1430 38 is_stmt 0 view .LVU871
 3816 00f0 8F4B     		ldr	r3, .L337
 3817 00f2 1A68     		ldr	r2, [r3]
 3818 00f4 138A     		ldrh	r3, [r2, #16]
 3819 00f6 43F02003 		orr	r3, r3, #32
 3820 00fa 1382     		strh	r3, [r2, #16]	@ movhi
1431:Core/Src/deca_device.c ****         }
 3821              		.loc 1 1431 13 is_stmt 1 view .LVU872
 3822 00fc 4FF48063 		mov	r3, #1024
 3823 0100 6FF4C052 		mvn	r2, #6144
 3824 0104 0021     		movs	r1, #0
 3825 0106 8F48     		ldr	r0, .L337+20
 3826 0108 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 3827              	.LVL363:
 3828              	.L300:
1431:Core/Src/deca_device.c ****         }
 3829              		.loc 1 1431 13 is_stmt 0 view .LVU873
 3830              	.LBE8:
1440:Core/Src/deca_device.c **** 
 3831              		.loc 1 1440 5 is_stmt 1 view .LVU874
 3832 010c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3833 010e FC22     		movs	r2, #252
 3834 0110 0021     		movs	r1, #0
 3835 0112 4FF4C020 		mov	r0, #393216
 3836 0116 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 3837              	.LVL364:
1442:Core/Src/deca_device.c **** 
 3838              		.loc 1 1442 5 view .LVU875
 3839 011a 6A1E     		subs	r2, r5, #1
ARM GAS  /tmp/cctZ3fzX.s 			page 164


 3840 011c D2B2     		uxtb	r2, r2
 3841 011e 0021     		movs	r1, #0
 3842 0120 4FF40030 		mov	r0, #131072
 3843 0124 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3844              	.LVL365:
1444:Core/Src/deca_device.c ****     {
 3845              		.loc 1 1444 5 view .LVU876
1444:Core/Src/deca_device.c ****     {
 3846              		.loc 1 1444 15 is_stmt 0 view .LVU877
 3847 0128 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
1444:Core/Src/deca_device.c ****     {
 3848              		.loc 1 1444 8 view .LVU878
 3849 012a 072B     		cmp	r3, #7
 3850 012c 00F0B580 		beq	.L331
1450:Core/Src/deca_device.c ****     }
 3851              		.loc 1 1450 9 is_stmt 1 view .LVU879
 3852 0130 0020     		movs	r0, #0
 3853 0132 FFF7FEFF 		bl	dwt_setplenfine
 3854              	.LVL366:
 3855              	.L306:
1453:Core/Src/deca_device.c ****     {
 3856              		.loc 1 1453 5 view .LVU880
1453:Core/Src/deca_device.c ****     {
 3857              		.loc 1 1453 15 is_stmt 0 view .LVU881
 3858 0136 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
1453:Core/Src/deca_device.c ****     {
 3859              		.loc 1 1453 7 view .LVU882
 3860 0138 03F00303 		and	r3, r3, #3
 3861 013c 032B     		cmp	r3, #3
 3862 013e 00F0B080 		beq	.L332
1461:Core/Src/deca_device.c ****     }
 3863              		.loc 1 1461 9 is_stmt 1 view .LVU883
 3864 0142 814A     		ldr	r2, .L337+24
 3865 0144 0021     		movs	r1, #0
 3866 0146 8148     		ldr	r0, .L337+28
 3867 0148 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3868              	.LVL367:
 3869              	.L308:
1466:Core/Src/deca_device.c ****     temp &= (~(CHAN_CTRL_RX_PCODE_BIT_MASK | CHAN_CTRL_TX_PCODE_BIT_MASK | CHAN_CTRL_SFD_TYPE_BIT_M
 3870              		.loc 1 1466 5 view .LVU884
1466:Core/Src/deca_device.c ****     temp &= (~(CHAN_CTRL_RX_PCODE_BIT_MASK | CHAN_CTRL_TX_PCODE_BIT_MASK | CHAN_CTRL_SFD_TYPE_BIT_M
 3871              		.loc 1 1466 12 is_stmt 0 view .LVU885
 3872 014c 0021     		movs	r1, #0
 3873 014e 8048     		ldr	r0, .L337+32
 3874 0150 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 3875              	.LVL368:
1467:Core/Src/deca_device.c **** 
 3876              		.loc 1 1467 5 is_stmt 1 view .LVU886
1467:Core/Src/deca_device.c **** 
 3877              		.loc 1 1467 10 is_stmt 0 view .LVU887
 3878 0154 20F4FF53 		bic	r3, r0, #8160
 3879 0158 23F01F03 		bic	r3, r3, #31
 3880              	.LVL369:
1469:Core/Src/deca_device.c **** 
 3881              		.loc 1 1469 5 is_stmt 1 view .LVU888
1469:Core/Src/deca_device.c **** 
 3882              		.loc 1 1469 8 is_stmt 0 view .LVU889
ARM GAS  /tmp/cctZ3fzX.s 			page 165


 3883 015c 092F     		cmp	r7, #9
 3884 015e 00F0A680 		beq	.L333
 3885              	.L309:
1471:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_TX_PCODE_BIT_MASK & ((uint32_t)config->txCode << CHAN_CTRL_TX_PCODE_BIT_OFFS
 3886              		.loc 1 1471 5 is_stmt 1 view .LVU890
1471:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_TX_PCODE_BIT_MASK & ((uint32_t)config->txCode << CHAN_CTRL_TX_PCODE_BIT_OFFS
 3887              		.loc 1 1471 61 is_stmt 0 view .LVU891
 3888 0162 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
1471:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_TX_PCODE_BIT_MASK & ((uint32_t)config->txCode << CHAN_CTRL_TX_PCODE_BIT_OFFS
 3889              		.loc 1 1471 70 view .LVU892
 3890 0164 1202     		lsls	r2, r2, #8
1471:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_TX_PCODE_BIT_MASK & ((uint32_t)config->txCode << CHAN_CTRL_TX_PCODE_BIT_OFFS
 3891              		.loc 1 1471 42 view .LVU893
 3892 0166 02F4F852 		and	r2, r2, #7936
1471:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_TX_PCODE_BIT_MASK & ((uint32_t)config->txCode << CHAN_CTRL_TX_PCODE_BIT_OFFS
 3893              		.loc 1 1471 10 view .LVU894
 3894 016a 1A43     		orrs	r2, r2, r3
 3895              	.LVL370:
1472:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_SFD_TYPE_BIT_MASK & ((uint32_t)config->sfdType << CHAN_CTRL_SFD_TYPE_BIT_OFF
 3896              		.loc 1 1472 5 is_stmt 1 view .LVU895
1472:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_SFD_TYPE_BIT_MASK & ((uint32_t)config->sfdType << CHAN_CTRL_SFD_TYPE_BIT_OFF
 3897              		.loc 1 1472 61 is_stmt 0 view .LVU896
 3898 016c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
1472:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_SFD_TYPE_BIT_MASK & ((uint32_t)config->sfdType << CHAN_CTRL_SFD_TYPE_BIT_OFF
 3899              		.loc 1 1472 70 view .LVU897
 3900 016e DB00     		lsls	r3, r3, #3
1472:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_SFD_TYPE_BIT_MASK & ((uint32_t)config->sfdType << CHAN_CTRL_SFD_TYPE_BIT_OFF
 3901              		.loc 1 1472 42 view .LVU898
 3902 0170 DBB2     		uxtb	r3, r3
1472:Core/Src/deca_device.c ****     temp |= (CHAN_CTRL_SFD_TYPE_BIT_MASK & ((uint32_t)config->sfdType << CHAN_CTRL_SFD_TYPE_BIT_OFF
 3903              		.loc 1 1472 10 view .LVU899
 3904 0172 1343     		orrs	r3, r3, r2
 3905              	.LVL371:
1473:Core/Src/deca_device.c **** 
 3906              		.loc 1 1473 5 is_stmt 1 view .LVU900
1473:Core/Src/deca_device.c **** 
 3907              		.loc 1 1473 61 is_stmt 0 view .LVU901
 3908 0174 6279     		ldrb	r2, [r4, #5]	@ zero_extendqisi2
1473:Core/Src/deca_device.c **** 
 3909              		.loc 1 1473 71 view .LVU902
 3910 0176 5200     		lsls	r2, r2, #1
1473:Core/Src/deca_device.c **** 
 3911              		.loc 1 1473 42 view .LVU903
 3912 0178 02F00602 		and	r2, r2, #6
 3913              	.LVL372:
1475:Core/Src/deca_device.c **** 
 3914              		.loc 1 1475 5 is_stmt 1 view .LVU904
 3915 017c 1A43     		orrs	r2, r2, r3
 3916              	.LVL373:
1475:Core/Src/deca_device.c **** 
 3917              		.loc 1 1475 5 is_stmt 0 view .LVU905
 3918 017e 0021     		movs	r1, #0
 3919 0180 7348     		ldr	r0, .L337+32
 3920 0182 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3921              	.LVL374:
1480:Core/Src/deca_device.c ****                                               ((uint32_t)config->dataRate << TX_FCTRL_TXBR_BIT_OFFS
 3922              		.loc 1 1480 5 is_stmt 1 view .LVU906
ARM GAS  /tmp/cctZ3fzX.s 			page 166


1481:Core/Src/deca_device.c ****                                               | ((uint32_t) config->txPreambLength) << TX_FCTRL_TXP
 3923              		.loc 1 1481 64 is_stmt 0 view .LVU907
 3924 0186 A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
1482:Core/Src/deca_device.c **** 
 3925              		.loc 1 1482 67 view .LVU908
 3926 0188 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
1482:Core/Src/deca_device.c **** 
 3927              		.loc 1 1482 85 view .LVU909
 3928 018a 1B03     		lsls	r3, r3, #12
1480:Core/Src/deca_device.c ****                                               ((uint32_t)config->dataRate << TX_FCTRL_TXBR_BIT_OFFS
 3929              		.loc 1 1480 5 view .LVU910
 3930 018c 43EA8223 		orr	r3, r3, r2, lsl #10
 3931 0190 6FF47442 		mvn	r2, #62464
 3932 0194 0021     		movs	r1, #0
 3933 0196 2420     		movs	r0, #36
 3934 0198 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 3935              	.LVL375:
1487:Core/Src/deca_device.c ****     {
 3936              		.loc 1 1487 5 is_stmt 1 view .LVU911
1487:Core/Src/deca_device.c ****     {
 3937              		.loc 1 1487 15 is_stmt 0 view .LVU912
 3938 019c 6389     		ldrh	r3, [r4, #10]
1487:Core/Src/deca_device.c ****     {
 3939              		.loc 1 1487 8 view .LVU913
 3940 019e 0BB9     		cbnz	r3, .L310
1489:Core/Src/deca_device.c ****     }
 3941              		.loc 1 1489 9 is_stmt 1 view .LVU914
1489:Core/Src/deca_device.c ****     }
 3942              		.loc 1 1489 23 is_stmt 0 view .LVU915
 3943 01a0 8123     		movs	r3, #129
 3944 01a2 6381     		strh	r3, [r4, #10]	@ movhi
 3945              	.L310:
1491:Core/Src/deca_device.c **** 
 3946              		.loc 1 1491 5 is_stmt 1 view .LVU916
 3947 01a4 6289     		ldrh	r2, [r4, #10]
 3948 01a6 0221     		movs	r1, #2
 3949 01a8 4FF4C020 		mov	r0, #393216
 3950 01ac FFF7FEFF 		bl	dwt_write16bitoffsetreg
 3951              	.LVL376:
1496:Core/Src/deca_device.c ****     {
 3952              		.loc 1 1496 5 view .LVU917
1496:Core/Src/deca_device.c ****     {
 3953              		.loc 1 1496 8 is_stmt 0 view .LVU918
 3954 01b0 092F     		cmp	r7, #9
 3955 01b2 7FD0     		beq	.L334
1507:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(PLL_CFG_ID, 0, RF_PLL_CFG_CH5);
 3956              		.loc 1 1507 9 is_stmt 1 view .LVU919
 3957 01b4 674A     		ldr	r2, .L337+36
 3958 01b6 0021     		movs	r1, #0
 3959 01b8 6748     		ldr	r0, .L337+40
 3960 01ba FFF7FEFF 		bl	dwt_write32bitoffsetreg
 3961              	.LVL377:
1508:Core/Src/deca_device.c ****     }
 3962              		.loc 1 1508 9 view .LVU920
 3963 01be 41F63C72 		movw	r2, #7996
 3964 01c2 0021     		movs	r1, #0
 3965 01c4 4FF41020 		mov	r0, #589824
ARM GAS  /tmp/cctZ3fzX.s 			page 167


 3966 01c8 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 3967              	.LVL378:
 3968              	.L312:
1511:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(TX_CTRL_LO_ID, 2, RF_TXCTRL_LO_B2);
 3969              		.loc 1 1511 5 view .LVU921
 3970 01cc 1422     		movs	r2, #20
 3971 01ce 0121     		movs	r1, #1
 3972 01d0 6248     		ldr	r0, .L337+44
 3973 01d2 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3974              	.LVL379:
1512:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(PLL_CAL_ID, 0, RF_PLL_CFG_LD);        // Extend the lock delay
 3975              		.loc 1 1512 5 view .LVU922
 3976 01d6 0E22     		movs	r2, #14
 3977 01d8 0221     		movs	r1, #2
 3978 01da 6148     		ldr	r0, .L337+48
 3979 01dc FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3980              	.LVL380:
1513:Core/Src/deca_device.c **** 
 3981              		.loc 1 1513 5 view .LVU923
 3982 01e0 8122     		movs	r2, #129
 3983 01e2 0021     		movs	r1, #0
 3984 01e4 5F48     		ldr	r0, .L337+52
 3985 01e6 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3986              	.LVL381:
1516:Core/Src/deca_device.c **** 
 3987              		.loc 1 1516 5 view .LVU924
 3988 01ea 0222     		movs	r2, #2
 3989 01ec 0021     		movs	r1, #0
 3990 01ee 4420     		movs	r0, #68
 3991 01f0 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 3992              	.LVL382:
1520:Core/Src/deca_device.c **** 
 3993              		.loc 1 1520 5 view .LVU925
 3994 01f4 0120     		movs	r0, #1
 3995 01f6 FFF7FEFF 		bl	dwt_setdwstate
 3996              	.LVL383:
1522:Core/Src/deca_device.c ****     {
 3997              		.loc 1 1522 5 view .LVU926
1522:Core/Src/deca_device.c ****     {
 3998              		.loc 1 1522 20 is_stmt 0 view .LVU927
 3999 01fa 0025     		movs	r5, #0
 4000              	.LVL384:
 4001              	.L313:
1522:Core/Src/deca_device.c ****     {
 4002              		.loc 1 1522 23 is_stmt 1 discriminator 1 view .LVU928
1522:Core/Src/deca_device.c ****     {
 4003              		.loc 1 1522 5 is_stmt 0 discriminator 1 view .LVU929
 4004 01fc 052D     		cmp	r5, #5
 4005 01fe 6BD8     		bhi	.L335
1524:Core/Src/deca_device.c ****         if ((dwt_read8bitoffsetreg(SYS_STATUS_ID, 0) & SYS_STATUS_CP_LOCK_BIT_MASK))
 4006              		.loc 1 1524 9 is_stmt 1 view .LVU930
 4007 0200 1420     		movs	r0, #20
 4008 0202 FFF7FEFF 		bl	deca_usleep
 4009              	.LVL385:
1525:Core/Src/deca_device.c ****         {//PLL is locked
 4010              		.loc 1 1525 9 view .LVU931
1525:Core/Src/deca_device.c ****         {//PLL is locked
ARM GAS  /tmp/cctZ3fzX.s 			page 168


 4011              		.loc 1 1525 14 is_stmt 0 view .LVU932
 4012 0206 0021     		movs	r1, #0
 4013 0208 4420     		movs	r0, #68
 4014 020a FFF7FEFF 		bl	dwt_read8bitoffsetreg
 4015              	.LVL386:
1525:Core/Src/deca_device.c ****         {//PLL is locked
 4016              		.loc 1 1525 12 view .LVU933
 4017 020e 10F0020F 		tst	r0, #2
 4018 0212 7DD1     		bne	.L325
1522:Core/Src/deca_device.c ****     {
 4019              		.loc 1 1522 47 is_stmt 1 discriminator 2 view .LVU934
1522:Core/Src/deca_device.c ****     {
 4020              		.loc 1 1522 50 is_stmt 0 discriminator 2 view .LVU935
 4021 0214 0135     		adds	r5, r5, #1
 4022              	.LVL387:
1522:Core/Src/deca_device.c ****     {
 4023              		.loc 1 1522 50 discriminator 2 view .LVU936
 4024 0216 EDB2     		uxtb	r5, r5
 4025              	.LVL388:
1522:Core/Src/deca_device.c ****     {
 4026              		.loc 1 1522 50 discriminator 2 view .LVU937
 4027 0218 F0E7     		b	.L313
 4028              	.LVL389:
 4029              	.L296:
1367:Core/Src/deca_device.c ****         break;
 4030              		.loc 1 1367 9 is_stmt 1 view .LVU938
1368:Core/Src/deca_device.c ****     default:
 4031              		.loc 1 1368 9 view .LVU939
1367:Core/Src/deca_device.c ****         break;
 4032              		.loc 1 1367 22 is_stmt 0 view .LVU940
 4033 021a 4FF08009 		mov	r9, #128
1368:Core/Src/deca_device.c ****     default:
 4034              		.loc 1 1368 9 view .LVU941
 4035 021e 18E7     		b	.L298
 4036              	.LVL390:
 4037              	.L293:
1370:Core/Src/deca_device.c ****         break;
 4038              		.loc 1 1370 9 is_stmt 1 view .LVU942
1371:Core/Src/deca_device.c ****     }
 4039              		.loc 1 1371 9 view .LVU943
1370:Core/Src/deca_device.c ****         break;
 4040              		.loc 1 1370 22 is_stmt 0 view .LVU944
 4041 0220 4FF48079 		mov	r9, #256
1371:Core/Src/deca_device.c ****     }
 4042              		.loc 1 1371 9 view .LVU945
 4043 0224 15E7     		b	.L298
 4044              	.LVL391:
 4045              	.L324:
1361:Core/Src/deca_device.c ****         break;
 4046              		.loc 1 1361 22 view .LVU946
 4047 0226 4FF04009 		mov	r9, #64
 4048 022a 12E7     		b	.L298
 4049              	.LVL392:
 4050              	.L329:
1394:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_SCP | OTP_CFG
 4051              		.loc 1 1394 9 is_stmt 1 view .LVU947
1394:Core/Src/deca_device.c ****         dwt_modify32bitoffsetreg(OTP_CFG_ID, 0, ~(OTP_CFG_OPS_ID_BIT_MASK), DWT_OPSET_SCP | OTP_CFG
ARM GAS  /tmp/cctZ3fzX.s 			page 169


 4052              		.loc 1 1394 34 is_stmt 0 view .LVU948
 4053 022c 404B     		ldr	r3, .L337
 4054 022e 1A68     		ldr	r2, [r3]
 4055 0230 138A     		ldrh	r3, [r2, #16]
 4056 0232 43F06003 		orr	r3, r3, #96
 4057 0236 1382     		strh	r3, [r2, #16]	@ movhi
1395:Core/Src/deca_device.c **** 
 4058              		.loc 1 1395 9 is_stmt 1 view .LVU949
 4059 0238 4FF44063 		mov	r3, #3072
 4060 023c 6FF4C052 		mvn	r2, #6144
 4061 0240 0021     		movs	r1, #0
 4062 0242 4048     		ldr	r0, .L337+20
 4063 0244 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 4064              	.LVL393:
1397:Core/Src/deca_device.c ****         dwt_write32bitoffsetreg(IP_CONFIG_HI_ID, 0, IP_CONFIG_HI_SCP);
 4065              		.loc 1 1397 9 view .LVU950
 4066 0248 40F20632 		movw	r2, #774
 4067 024c 0021     		movs	r1, #0
 4068 024e 4648     		ldr	r0, .L337+56
 4069 0250 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4070              	.LVL394:
1398:Core/Src/deca_device.c **** 
 4071              		.loc 1 1398 9 view .LVU951
 4072 0254 0022     		movs	r2, #0
 4073 0256 1146     		mov	r1, r2
 4074 0258 4FF00E10 		mov	r0, #917518
 4075 025c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4076              	.LVL395:
1400:Core/Src/deca_device.c ****         dwt_write8bitoffsetreg(STS_CONFIG_HI_ID, 0, STS_CONFIG_HI_SCP);
 4077              		.loc 1 1400 9 view .LVU952
 4078 0260 424A     		ldr	r2, .L337+60
 4079 0262 0021     		movs	r1, #0
 4080 0264 3648     		ldr	r0, .L337+16
 4081 0266 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4082              	.LVL396:
1401:Core/Src/deca_device.c ****     }
 4083              		.loc 1 1401 9 view .LVU953
 4084 026a 7D22     		movs	r2, #125
 4085 026c 0021     		movs	r1, #0
 4086 026e 4048     		ldr	r0, .L337+64
 4087 0270 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 4088              	.LVL397:
 4089 0274 4AE7     		b	.L300
 4090              	.L330:
 4091              	.LBB9:
1413:Core/Src/deca_device.c ****             }
 4092              		.loc 1 1413 17 view .LVU954
1413:Core/Src/deca_device.c ****             }
 4093              		.loc 1 1413 74 is_stmt 0 view .LVU955
 4094 0276 607B     		ldrb	r0, [r4, #13]	@ zero_extendqisi2
1413:Core/Src/deca_device.c ****             }
 4095              		.loc 1 1413 26 view .LVU956
 4096 0278 0322     		movs	r2, #3
 4097 027a 1021     		movs	r1, #16
 4098 027c 2F4B     		ldr	r3, .L337+12
 4099 027e 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 4100 0282 FFF7FEFF 		bl	get_sts_mnth
ARM GAS  /tmp/cctZ3fzX.s 			page 170


 4101              	.LVL398:
1413:Core/Src/deca_device.c ****             }
 4102              		.loc 1 1413 26 view .LVU957
 4103 0286 25E7     		b	.L303
 4104              	.LVL399:
 4105              	.L304:
1435:Core/Src/deca_device.c ****         }
 4106              		.loc 1 1435 13 is_stmt 1 view .LVU958
 4107 0288 4FF4A053 		mov	r3, #5120
 4108 028c 6FF4C052 		mvn	r2, #6144
 4109 0290 0021     		movs	r1, #0
 4110 0292 2C48     		ldr	r0, .L337+20
 4111 0294 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 4112              	.LVL400:
 4113 0298 38E7     		b	.L300
 4114              	.L331:
1435:Core/Src/deca_device.c ****         }
 4115              		.loc 1 1435 13 is_stmt 0 view .LVU959
 4116              	.LBE9:
1446:Core/Src/deca_device.c ****     }
 4117              		.loc 1 1446 9 is_stmt 1 view .LVU960
 4118 029a 0820     		movs	r0, #8
 4119 029c FFF7FEFF 		bl	dwt_setplenfine
 4120              	.LVL401:
 4121 02a0 49E7     		b	.L306
 4122              	.L332:
1456:Core/Src/deca_device.c ****     }
 4123              		.loc 1 1456 9 view .LVU961
 4124 02a2 344A     		ldr	r2, .L337+68
 4125 02a4 0021     		movs	r1, #0
 4126 02a6 2948     		ldr	r0, .L337+28
 4127 02a8 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4128              	.LVL402:
 4129 02ac 4EE7     		b	.L308
 4130              	.LVL403:
 4131              	.L333:
1469:Core/Src/deca_device.c **** 
 4132              		.loc 1 1469 20 discriminator 1 view .LVU962
1469:Core/Src/deca_device.c **** 
 4133              		.loc 1 1469 25 is_stmt 0 discriminator 1 view .LVU963
 4134 02ae 43F00103 		orr	r3, r3, #1
 4135              	.LVL404:
1469:Core/Src/deca_device.c **** 
 4136              		.loc 1 1469 25 discriminator 1 view .LVU964
 4137 02b2 56E7     		b	.L309
 4138              	.LVL405:
 4139              	.L334:
1499:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(PLL_CFG_ID, 0, RF_PLL_CFG_CH9);
 4140              		.loc 1 1499 9 is_stmt 1 view .LVU965
 4141 02b4 304A     		ldr	r2, .L337+72
 4142 02b6 0021     		movs	r1, #0
 4143 02b8 2748     		ldr	r0, .L337+40
 4144 02ba FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4145              	.LVL406:
1500:Core/Src/deca_device.c ****         // Setup RX analog for ch9
 4146              		.loc 1 1500 9 view .LVU966
 4147 02be 40F63C72 		movw	r2, #3900
ARM GAS  /tmp/cctZ3fzX.s 			page 171


 4148 02c2 0021     		movs	r1, #0
 4149 02c4 4FF41020 		mov	r0, #589824
 4150 02c8 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 4151              	.LVL407:
1502:Core/Src/deca_device.c ****     }
 4152              		.loc 1 1502 9 view .LVU967
 4153 02cc 2B4A     		ldr	r2, .L337+76
 4154 02ce 0021     		movs	r1, #0
 4155 02d0 2B48     		ldr	r0, .L337+80
 4156 02d2 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4157              	.LVL408:
 4158 02d6 79E7     		b	.L312
 4159              	.LVL409:
 4160              	.L335:
1522:Core/Src/deca_device.c ****     {
 4161              		.loc 1 1522 14 is_stmt 0 view .LVU968
 4162 02d8 0123     		movs	r3, #1
 4163              	.L314:
 4164              	.LVL410:
1531:Core/Src/deca_device.c ****     {
 4165              		.loc 1 1531 5 is_stmt 1 view .LVU969
1531:Core/Src/deca_device.c ****     {
 4166              		.loc 1 1531 8 is_stmt 0 view .LVU970
 4167 02da 33BB     		cbnz	r3, .L326
1536:Core/Src/deca_device.c ****     {
 4168              		.loc 1 1536 5 is_stmt 1 view .LVU971
1536:Core/Src/deca_device.c ****     {
 4169              		.loc 1 1536 16 is_stmt 0 view .LVU972
 4170 02dc 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4171              	.LVL411:
1536:Core/Src/deca_device.c ****     {
 4172              		.loc 1 1536 31 view .LVU973
 4173 02de 093B     		subs	r3, r3, #9
 4174 02e0 DBB2     		uxtb	r3, r3
1536:Core/Src/deca_device.c ****     {
 4175              		.loc 1 1536 8 view .LVU974
 4176 02e2 0F2B     		cmp	r3, #15
 4177 02e4 1AD8     		bhi	.L317
1540:Core/Src/deca_device.c ****         {
 4178              		.loc 1 1540 9 is_stmt 1 view .LVU975
1540:Core/Src/deca_device.c ****         {
 4179              		.loc 1 1540 25 is_stmt 0 view .LVU976
 4180 02e6 124B     		ldr	r3, .L337
 4181 02e8 1B68     		ldr	r3, [r3]
 4182 02ea 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
1540:Core/Src/deca_device.c ****         {
 4183              		.loc 1 1540 12 view .LVU977
 4184 02ec 012B     		cmp	r3, #1
 4185 02ee 11D0     		beq	.L336
1547:Core/Src/deca_device.c ****         }
 4186              		.loc 1 1547 13 is_stmt 1 view .LVU978
 4187 02f0 3846     		mov	r0, r7
 4188 02f2 FFF7FEFF 		bl	dwt_configmrxlut
 4189              	.LVL412:
 4190              	.L319:
1549:Core/Src/deca_device.c ****     }
 4191              		.loc 1 1549 9 view .LVU979
ARM GAS  /tmp/cctZ3fzX.s 			page 172


 4192 02f6 4FF4C843 		mov	r3, #25600
 4193 02fa 48F2FF12 		movw	r2, #33279
 4194 02fe 0021     		movs	r1, #0
 4195 0300 2048     		ldr	r0, .L337+84
 4196 0302 FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 4197              	.LVL413:
 4198              	.L320:
1558:Core/Src/deca_device.c **** 
 4199              		.loc 1 1558 5 view .LVU980
1558:Core/Src/deca_device.c **** 
 4200              		.loc 1 1558 13 is_stmt 0 view .LVU981
 4201 0306 0120     		movs	r0, #1
 4202 0308 FFF7FEFF 		bl	dwt_pgf_cal
 4203              	.LVL414:
1561:Core/Src/deca_device.c **** } // end dwt_configure()
 4204              		.loc 1 1561 5 is_stmt 1 view .LVU982
 4205              	.L290:
1562:Core/Src/deca_device.c **** 
 4206              		.loc 1 1562 1 is_stmt 0 view .LVU983
 4207 030c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4208              	.LVL415:
 4209              	.L325:
1527:Core/Src/deca_device.c ****             break;
 4210              		.loc 1 1527 17 view .LVU984
 4211 0310 0023     		movs	r3, #0
 4212 0312 E2E7     		b	.L314
 4213              	.LVL416:
 4214              	.L336:
1542:Core/Src/deca_device.c ****         }
 4215              		.loc 1 1542 13 is_stmt 1 view .LVU985
 4216 0314 78B2     		sxtb	r0, r7
 4217 0316 FFF7FEFF 		bl	_dwt_kick_dgc_on_wakeup
 4218              	.LVL417:
 4219 031a ECE7     		b	.L319
 4220              	.L317:
1553:Core/Src/deca_device.c ****     }
 4221              		.loc 1 1553 9 view .LVU986
 4222 031c 0023     		movs	r3, #0
 4223 031e FE22     		movs	r2, #254
 4224 0320 1946     		mov	r1, r3
 4225 0322 1848     		ldr	r0, .L337+84
 4226 0324 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 4227              	.LVL418:
 4228 0328 EDE7     		b	.L320
 4229              	.LVL419:
 4230              	.L326:
1533:Core/Src/deca_device.c ****     }
 4231              		.loc 1 1533 17 is_stmt 0 view .LVU987
 4232 032a 4FF0FF30 		mov	r0, #-1
 4233 032e EDE7     		b	.L290
 4234              	.L338:
 4235              		.align	2
 4236              	.L337:
 4237 0330 00000000 		.word	.LANCHOR2
 4238 0334 6666663F 		.word	1063675494
 4239 0338 CF4FFCFF 		.word	-241713
 4240 033c 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/cctZ3fzX.s 			page 173


 4241 0340 12000E00 		.word	917522
 4242 0344 08000B00 		.word	720904
 4243 0348 4C585FAF 		.word	-1352705972
 4244 034c 0C000600 		.word	393228
 4245 0350 14000100 		.word	65556
 4246 0354 3411071C 		.word	470225204
 4247 0358 1C000700 		.word	458780
 4248 035c 50000700 		.word	458832
 4249 0360 18000700 		.word	458776
 4250 0364 08000900 		.word	589832
 4251 0368 0C000E00 		.word	917516
 4252 036c 0A5A0C00 		.word	809482
 4253 0370 16000E00 		.word	917526
 4254 0374 CC355FAF 		.word	-1352714804
 4255 0378 3400011C 		.word	469827636
 4256 037c 33A8B508 		.word	146122803
 4257 0380 10000700 		.word	458768
 4258 0384 18000300 		.word	196632
 4259              		.cfi_endproc
 4260              	.LFE41:
 4262              		.section	.text.dwt_read_rx_scratch_data,"ax",%progbits
 4263              		.align	1
 4264              		.global	dwt_read_rx_scratch_data
 4265              		.syntax unified
 4266              		.thumb
 4267              		.thumb_func
 4268              		.fpu fpv4-sp-d16
 4270              	dwt_read_rx_scratch_data:
 4271              	.LVL420:
 4272              	.LFB49:
1812:Core/Src/deca_device.c ****     //!!Check later if needs range protection.
 4273              		.loc 1 1812 1 is_stmt 1 view -0
 4274              		.cfi_startproc
 4275              		@ args = 0, pretend = 0, frame = 0
 4276              		@ frame_needed = 0, uses_anonymous_args = 0
1812:Core/Src/deca_device.c ****     //!!Check later if needs range protection.
 4277              		.loc 1 1812 1 is_stmt 0 view .LVU989
 4278 0000 08B5     		push	{r3, lr}
 4279              		.cfi_def_cfa_offset 8
 4280              		.cfi_offset 3, -8
 4281              		.cfi_offset 14, -4
 4282 0002 0346     		mov	r3, r0
 4283 0004 8C46     		mov	ip, r1
 4284 0006 1146     		mov	r1, r2
 4285              	.LVL421:
1816:Core/Src/deca_device.c **** }
 4286              		.loc 1 1816 5 is_stmt 1 view .LVU990
 4287 0008 6246     		mov	r2, ip
 4288              	.LVL422:
1816:Core/Src/deca_device.c **** }
 4289              		.loc 1 1816 5 is_stmt 0 view .LVU991
 4290 000a 4FF4B010 		mov	r0, #1441792
 4291              	.LVL423:
1816:Core/Src/deca_device.c **** }
 4292              		.loc 1 1816 5 view .LVU992
 4293 000e FFF7FEFF 		bl	dwt_readfromdevice
 4294              	.LVL424:
ARM GAS  /tmp/cctZ3fzX.s 			page 174


1817:Core/Src/deca_device.c **** 
 4295              		.loc 1 1817 1 view .LVU993
 4296 0012 08BD     		pop	{r3, pc}
 4297              		.cfi_endproc
 4298              	.LFE49:
 4300              		.section	.text.dwt_readrxdata,"ax",%progbits
 4301              		.align	1
 4302              		.global	dwt_readrxdata
 4303              		.syntax unified
 4304              		.thumb
 4305              		.thumb_func
 4306              		.fpu fpv4-sp-d16
 4308              	dwt_readrxdata:
 4309              	.LVL425:
 4310              	.LFB50:
1832:Core/Src/deca_device.c ****     uint32_t  rx_buff_addr;
 4311              		.loc 1 1832 1 is_stmt 1 view -0
 4312              		.cfi_startproc
 4313              		@ args = 0, pretend = 0, frame = 0
 4314              		@ frame_needed = 0, uses_anonymous_args = 0
1832:Core/Src/deca_device.c ****     uint32_t  rx_buff_addr;
 4315              		.loc 1 1832 1 is_stmt 0 view .LVU995
 4316 0000 70B5     		push	{r4, r5, r6, lr}
 4317              		.cfi_def_cfa_offset 16
 4318              		.cfi_offset 4, -16
 4319              		.cfi_offset 5, -12
 4320              		.cfi_offset 6, -8
 4321              		.cfi_offset 14, -4
 4322 0002 0646     		mov	r6, r0
 4323 0004 0D46     		mov	r5, r1
 4324 0006 1446     		mov	r4, r2
1833:Core/Src/deca_device.c **** 
 4325              		.loc 1 1833 5 is_stmt 1 view .LVU996
1835:Core/Src/deca_device.c ****     {
 4326              		.loc 1 1835 5 view .LVU997
1835:Core/Src/deca_device.c ****     {
 4327              		.loc 1 1835 21 is_stmt 0 view .LVU998
 4328 0008 134B     		ldr	r3, .L348
 4329 000a 1B68     		ldr	r3, [r3]
 4330 000c DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
1835:Core/Src/deca_device.c ****     {
 4331              		.loc 1 1835 8 view .LVU999
 4332 000e 032B     		cmp	r3, #3
 4333 0010 0DD0     		beq	.L347
1841:Core/Src/deca_device.c ****     }
 4334              		.loc 1 1841 21 view .LVU1000
 4335 0012 4FF49010 		mov	r0, #1179648
 4336              	.LVL426:
 4337              	.L342:
1844:Core/Src/deca_device.c ****     {
 4338              		.loc 1 1844 5 is_stmt 1 view .LVU1001
1844:Core/Src/deca_device.c ****     {
 4339              		.loc 1 1844 25 is_stmt 0 view .LVU1002
 4340 0016 6319     		adds	r3, r4, r5
1844:Core/Src/deca_device.c ****     {
 4341              		.loc 1 1844 8 view .LVU1003
 4342 0018 B3F5806F 		cmp	r3, #1024
ARM GAS  /tmp/cctZ3fzX.s 			page 175


 4343 001c 06DA     		bge	.L341
1846:Core/Src/deca_device.c ****         {
 4344              		.loc 1 1846 9 is_stmt 1 view .LVU1004
1846:Core/Src/deca_device.c ****         {
 4345              		.loc 1 1846 11 is_stmt 0 view .LVU1005
 4346 001e 7F2C     		cmp	r4, #127
 4347 0020 08D8     		bhi	.L344
1849:Core/Src/deca_device.c ****         }
 4348              		.loc 1 1849 13 is_stmt 1 view .LVU1006
 4349 0022 3346     		mov	r3, r6
 4350 0024 2A46     		mov	r2, r5
 4351              	.LVL427:
1849:Core/Src/deca_device.c ****         }
 4352              		.loc 1 1849 13 is_stmt 0 view .LVU1007
 4353 0026 2146     		mov	r1, r4
 4354              	.LVL428:
1849:Core/Src/deca_device.c ****         }
 4355              		.loc 1 1849 13 view .LVU1008
 4356 0028 FFF7FEFF 		bl	dwt_readfromdevice
 4357              	.LVL429:
 4358              	.L341:
1861:Core/Src/deca_device.c **** 
 4359              		.loc 1 1861 1 view .LVU1009
 4360 002c 70BD     		pop	{r4, r5, r6, pc}
 4361              	.LVL430:
 4362              	.L347:
1837:Core/Src/deca_device.c ****     }
 4363              		.loc 1 1837 21 view .LVU1010
 4364 002e 4FF49810 		mov	r0, #1245184
 4365              	.LVL431:
1837:Core/Src/deca_device.c ****     }
 4366              		.loc 1 1837 21 view .LVU1011
 4367 0032 F0E7     		b	.L342
 4368              	.LVL432:
 4369              	.L344:
1854:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   rxBufferOffset);
 4370              		.loc 1 1854 13 is_stmt 1 view .LVU1012
 4371 0034 020C     		lsrs	r2, r0, #16
 4372              	.LVL433:
1854:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   rxBufferOffset);
 4373              		.loc 1 1854 13 is_stmt 0 view .LVU1013
 4374 0036 0021     		movs	r1, #0
 4375              	.LVL434:
1854:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   rxBufferOffset);
 4376              		.loc 1 1854 13 view .LVU1014
 4377 0038 0848     		ldr	r0, .L348+4
 4378              	.LVL435:
1854:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   rxBufferOffset);
 4379              		.loc 1 1854 13 view .LVU1015
 4380 003a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4381              	.LVL436:
1855:Core/Src/deca_device.c **** 
 4382              		.loc 1 1855 13 is_stmt 1 view .LVU1016
 4383 003e 2246     		mov	r2, r4
 4384 0040 0021     		movs	r1, #0
 4385 0042 0748     		ldr	r0, .L348+8
 4386 0044 FFF7FEFF 		bl	dwt_write32bitoffsetreg
ARM GAS  /tmp/cctZ3fzX.s 			page 176


 4387              	.LVL437:
1858:Core/Src/deca_device.c ****         }
 4388              		.loc 1 1858 13 view .LVU1017
 4389 0048 3346     		mov	r3, r6
 4390 004a 2A46     		mov	r2, r5
 4391 004c 0021     		movs	r1, #0
 4392 004e 4FF4E810 		mov	r0, #1900544
 4393 0052 FFF7FEFF 		bl	dwt_readfromdevice
 4394              	.LVL438:
1861:Core/Src/deca_device.c **** 
 4395              		.loc 1 1861 1 is_stmt 0 view .LVU1018
 4396 0056 E9E7     		b	.L341
 4397              	.L349:
 4398              		.align	2
 4399              	.L348:
 4400 0058 00000000 		.word	.LANCHOR2
 4401 005c 04001F00 		.word	2031620
 4402 0060 08001F00 		.word	2031624
 4403              		.cfi_endproc
 4404              	.LFE50:
 4406              		.section	.rodata.dwt_readaccdata.str1.4,"aMS",%progbits,1
 4407              		.align	2
 4408              	.LC4:
 4409 0000 3000     		.ascii	"0\000"
 4410              		.section	.text.dwt_readaccdata,"ax",%progbits
 4411              		.align	1
 4412              		.global	dwt_readaccdata
 4413              		.syntax unified
 4414              		.thumb
 4415              		.thumb_func
 4416              		.fpu fpv4-sp-d16
 4418              	dwt_readaccdata:
 4419              	.LVL439:
 4420              	.LFB51:
1883:Core/Src/deca_device.c ****     // Force on the ACC clocks if we are sequenced
 4421              		.loc 1 1883 1 is_stmt 1 view -0
 4422              		.cfi_startproc
 4423              		@ args = 0, pretend = 0, frame = 0
 4424              		@ frame_needed = 0, uses_anonymous_args = 0
1883:Core/Src/deca_device.c ****     // Force on the ACC clocks if we are sequenced
 4425              		.loc 1 1883 1 is_stmt 0 view .LVU1020
 4426 0000 70B5     		push	{r4, r5, r6, lr}
 4427              		.cfi_def_cfa_offset 16
 4428              		.cfi_offset 4, -16
 4429              		.cfi_offset 5, -12
 4430              		.cfi_offset 6, -8
 4431              		.cfi_offset 14, -4
 4432 0002 0646     		mov	r6, r0
 4433 0004 0D46     		mov	r5, r1
 4434 0006 1446     		mov	r4, r2
1885:Core/Src/deca_device.c **** 
 4435              		.loc 1 1885 5 is_stmt 1 view .LVU1021
 4436 0008 48F24003 		movw	r3, #32832
 4437 000c 4FF6FF72 		movw	r2, #65535
 4438              	.LVL440:
1885:Core/Src/deca_device.c **** 
 4439              		.loc 1 1885 5 is_stmt 0 view .LVU1022
ARM GAS  /tmp/cctZ3fzX.s 			page 177


 4440 0010 0021     		movs	r1, #0
 4441              	.LVL441:
1885:Core/Src/deca_device.c **** 
 4442              		.loc 1 1885 5 view .LVU1023
 4443 0012 1948     		ldr	r0, .L355
 4444              	.LVL442:
1885:Core/Src/deca_device.c **** 
 4445              		.loc 1 1885 5 view .LVU1024
 4446 0014 FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 4447              	.LVL443:
1887:Core/Src/deca_device.c ****     {
 4448              		.loc 1 1887 5 is_stmt 1 view .LVU1025
1887:Core/Src/deca_device.c ****     {
 4449              		.loc 1 1887 20 is_stmt 0 view .LVU1026
 4450 0018 6219     		adds	r2, r4, r5
1887:Core/Src/deca_device.c ****     {
 4451              		.loc 1 1887 8 view .LVU1027
 4452 001a 43F20103 		movw	r3, #12289
 4453 001e 9A42     		cmp	r2, r3
 4454 0020 22DC     		bgt	.L351
1889:Core/Src/deca_device.c ****         {
 4455              		.loc 1 1889 9 is_stmt 1 view .LVU1028
1889:Core/Src/deca_device.c ****         {
 4456              		.loc 1 1889 11 is_stmt 0 view .LVU1029
 4457 0022 7F2C     		cmp	r4, #127
 4458 0024 0ED8     		bhi	.L352
1892:Core/Src/deca_device.c ****         }
 4459              		.loc 1 1892 13 is_stmt 1 view .LVU1030
 4460 0026 3346     		mov	r3, r6
 4461 0028 2A46     		mov	r2, r5
 4462 002a 2146     		mov	r1, r4
 4463 002c 4FF4A810 		mov	r0, #1376256
 4464 0030 FFF7FEFF 		bl	dwt_readfromdevice
 4465              	.LVL444:
 4466              	.L353:
1910:Core/Src/deca_device.c **** }
 4467              		.loc 1 1910 5 view .LVU1031
 4468 0034 0023     		movs	r3, #0
 4469 0036 47F6BF72 		movw	r2, #32703
 4470 003a 1946     		mov	r1, r3
 4471 003c 0E48     		ldr	r0, .L355
 4472 003e FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 4473              	.LVL445:
1911:Core/Src/deca_device.c **** 
 4474              		.loc 1 1911 1 is_stmt 0 view .LVU1032
 4475 0042 70BD     		pop	{r4, r5, r6, pc}
 4476              	.LVL446:
 4477              	.L352:
1897:Core/Src/deca_device.c ****             dwt_write32bitreg(ADDR_OFFSET_A_ID,   accOffset);
 4478              		.loc 1 1897 13 is_stmt 1 view .LVU1033
 4479 0044 1522     		movs	r2, #21
 4480 0046 0021     		movs	r1, #0
 4481 0048 0C48     		ldr	r0, .L355+4
 4482 004a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4483              	.LVL447:
1898:Core/Src/deca_device.c **** 
 4484              		.loc 1 1898 13 view .LVU1034
ARM GAS  /tmp/cctZ3fzX.s 			page 178


 4485 004e 2246     		mov	r2, r4
 4486 0050 0021     		movs	r1, #0
 4487 0052 0B48     		ldr	r0, .L355+8
 4488 0054 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 4489              	.LVL448:
1901:Core/Src/deca_device.c ****         }
 4490              		.loc 1 1901 13 view .LVU1035
 4491 0058 3346     		mov	r3, r6
 4492 005a 2A46     		mov	r2, r5
 4493 005c 0021     		movs	r1, #0
 4494 005e 4FF4E810 		mov	r0, #1900544
 4495 0062 FFF7FEFF 		bl	dwt_readfromdevice
 4496              	.LVL449:
 4497 0066 E5E7     		b	.L353
 4498              	.L351:
1906:Core/Src/deca_device.c ****     }
 4499              		.loc 1 1906 9 view .LVU1036
 4500 0068 064B     		ldr	r3, .L355+12
 4501 006a 074A     		ldr	r2, .L355+16
 4502 006c 40F27271 		movw	r1, #1906
 4503 0070 0648     		ldr	r0, .L355+20
 4504 0072 FFF7FEFF 		bl	__assert_func
 4505              	.LVL450:
 4506              	.L356:
 4507 0076 00BF     		.align	2
 4508              	.L355:
 4509 0078 04001100 		.word	1114116
 4510 007c 04001F00 		.word	2031620
 4511 0080 08001F00 		.word	2031624
 4512 0084 00000000 		.word	.LC4
 4513 0088 00000000 		.word	.LANCHOR5
 4514 008c 10000000 		.word	.LC1
 4515              		.cfi_endproc
 4516              	.LFE51:
 4518              		.section	.text.dwt_readclockoffset,"ax",%progbits
 4519              		.align	1
 4520              		.global	dwt_readclockoffset
 4521              		.syntax unified
 4522              		.thumb
 4523              		.thumb_func
 4524              		.fpu fpv4-sp-d16
 4526              	dwt_readclockoffset:
 4527              	.LFB52:
1923:Core/Src/deca_device.c ****     uint16_t  regval = 0 ;
 4528              		.loc 1 1923 1 view -0
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 0
 4531              		@ frame_needed = 0, uses_anonymous_args = 0
 4532 0000 08B5     		push	{r3, lr}
 4533              		.cfi_def_cfa_offset 8
 4534              		.cfi_offset 3, -8
 4535              		.cfi_offset 14, -4
1924:Core/Src/deca_device.c **** 
 4536              		.loc 1 1924 5 view .LVU1038
 4537              	.LVL451:
1926:Core/Src/deca_device.c ****     {
 4538              		.loc 1 1926 5 view .LVU1039
ARM GAS  /tmp/cctZ3fzX.s 			page 179


1926:Core/Src/deca_device.c ****     {
 4539              		.loc 1 1926 25 is_stmt 0 view .LVU1040
 4540 0002 114B     		ldr	r3, .L363
 4541 0004 1B68     		ldr	r3, [r3]
 4542 0006 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
1926:Core/Src/deca_device.c ****     {
 4543              		.loc 1 1926 5 view .LVU1041
 4544 0008 012B     		cmp	r3, #1
 4545 000a 0FD0     		beq	.L358
 4546 000c 032B     		cmp	r3, #3
 4547 000e 14D1     		bne	.L359
1930:Core/Src/deca_device.c ****         break;
 4548              		.loc 1 1930 9 is_stmt 1 view .LVU1042
1930:Core/Src/deca_device.c ****         break;
 4549              		.loc 1 1930 18 is_stmt 0 view .LVU1043
 4550 0010 0C21     		movs	r1, #12
 4551 0012 4FF4F010 		mov	r0, #1966080
 4552 0016 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 4553              	.LVL452:
1930:Core/Src/deca_device.c ****         break;
 4554              		.loc 1 1930 16 view .LVU1044
 4555 001a C0F30C00 		ubfx	r0, r0, #0, #13
 4556              	.LVL453:
1931:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
 4557              		.loc 1 1931 9 is_stmt 1 view .LVU1045
 4558              	.L360:
1940:Core/Src/deca_device.c ****     {
 4559              		.loc 1 1940 5 view .LVU1046
1940:Core/Src/deca_device.c ****     {
 4560              		.loc 1 1940 8 is_stmt 0 view .LVU1047
 4561 001e 10F4805F 		tst	r0, #4096
 4562 0022 01D0     		beq	.L361
1942:Core/Src/deca_device.c ****     }
 4563              		.loc 1 1942 9 is_stmt 1 view .LVU1048
1942:Core/Src/deca_device.c ****     }
 4564              		.loc 1 1942 16 is_stmt 0 view .LVU1049
 4565 0024 40F46040 		orr	r0, r0, #57344
 4566              	.LVL454:
 4567              	.L361:
1945:Core/Src/deca_device.c **** }
 4568              		.loc 1 1945 5 is_stmt 1 view .LVU1050
1946:Core/Src/deca_device.c **** 
 4569              		.loc 1 1946 1 is_stmt 0 view .LVU1051
 4570 0028 00B2     		sxth	r0, r0
1946:Core/Src/deca_device.c **** 
 4571              		.loc 1 1946 1 view .LVU1052
 4572 002a 08BD     		pop	{r3, pc}
 4573              	.LVL455:
 4574              	.L358:
1933:Core/Src/deca_device.c ****         break;
 4575              		.loc 1 1933 9 is_stmt 1 view .LVU1053
1933:Core/Src/deca_device.c ****         break;
 4576              		.loc 1 1933 18 is_stmt 0 view .LVU1054
 4577 002c 0021     		movs	r1, #0
 4578 002e 0748     		ldr	r0, .L363+4
 4579 0030 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 4580              	.LVL456:
ARM GAS  /tmp/cctZ3fzX.s 			page 180


1933:Core/Src/deca_device.c ****         break;
 4581              		.loc 1 1933 16 view .LVU1055
 4582 0034 C0F30C00 		ubfx	r0, r0, #0, #13
 4583              	.LVL457:
1934:Core/Src/deca_device.c ****     default:
 4584              		.loc 1 1934 9 is_stmt 1 view .LVU1056
 4585 0038 F1E7     		b	.L360
 4586              	.LVL458:
 4587              	.L359:
1936:Core/Src/deca_device.c ****         break;
 4588              		.loc 1 1936 9 view .LVU1057
1936:Core/Src/deca_device.c ****         break;
 4589              		.loc 1 1936 18 is_stmt 0 view .LVU1058
 4590 003a 0021     		movs	r1, #0
 4591 003c 0448     		ldr	r0, .L363+8
 4592 003e FFF7FEFF 		bl	dwt_read16bitoffsetreg
 4593              	.LVL459:
1936:Core/Src/deca_device.c ****         break;
 4594              		.loc 1 1936 16 view .LVU1059
 4595 0042 C0F30C00 		ubfx	r0, r0, #0, #13
 4596              	.LVL460:
1937:Core/Src/deca_device.c ****     }
 4597              		.loc 1 1937 9 is_stmt 1 view .LVU1060
 4598 0046 EAE7     		b	.L360
 4599              	.L364:
 4600              		.align	2
 4601              	.L363:
 4602 0048 00000000 		.word	.LANCHOR2
 4603 004c 0C001800 		.word	1572876
 4604 0050 20000C00 		.word	786464
 4605              		.cfi_endproc
 4606              	.LFE52:
 4608              		.section	.text.dwt_readcarrierintegrator,"ax",%progbits
 4609              		.align	1
 4610              		.global	dwt_readcarrierintegrator
 4611              		.syntax unified
 4612              		.thumb
 4613              		.thumb_func
 4614              		.fpu fpv4-sp-d16
 4616              	dwt_readcarrierintegrator:
 4617              	.LFB53:
1960:Core/Src/deca_device.c ****     uint32_t  regval = 0 ;
 4618              		.loc 1 1960 1 view -0
 4619              		.cfi_startproc
 4620              		@ args = 0, pretend = 0, frame = 8
 4621              		@ frame_needed = 0, uses_anonymous_args = 0
 4622 0000 00B5     		push	{lr}
 4623              		.cfi_def_cfa_offset 4
 4624              		.cfi_offset 14, -4
 4625 0002 83B0     		sub	sp, sp, #12
 4626              		.cfi_def_cfa_offset 16
1961:Core/Src/deca_device.c **** 
 4627              		.loc 1 1961 5 view .LVU1062
 4628              	.LVL461:
1963:Core/Src/deca_device.c ****     uint8_t   buffer[DRX_CARRIER_INT_LEN] ;
 4629              		.loc 1 1963 5 view .LVU1063
1964:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 181


 4630              		.loc 1 1964 5 view .LVU1064
1967:Core/Src/deca_device.c **** 
 4631              		.loc 1 1967 5 view .LVU1065
 4632 0004 01AB     		add	r3, sp, #4
 4633 0006 0322     		movs	r2, #3
 4634 0008 0021     		movs	r1, #0
 4635 000a 0D48     		ldr	r0, .L370
 4636 000c FFF7FEFF 		bl	dwt_readfromdevice
 4637              	.LVL462:
1969:Core/Src/deca_device.c ****     {
 4638              		.loc 1 1969 5 view .LVU1066
1969:Core/Src/deca_device.c ****     {
 4639              		.loc 1 1969 12 is_stmt 0 view .LVU1067
 4640 0010 0223     		movs	r3, #2
1961:Core/Src/deca_device.c **** 
 4641              		.loc 1 1961 15 view .LVU1068
 4642 0012 0020     		movs	r0, #0
1969:Core/Src/deca_device.c ****     {
 4643              		.loc 1 1969 5 view .LVU1069
 4644 0014 07E0     		b	.L366
 4645              	.LVL463:
 4646              	.L367:
1971:Core/Src/deca_device.c ****     }
 4647              		.loc 1 1971 9 is_stmt 1 discriminator 3 view .LVU1070
1971:Core/Src/deca_device.c ****     }
 4648              		.loc 1 1971 40 is_stmt 0 discriminator 3 view .LVU1071
 4649 0016 03F10802 		add	r2, r3, #8
 4650 001a 6A44     		add	r2, sp, r2
 4651 001c 12F8042C 		ldrb	r2, [r2, #-4]	@ zero_extendqisi2
1971:Core/Src/deca_device.c ****     }
 4652              		.loc 1 1971 16 discriminator 3 view .LVU1072
 4653 0020 02EB0020 		add	r0, r2, r0, lsl #8
 4654              	.LVL464:
1969:Core/Src/deca_device.c ****     {
 4655              		.loc 1 1969 27 is_stmt 1 discriminator 3 view .LVU1073
1969:Core/Src/deca_device.c ****     {
 4656              		.loc 1 1969 29 is_stmt 0 discriminator 3 view .LVU1074
 4657 0024 013B     		subs	r3, r3, #1
 4658              	.LVL465:
 4659              	.L366:
1969:Core/Src/deca_device.c ****     {
 4660              		.loc 1 1969 18 is_stmt 1 discriminator 1 view .LVU1075
1969:Core/Src/deca_device.c ****     {
 4661              		.loc 1 1969 5 is_stmt 0 discriminator 1 view .LVU1076
 4662 0026 002B     		cmp	r3, #0
 4663 0028 F5DA     		bge	.L367
1974:Core/Src/deca_device.c ****     {
 4664              		.loc 1 1974 5 is_stmt 1 view .LVU1077
1974:Core/Src/deca_device.c ****     {
 4665              		.loc 1 1974 8 is_stmt 0 view .LVU1078
 4666 002a 10F4801F 		tst	r0, #1048576
 4667 002e 03D0     		beq	.L368
1976:Core/Src/deca_device.c ****     }
 4668              		.loc 1 1976 9 is_stmt 1 view .LVU1079
1976:Core/Src/deca_device.c ****     }
 4669              		.loc 1 1976 16 is_stmt 0 view .LVU1080
 4670 0030 6FEA0030 		mvn	r0, r0, lsl #12
ARM GAS  /tmp/cctZ3fzX.s 			page 182


 4671              	.LVL466:
1976:Core/Src/deca_device.c ****     }
 4672              		.loc 1 1976 16 view .LVU1081
 4673 0034 6FEA1030 		mvn	r0, r0, lsr #12
 4674              	.LVL467:
 4675              	.L368:
1979:Core/Src/deca_device.c **** }
 4676              		.loc 1 1979 5 is_stmt 1 view .LVU1082
1980:Core/Src/deca_device.c **** 
 4677              		.loc 1 1980 1 is_stmt 0 view .LVU1083
 4678 0038 03B0     		add	sp, sp, #12
 4679              		.cfi_def_cfa_offset 4
 4680              		@ sp needed
 4681 003a 5DF804FB 		ldr	pc, [sp], #4
 4682              	.L371:
 4683 003e 00BF     		.align	2
 4684              	.L370:
 4685 0040 29000600 		.word	393257
 4686              		.cfi_endproc
 4687              	.LFE53:
 4689              		.section	.text.dwt_readstsquality,"ax",%progbits
 4690              		.align	1
 4691              		.global	dwt_readstsquality
 4692              		.syntax unified
 4693              		.thumb
 4694              		.thumb_func
 4695              		.fpu fpv4-sp-d16
 4697              	dwt_readstsquality:
 4698              	.LVL468:
 4699              	.LFB54:
1995:Core/Src/deca_device.c ****     uint16_t preambleCount;
 4700              		.loc 1 1995 1 is_stmt 1 view -0
 4701              		.cfi_startproc
 4702              		@ args = 0, pretend = 0, frame = 0
 4703              		@ frame_needed = 0, uses_anonymous_args = 0
1995:Core/Src/deca_device.c ****     uint16_t preambleCount;
 4704              		.loc 1 1995 1 is_stmt 0 view .LVU1085
 4705 0000 10B5     		push	{r4, lr}
 4706              		.cfi_def_cfa_offset 8
 4707              		.cfi_offset 4, -8
 4708              		.cfi_offset 14, -4
 4709 0002 0446     		mov	r4, r0
1996:Core/Src/deca_device.c **** 
 4710              		.loc 1 1996 5 is_stmt 1 view .LVU1086
1999:Core/Src/deca_device.c **** 
 4711              		.loc 1 1999 5 view .LVU1087
1999:Core/Src/deca_device.c **** 
 4712              		.loc 1 1999 21 is_stmt 0 view .LVU1088
 4713 0004 0021     		movs	r1, #0
 4714 0006 0948     		ldr	r0, .L375
 4715              	.LVL469:
1999:Core/Src/deca_device.c **** 
 4716              		.loc 1 1999 21 view .LVU1089
 4717 0008 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 4718              	.LVL470:
1999:Core/Src/deca_device.c **** 
 4719              		.loc 1 1999 19 view .LVU1090
ARM GAS  /tmp/cctZ3fzX.s 			page 183


 4720 000c C0F30B03 		ubfx	r3, r0, #0, #12
 4721              	.LVL471:
2001:Core/Src/deca_device.c ****         preambleCount |= STS_ACC_CP_QUAL_SIGNEXT;
 4722              		.loc 1 2001 5 is_stmt 1 view .LVU1091
2001:Core/Src/deca_device.c ****         preambleCount |= STS_ACC_CP_QUAL_SIGNEXT;
 4723              		.loc 1 2001 7 is_stmt 0 view .LVU1092
 4724 0010 10F4006F 		tst	r0, #2048
 4725 0014 01D0     		beq	.L373
2002:Core/Src/deca_device.c **** 
 4726              		.loc 1 2002 9 is_stmt 1 view .LVU1093
2002:Core/Src/deca_device.c **** 
 4727              		.loc 1 2002 23 is_stmt 0 view .LVU1094
 4728 0016 43F47043 		orr	r3, r3, #61440
 4729              	.LVL472:
 4730              	.L373:
2004:Core/Src/deca_device.c **** 
 4731              		.loc 1 2004 5 is_stmt 1 view .LVU1095
2004:Core/Src/deca_device.c **** 
 4732              		.loc 1 2004 26 is_stmt 0 view .LVU1096
 4733 001a 1BB2     		sxth	r3, r3
2004:Core/Src/deca_device.c **** 
 4734              		.loc 1 2004 24 view .LVU1097
 4735 001c 2380     		strh	r3, [r4]	@ movhi
2007:Core/Src/deca_device.c **** }
 4736              		.loc 1 2007 5 is_stmt 1 view .LVU1098
2007:Core/Src/deca_device.c **** }
 4737              		.loc 1 2007 55 is_stmt 0 view .LVU1099
 4738 001e 044A     		ldr	r2, .L375+4
 4739 0020 1268     		ldr	r2, [r2]
 4740 0022 B2F91200 		ldrsh	r0, [r2, #18]
2008:Core/Src/deca_device.c **** 
 4741              		.loc 1 2008 1 view .LVU1100
 4742 0026 181A     		subs	r0, r3, r0
 4743 0028 10BD     		pop	{r4, pc}
 4744              	.LVL473:
 4745              	.L376:
2008:Core/Src/deca_device.c **** 
 4746              		.loc 1 2008 1 view .LVU1101
 4747 002a 00BF     		.align	2
 4748              	.L375:
 4749 002c 08000200 		.word	131080
 4750 0030 00000000 		.word	.LANCHOR2
 4751              		.cfi_endproc
 4752              	.LFE54:
 4754              		.section	.text.dwt_readstsstatus,"ax",%progbits
 4755              		.align	1
 4756              		.global	dwt_readstsstatus
 4757              		.syntax unified
 4758              		.thumb
 4759              		.thumb_func
 4760              		.fpu fpv4-sp-d16
 4762              	dwt_readstsstatus:
 4763              	.LVL474:
 4764              	.LFB55:
2022:Core/Src/deca_device.c ****     int ret = DWT_SUCCESS;
 4765              		.loc 1 2022 1 is_stmt 1 view -0
 4766              		.cfi_startproc
ARM GAS  /tmp/cctZ3fzX.s 			page 184


 4767              		@ args = 0, pretend = 0, frame = 0
 4768              		@ frame_needed = 0, uses_anonymous_args = 0
2022:Core/Src/deca_device.c ****     int ret = DWT_SUCCESS;
 4769              		.loc 1 2022 1 is_stmt 0 view .LVU1103
 4770 0000 10B5     		push	{r4, lr}
 4771              		.cfi_def_cfa_offset 8
 4772              		.cfi_offset 4, -8
 4773              		.cfi_offset 14, -4
 4774 0002 0446     		mov	r4, r0
2023:Core/Src/deca_device.c ****     uint32_t stsStatusRegAdd = (sts_num == 1) ? BUF0_STS1_STAT : BUF0_STS_STAT;
 4775              		.loc 1 2023 5 is_stmt 1 view .LVU1104
 4776              	.LVL475:
2024:Core/Src/deca_device.c ****     uint32_t stsStatusRegAddN = (sts_num == 1) ? STS1_TOA_HI_ID : STS_TOA_HI_ID;
 4777              		.loc 1 2024 5 view .LVU1105
2024:Core/Src/deca_device.c ****     uint32_t stsStatusRegAddN = (sts_num == 1) ? STS1_TOA_HI_ID : STS_TOA_HI_ID;
 4778              		.loc 1 2024 64 is_stmt 0 view .LVU1106
 4779 0004 0129     		cmp	r1, #1
 4780 0006 17D0     		beq	.L388
 4781 0008 154A     		ldr	r2, .L390
 4782              	.L378:
 4783              	.LVL476:
2025:Core/Src/deca_device.c **** 
 4784              		.loc 1 2025 5 is_stmt 1 discriminator 4 view .LVU1107
2025:Core/Src/deca_device.c **** 
 4785              		.loc 1 2025 65 is_stmt 0 discriminator 4 view .LVU1108
 4786 000a 0129     		cmp	r1, #1
 4787 000c 16D0     		beq	.L389
2025:Core/Src/deca_device.c **** 
 4788              		.loc 1 2025 65 view .LVU1109
 4789 000e 4FF00C10 		mov	r0, #786444
 4790              	.LVL477:
 4791              	.L379:
2027:Core/Src/deca_device.c ****     {
 4792              		.loc 1 2027 5 is_stmt 1 discriminator 4 view .LVU1110
2027:Core/Src/deca_device.c ****     {
 4793              		.loc 1 2027 25 is_stmt 0 discriminator 4 view .LVU1111
 4794 0012 144B     		ldr	r3, .L390+4
 4795 0014 1B68     		ldr	r3, [r3]
 4796 0016 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
2027:Core/Src/deca_device.c ****     {
 4797              		.loc 1 2027 5 discriminator 4 view .LVU1112
 4798 0018 012B     		cmp	r3, #1
 4799 001a 11D0     		beq	.L380
2027:Core/Src/deca_device.c ****     {
 4800              		.loc 1 2027 5 view .LVU1113
 4801 001c 032B     		cmp	r3, #3
 4802 001e 16D1     		bne	.L381
2031:Core/Src/deca_device.c ****         break;
 4803              		.loc 1 2031 9 is_stmt 1 view .LVU1114
2031:Core/Src/deca_device.c ****         break;
 4804              		.loc 1 2031 22 is_stmt 0 view .LVU1115
 4805 0020 1149     		ldr	r1, .L390+8
 4806              	.LVL478:
2031:Core/Src/deca_device.c ****         break;
 4807              		.loc 1 2031 22 view .LVU1116
 4808 0022 1144     		add	r1, r1, r2
 4809 0024 4FF4F010 		mov	r0, #1966080
ARM GAS  /tmp/cctZ3fzX.s 			page 185


 4810              	.LVL479:
2031:Core/Src/deca_device.c ****         break;
 4811              		.loc 1 2031 22 view .LVU1117
 4812 0028 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 4813              	.LVL480:
2031:Core/Src/deca_device.c ****         break;
 4814              		.loc 1 2031 20 view .LVU1118
 4815 002c C009     		lsrs	r0, r0, #7
 4816 002e 2080     		strh	r0, [r4]	@ movhi
2032:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
 4817              		.loc 1 2032 9 is_stmt 1 view .LVU1119
 4818              	.L382:
2042:Core/Src/deca_device.c ****         ret = DWT_ERROR;
 4819              		.loc 1 2042 5 view .LVU1120
2042:Core/Src/deca_device.c ****         ret = DWT_ERROR;
 4820              		.loc 1 2042 9 is_stmt 0 view .LVU1121
 4821 0030 2388     		ldrh	r3, [r4]
2042:Core/Src/deca_device.c ****         ret = DWT_ERROR;
 4822              		.loc 1 2042 8 view .LVU1122
 4823 0032 93B9     		cbnz	r3, .L386
2023:Core/Src/deca_device.c ****     uint32_t stsStatusRegAdd = (sts_num == 1) ? BUF0_STS1_STAT : BUF0_STS_STAT;
 4824              		.loc 1 2023 9 view .LVU1123
 4825 0034 0020     		movs	r0, #0
 4826              	.LVL481:
 4827              	.L377:
2046:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 4828              		.loc 1 2046 1 view .LVU1124
 4829 0036 10BD     		pop	{r4, pc}
 4830              	.LVL482:
 4831              	.L388:
2024:Core/Src/deca_device.c ****     uint32_t stsStatusRegAddN = (sts_num == 1) ? STS1_TOA_HI_ID : STS_TOA_HI_ID;
 4832              		.loc 1 2024 64 view .LVU1125
 4833 0038 0C4A     		ldr	r2, .L390+12
 4834 003a E6E7     		b	.L378
 4835              	.LVL483:
 4836              	.L389:
2025:Core/Src/deca_device.c **** 
 4837              		.loc 1 2025 65 view .LVU1126
 4838 003c 0C48     		ldr	r0, .L390+16
 4839              	.LVL484:
2025:Core/Src/deca_device.c **** 
 4840              		.loc 1 2025 65 view .LVU1127
 4841 003e E8E7     		b	.L379
 4842              	.LVL485:
 4843              	.L380:
2034:Core/Src/deca_device.c ****         break;
 4844              		.loc 1 2034 9 is_stmt 1 view .LVU1128
2034:Core/Src/deca_device.c ****         break;
 4845              		.loc 1 2034 23 is_stmt 0 view .LVU1129
 4846 0040 0221     		movs	r1, #2
 4847              	.LVL486:
2034:Core/Src/deca_device.c ****         break;
 4848              		.loc 1 2034 23 view .LVU1130
 4849 0042 1046     		mov	r0, r2
 4850              	.LVL487:
2034:Core/Src/deca_device.c ****         break;
 4851              		.loc 1 2034 23 view .LVU1131
ARM GAS  /tmp/cctZ3fzX.s 			page 186


 4852 0044 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 4853              	.LVL488:
2034:Core/Src/deca_device.c ****         break;
 4854              		.loc 1 2034 20 view .LVU1132
 4855 0048 C009     		lsrs	r0, r0, #7
 4856 004a 2080     		strh	r0, [r4]	@ movhi
2035:Core/Src/deca_device.c ****     default:
 4857              		.loc 1 2035 9 is_stmt 1 view .LVU1133
 4858 004c F0E7     		b	.L382
 4859              	.LVL489:
 4860              	.L381:
2037:Core/Src/deca_device.c ****         break;
 4861              		.loc 1 2037 9 view .LVU1134
2037:Core/Src/deca_device.c ****         break;
 4862              		.loc 1 2037 23 is_stmt 0 view .LVU1135
 4863 004e 0221     		movs	r1, #2
 4864              	.LVL490:
2037:Core/Src/deca_device.c ****         break;
 4865              		.loc 1 2037 23 view .LVU1136
 4866 0050 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 4867              	.LVL491:
2037:Core/Src/deca_device.c ****         break;
 4868              		.loc 1 2037 20 view .LVU1137
 4869 0054 C009     		lsrs	r0, r0, #7
 4870 0056 2080     		strh	r0, [r4]	@ movhi
2038:Core/Src/deca_device.c ****     }
 4871              		.loc 1 2038 9 is_stmt 1 view .LVU1138
 4872 0058 EAE7     		b	.L382
 4873              	.L386:
2043:Core/Src/deca_device.c **** 
 4874              		.loc 1 2043 13 is_stmt 0 view .LVU1139
 4875 005a 4FF0FF30 		mov	r0, #-1
 4876              	.LVL492:
2045:Core/Src/deca_device.c **** }
 4877              		.loc 1 2045 5 is_stmt 1 view .LVU1140
2045:Core/Src/deca_device.c **** }
 4878              		.loc 1 2045 12 is_stmt 0 view .LVU1141
 4879 005e EAE7     		b	.L377
 4880              	.L391:
 4881              		.align	2
 4882              	.L390:
 4883 0060 2C001800 		.word	1572908
 4884 0064 00000000 		.word	.LANCHOR2
 4885 0068 0200E8FF 		.word	-1572862
 4886 006c 34001800 		.word	1572916
 4887 0070 14000C00 		.word	786452
 4888              		.cfi_endproc
 4889              	.LFE55:
 4891              		.section	.text.dwt_readdiagnostics,"ax",%progbits
 4892              		.align	1
 4893              		.global	dwt_readdiagnostics
 4894              		.syntax unified
 4895              		.thumb
 4896              		.thumb_func
 4897              		.fpu fpv4-sp-d16
 4899              	dwt_readdiagnostics:
 4900              	.LVL493:
ARM GAS  /tmp/cctZ3fzX.s 			page 187


 4901              	.LFB56:
2075:Core/Src/deca_device.c ****     int i;
 4902              		.loc 1 2075 1 is_stmt 1 view -0
 4903              		.cfi_startproc
 4904              		@ args = 0, pretend = 0, frame = 232
 4905              		@ frame_needed = 0, uses_anonymous_args = 0
2075:Core/Src/deca_device.c ****     int i;
 4906              		.loc 1 2075 1 is_stmt 0 view .LVU1143
 4907 0000 10B5     		push	{r4, lr}
 4908              		.cfi_def_cfa_offset 8
 4909              		.cfi_offset 4, -8
 4910              		.cfi_offset 14, -4
 4911 0002 BAB0     		sub	sp, sp, #232
 4912              		.cfi_def_cfa_offset 240
 4913 0004 0446     		mov	r4, r0
2076:Core/Src/deca_device.c ****     int offset_0xd;
 4914              		.loc 1 2076 5 is_stmt 1 view .LVU1144
2077:Core/Src/deca_device.c ****     int offset_buff = BUF0_RX_FINFO;
 4915              		.loc 1 2077 5 view .LVU1145
2078:Core/Src/deca_device.c ****     uint8_t temp[DB_MAX_DIAG_SIZE];  //address from 0xC0000 to 0xD0068 (108*2 bytes) - when using n
 4916              		.loc 1 2078 5 view .LVU1146
 4917              	.LVL494:
2079:Core/Src/deca_device.c **** 
 4918              		.loc 1 2079 5 view .LVU1147
2083:Core/Src/deca_device.c ****     {
 4919              		.loc 1 2083 5 view .LVU1148
2083:Core/Src/deca_device.c ****     {
 4920              		.loc 1 2083 25 is_stmt 0 view .LVU1149
 4921 0006 3F4B     		ldr	r3, .L417
 4922 0008 1A68     		ldr	r2, [r3]
 4923 000a D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
2083:Core/Src/deca_device.c ****     {
 4924              		.loc 1 2083 5 view .LVU1150
 4925 000c 012B     		cmp	r3, #1
 4926 000e 13D0     		beq	.L412
 4927 0010 032B     		cmp	r3, #3
 4928 0012 40F0DE81 		bne	.L394
2086:Core/Src/deca_device.c ****         __attribute__ ((fallthrough));
 4929              		.loc 1 2086 21 view .LVU1151
 4930 0016 3C48     		ldr	r0, .L417+4
 4931              	.LVL495:
 4932              	.L393:
2087:Core/Src/deca_device.c ****         //no break
 4933              		.loc 1 2087 9 is_stmt 1 view .LVU1152
2091:Core/Src/deca_device.c ****         {
 4934              		.loc 1 2091 9 view .LVU1153
2091:Core/Src/deca_device.c ****         {
 4935              		.loc 1 2091 12 is_stmt 0 view .LVU1154
 4936 0018 032B     		cmp	r3, #3
 4937 001a 10D0     		beq	.L414
2111:Core/Src/deca_device.c ****             {
 4938              		.loc 1 2111 13 is_stmt 1 view .LVU1155
2111:Core/Src/deca_device.c ****             {
 4939              		.loc 1 2111 29 is_stmt 0 view .LVU1156
 4940 001c 937D     		ldrb	r3, [r2, #22]	@ zero_extendqisi2
2111:Core/Src/deca_device.c ****             {
 4941              		.loc 1 2111 16 view .LVU1157
ARM GAS  /tmp/cctZ3fzX.s 			page 188


 4942 001e 13F0080F 		tst	r3, #8
 4943 0022 2BD1     		bne	.L415
2115:Core/Src/deca_device.c ****             {
 4944              		.loc 1 2115 18 is_stmt 1 view .LVU1158
2115:Core/Src/deca_device.c ****             {
 4945              		.loc 1 2115 21 is_stmt 0 view .LVU1159
 4946 0024 13F0040F 		tst	r3, #4
 4947 0028 2ED0     		beq	.L400
2117:Core/Src/deca_device.c ****             }
 4948              		.loc 1 2117 17 is_stmt 1 view .LVU1160
 4949 002a 6B46     		mov	r3, sp
 4950 002c 3822     		movs	r2, #56
 4951 002e 0021     		movs	r1, #0
 4952 0030 FFF7FEFF 		bl	dwt_readfromdevice
 4953              	.LVL496:
 4954              	.L397:
2086:Core/Src/deca_device.c ****         __attribute__ ((fallthrough));
 4955              		.loc 1 2086 21 is_stmt 0 discriminator 1 view .LVU1161
 4956 0034 0023     		movs	r3, #0
 4957 0036 35E0     		b	.L401
 4958              	.LVL497:
 4959              	.L412:
2083:Core/Src/deca_device.c ****     {
 4960              		.loc 1 2083 5 view .LVU1162
 4961 0038 4FF4C010 		mov	r0, #1572864
 4962              	.LVL498:
2083:Core/Src/deca_device.c ****     {
 4963              		.loc 1 2083 5 view .LVU1163
 4964 003c ECE7     		b	.L393
 4965              	.LVL499:
 4966              	.L414:
2096:Core/Src/deca_device.c ****             {
 4967              		.loc 1 2096 13 is_stmt 1 view .LVU1164
2096:Core/Src/deca_device.c ****             {
 4968              		.loc 1 2096 29 is_stmt 0 view .LVU1165
 4969 003e 937D     		ldrb	r3, [r2, #22]	@ zero_extendqisi2
2096:Core/Src/deca_device.c ****             {
 4970              		.loc 1 2096 16 view .LVU1166
 4971 0040 13F0080F 		tst	r3, #8
 4972 0044 0AD1     		bne	.L416
2100:Core/Src/deca_device.c ****             {
 4973              		.loc 1 2100 18 is_stmt 1 view .LVU1167
2100:Core/Src/deca_device.c ****             {
 4974              		.loc 1 2100 21 is_stmt 0 view .LVU1168
 4975 0046 13F0040F 		tst	r3, #4
 4976 004a 0FD0     		beq	.L398
2102:Core/Src/deca_device.c ****             }
 4977              		.loc 1 2102 17 is_stmt 1 view .LVU1169
 4978 004c 6B46     		mov	r3, sp
 4979 004e 3822     		movs	r2, #56
 4980 0050 0021     		movs	r1, #0
 4981 0052 4FF4F010 		mov	r0, #1966080
 4982              	.LVL500:
2102:Core/Src/deca_device.c ****             }
 4983              		.loc 1 2102 17 is_stmt 0 view .LVU1170
 4984 0056 FFF7FEFF 		bl	dwt_readfromdevice
 4985              	.LVL501:
ARM GAS  /tmp/cctZ3fzX.s 			page 189


 4986 005a EBE7     		b	.L397
 4987              	.LVL502:
 4988              	.L416:
2098:Core/Src/deca_device.c ****             }
 4989              		.loc 1 2098 17 is_stmt 1 view .LVU1171
 4990 005c 6B46     		mov	r3, sp
 4991 005e E822     		movs	r2, #232
 4992 0060 0021     		movs	r1, #0
 4993 0062 4FF4F010 		mov	r0, #1966080
 4994              	.LVL503:
2098:Core/Src/deca_device.c ****             }
 4995              		.loc 1 2098 17 is_stmt 0 view .LVU1172
 4996 0066 FFF7FEFF 		bl	dwt_readfromdevice
 4997              	.LVL504:
 4998 006a E3E7     		b	.L397
 4999              	.LVL505:
 5000              	.L398:
2106:Core/Src/deca_device.c ****             }
 5001              		.loc 1 2106 17 is_stmt 1 view .LVU1173
 5002 006c 6B46     		mov	r3, sp
 5003 006e 2022     		movs	r2, #32
 5004 0070 0021     		movs	r1, #0
 5005 0072 4FF4F010 		mov	r0, #1966080
 5006              	.LVL506:
2106:Core/Src/deca_device.c ****             }
 5007              		.loc 1 2106 17 is_stmt 0 view .LVU1174
 5008 0076 FFF7FEFF 		bl	dwt_readfromdevice
 5009              	.LVL507:
 5010 007a DBE7     		b	.L397
 5011              	.LVL508:
 5012              	.L415:
2113:Core/Src/deca_device.c ****             }
 5013              		.loc 1 2113 17 is_stmt 1 view .LVU1175
 5014 007c 6B46     		mov	r3, sp
 5015 007e E822     		movs	r2, #232
 5016 0080 0021     		movs	r1, #0
 5017 0082 FFF7FEFF 		bl	dwt_readfromdevice
 5018              	.LVL509:
2113:Core/Src/deca_device.c ****             }
 5019              		.loc 1 2113 17 is_stmt 0 view .LVU1176
 5020 0086 D5E7     		b	.L397
 5021              	.LVL510:
 5022              	.L400:
2121:Core/Src/deca_device.c ****             }
 5023              		.loc 1 2121 17 is_stmt 1 view .LVU1177
 5024 0088 6B46     		mov	r3, sp
 5025 008a 2022     		movs	r2, #32
 5026 008c 0021     		movs	r1, #0
 5027 008e FFF7FEFF 		bl	dwt_readfromdevice
 5028              	.LVL511:
2121:Core/Src/deca_device.c ****             }
 5029              		.loc 1 2121 17 is_stmt 0 view .LVU1178
 5030 0092 CFE7     		b	.L397
 5031              	.LVL512:
 5032              	.L402:
2127:Core/Src/deca_device.c ****         }
 5033              		.loc 1 2127 13 is_stmt 1 discriminator 3 view .LVU1179
ARM GAS  /tmp/cctZ3fzX.s 			page 190


2127:Core/Src/deca_device.c ****         }
 5034              		.loc 1 2127 40 is_stmt 0 discriminator 3 view .LVU1180
 5035 0094 03F1F802 		add	r2, r3, #248
 5036 0098 6A44     		add	r2, sp, r2
 5037 009a 12F8E81C 		ldrb	r1, [r2, #-232]	@ zero_extendqisi2
2127:Core/Src/deca_device.c ****         }
 5038              		.loc 1 2127 34 discriminator 3 view .LVU1181
 5039 009e E218     		adds	r2, r4, r3
 5040 00a0 1177     		strb	r1, [r2, #28]
2125:Core/Src/deca_device.c ****         {
 5041              		.loc 1 2125 48 is_stmt 1 discriminator 3 view .LVU1182
2125:Core/Src/deca_device.c ****         {
 5042              		.loc 1 2125 49 is_stmt 0 discriminator 3 view .LVU1183
 5043 00a2 0133     		adds	r3, r3, #1
 5044              	.LVL513:
 5045              	.L401:
2125:Core/Src/deca_device.c ****         {
 5046              		.loc 1 2125 21 is_stmt 1 discriminator 1 view .LVU1184
2125:Core/Src/deca_device.c ****         {
 5047              		.loc 1 2125 9 is_stmt 0 discriminator 1 view .LVU1185
 5048 00a4 052B     		cmp	r3, #5
 5049 00a6 F5DD     		ble	.L402
2130:Core/Src/deca_device.c **** 
 5050              		.loc 1 2130 9 is_stmt 1 view .LVU1186
2130:Core/Src/deca_device.c **** 
 5051              		.loc 1 2130 49 is_stmt 0 view .LVU1187
 5052 00a8 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
2130:Core/Src/deca_device.c **** 
 5053              		.loc 1 2130 98 view .LVU1188
 5054 00ac 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 5055              	.LVL514:
2130:Core/Src/deca_device.c **** 
 5056              		.loc 1 2130 92 view .LVU1189
 5057 00b0 43EA0223 		orr	r3, r3, r2, lsl #8
2130:Core/Src/deca_device.c **** 
 5058              		.loc 1 2130 133 view .LVU1190
 5059 00b4 C3F30C03 		ubfx	r3, r3, #0, #13
2130:Core/Src/deca_device.c **** 
 5060              		.loc 1 2130 33 view .LVU1191
 5061 00b8 A384     		strh	r3, [r4, #36]	@ movhi
2132:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5062              		.loc 1 2132 9 is_stmt 1 view .LVU1192
2132:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5063              		.loc 1 2132 43 is_stmt 0 view .LVU1193
 5064 00ba 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
2132:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5065              		.loc 1 2132 86 view .LVU1194
 5066 00be 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
2132:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5067              		.loc 1 2132 80 view .LVU1195
 5068 00c2 43EA0223 		orr	r3, r3, r2, lsl #8
2132:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5069              		.loc 1 2132 119 view .LVU1196
 5070 00c6 C3F30D03 		ubfx	r3, r3, #0, #14
2132:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5071              		.loc 1 2132 27 view .LVU1197
 5072 00ca 6384     		strh	r3, [r4, #34]	@ movhi
ARM GAS  /tmp/cctZ3fzX.s 			page 191


2133:Core/Src/deca_device.c **** 
 5073              		.loc 1 2133 9 is_stmt 1 view .LVU1198
2133:Core/Src/deca_device.c **** 
 5074              		.loc 1 2133 12 is_stmt 0 view .LVU1199
 5075 00cc 13F4005F 		tst	r3, #8192
 5076 00d0 04D0     		beq	.L403
2133:Core/Src/deca_device.c **** 
 5077              		.loc 1 2133 41 is_stmt 1 discriminator 1 view .LVU1200
2133:Core/Src/deca_device.c **** 
 5078              		.loc 1 2133 59 is_stmt 0 discriminator 1 view .LVU1201
 5079 00d2 6FEA8343 		mvn	r3, r3, lsl #18
 5080 00d6 6FEA9343 		mvn	r3, r3, lsr #18
 5081 00da 6384     		strh	r3, [r4, #34]	@ movhi
 5082              	.L403:
2135:Core/Src/deca_device.c **** 
 5083              		.loc 1 2135 9 is_stmt 1 view .LVU1202
2135:Core/Src/deca_device.c **** 
 5084              		.loc 1 2135 56 is_stmt 0 view .LVU1203
 5085 00dc 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
2135:Core/Src/deca_device.c **** 
 5086              		.loc 1 2135 105 view .LVU1204
 5087 00e0 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
2135:Core/Src/deca_device.c **** 
 5088              		.loc 1 2135 99 view .LVU1205
 5089 00e4 43EA0223 		orr	r3, r3, r2, lsl #8
2135:Core/Src/deca_device.c **** 
 5090              		.loc 1 2135 140 view .LVU1206
 5091 00e8 C3F30B03 		ubfx	r3, r3, #0, #12
2135:Core/Src/deca_device.c **** 
 5092              		.loc 1 2135 39 view .LVU1207
 5093 00ec A4F84230 		strh	r3, [r4, #66]	@ movhi
2137:Core/Src/deca_device.c ****             break;
 5094              		.loc 1 2137 9 is_stmt 1 view .LVU1208
2137:Core/Src/deca_device.c ****             break;
 5095              		.loc 1 2137 25 is_stmt 0 view .LVU1209
 5096 00f0 044B     		ldr	r3, .L417
 5097 00f2 1868     		ldr	r0, [r3]
 5098 00f4 837D     		ldrb	r3, [r0, #22]	@ zero_extendqisi2
2137:Core/Src/deca_device.c ****             break;
 5099              		.loc 1 2137 12 view .LVU1210
 5100 00f6 13F0020F 		tst	r3, #2
 5101 00fa 40F06881 		bne	.L392
2140:Core/Src/deca_device.c ****         {
 5102              		.loc 1 2140 16 view .LVU1211
 5103 00fe 0023     		movs	r3, #0
 5104 0100 18E0     		b	.L405
 5105              	.L418:
 5106 0102 00BF     		.align	2
 5107              	.L417:
 5108 0104 00000000 		.word	.LANCHOR2
 5109 0108 E8001800 		.word	1573096
 5110              	.LVL515:
 5111              	.L406:
2142:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + BUF0_STS_TS - BUF0_RX_FINFO];    // RX timestamp f
 5112              		.loc 1 2142 13 is_stmt 1 discriminator 3 view .LVU1212
2142:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + BUF0_STS_TS - BUF0_RX_FINFO];    // RX timestamp f
 5113              		.loc 1 2142 48 is_stmt 0 discriminator 3 view .LVU1213
ARM GAS  /tmp/cctZ3fzX.s 			page 192


 5114 010c 03F58472 		add	r2, r3, #264
 5115 0110 6A44     		add	r2, sp, r2
 5116 0112 12F8E82C 		ldrb	r2, [r2, #-232]	@ zero_extendqisi2
2142:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + BUF0_STS_TS - BUF0_RX_FINFO];    // RX timestamp f
 5117              		.loc 1 2142 42 discriminator 3 view .LVU1214
 5118 0116 E254     		strb	r2, [r4, r3]
2143:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + BUF0_STS1_TS - BUF0_RX_FINFO];  // RX timestamp f
 5119              		.loc 1 2143 13 is_stmt 1 discriminator 3 view .LVU1215
2143:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + BUF0_STS1_TS - BUF0_RX_FINFO];  // RX timestamp f
 5120              		.loc 1 2143 45 is_stmt 0 discriminator 3 view .LVU1216
 5121 0118 03F58872 		add	r2, r3, #272
 5122 011c 6A44     		add	r2, sp, r2
 5123 011e 12F8E82C 		ldrb	r2, [r2, #-232]	@ zero_extendqisi2
2143:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + BUF0_STS1_TS - BUF0_RX_FINFO];  // RX timestamp f
 5124              		.loc 1 2143 39 discriminator 3 view .LVU1217
 5125 0122 E118     		adds	r1, r4, r3
 5126 0124 0A72     		strb	r2, [r1, #8]
2144:Core/Src/deca_device.c ****         }
 5127              		.loc 1 2144 13 is_stmt 1 discriminator 3 view .LVU1218
2144:Core/Src/deca_device.c ****         }
 5128              		.loc 1 2144 46 is_stmt 0 discriminator 3 view .LVU1219
 5129 0126 03F58C72 		add	r2, r3, #280
 5130 012a 6A44     		add	r2, sp, r2
 5131 012c 12F8E82C 		ldrb	r2, [r2, #-232]	@ zero_extendqisi2
2144:Core/Src/deca_device.c ****         }
 5132              		.loc 1 2144 40 discriminator 3 view .LVU1220
 5133 0130 8A74     		strb	r2, [r1, #18]
2140:Core/Src/deca_device.c ****         {
 5134              		.loc 1 2140 44 is_stmt 1 discriminator 3 view .LVU1221
2140:Core/Src/deca_device.c ****         {
 5135              		.loc 1 2140 45 is_stmt 0 discriminator 3 view .LVU1222
 5136 0132 0133     		adds	r3, r3, #1
 5137              	.LVL516:
 5138              	.L405:
2140:Core/Src/deca_device.c ****         {
 5139              		.loc 1 2140 21 is_stmt 1 discriminator 1 view .LVU1223
2140:Core/Src/deca_device.c ****         {
 5140              		.loc 1 2140 9 is_stmt 0 discriminator 1 view .LVU1224
 5141 0134 042B     		cmp	r3, #4
 5142 0136 E9DD     		ble	.L406
2146:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[BUF0_IP_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_IP
 5143              		.loc 1 2146 9 is_stmt 1 view .LVU1225
2146:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[BUF0_IP_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_IP
 5144              		.loc 1 2146 43 is_stmt 0 view .LVU1226
 5145 0138 9DF82220 		ldrb	r2, [sp, #34]	@ zero_extendqisi2
2146:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[BUF0_IP_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_IP
 5146              		.loc 1 2146 37 view .LVU1227
 5147 013c 6271     		strb	r2, [r4, #5]
2147:Core/Src/deca_device.c **** 
 5148              		.loc 1 2147 9 is_stmt 1 view .LVU1228
2147:Core/Src/deca_device.c **** 
 5149              		.loc 1 2147 92 is_stmt 0 view .LVU1229
 5150 013e 9DF82130 		ldrb	r3, [sp, #33]	@ zero_extendqisi2
 5151              	.LVL517:
2147:Core/Src/deca_device.c **** 
 5152              		.loc 1 2147 86 view .LVU1230
 5153 0142 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/cctZ3fzX.s 			page 193


2147:Core/Src/deca_device.c **** 
 5154              		.loc 1 2147 32 view .LVU1231
 5155 0146 E380     		strh	r3, [r4, #6]	@ movhi
2149:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[BUF0_STS_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_STS_
 5156              		.loc 1 2149 9 is_stmt 1 view .LVU1232
2149:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[BUF0_STS_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_STS_
 5157              		.loc 1 2149 40 is_stmt 0 view .LVU1233
 5158 0148 9DF82A20 		ldrb	r2, [sp, #42]	@ zero_extendqisi2
2149:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[BUF0_STS_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_STS_
 5159              		.loc 1 2149 34 view .LVU1234
 5160 014c E281     		strh	r2, [r4, #14]	@ movhi
2150:Core/Src/deca_device.c **** 
 5161              		.loc 1 2150 9 is_stmt 1 view .LVU1235
2150:Core/Src/deca_device.c **** 
 5162              		.loc 1 2150 90 is_stmt 0 view .LVU1236
 5163 014e 9DF82930 		ldrb	r3, [sp, #41]	@ zero_extendqisi2
2150:Core/Src/deca_device.c **** 
 5164              		.loc 1 2150 84 view .LVU1237
 5165 0152 43EA0223 		orr	r3, r3, r2, lsl #8
2150:Core/Src/deca_device.c **** 
 5166              		.loc 1 2150 29 view .LVU1238
 5167 0156 2382     		strh	r3, [r4, #16]	@ movhi
2152:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[BUF0_STS1_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_ST
 5168              		.loc 1 2152 9 is_stmt 1 view .LVU1239
2152:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[BUF0_STS1_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_ST
 5169              		.loc 1 2152 41 is_stmt 0 view .LVU1240
 5170 0158 9DF83220 		ldrb	r2, [sp, #50]	@ zero_extendqisi2
2152:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[BUF0_STS1_TS - BUF0_RX_FINFO + 2] << 8 | temp[BUF0_ST
 5171              		.loc 1 2152 35 view .LVU1241
 5172 015c 2283     		strh	r2, [r4, #24]	@ movhi
2153:Core/Src/deca_device.c **** 
 5173              		.loc 1 2153 9 is_stmt 1 view .LVU1242
2153:Core/Src/deca_device.c **** 
 5174              		.loc 1 2153 92 is_stmt 0 view .LVU1243
 5175 015e 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
2153:Core/Src/deca_device.c **** 
 5176              		.loc 1 2153 86 view .LVU1244
 5177 0162 43EA0223 		orr	r3, r3, r2, lsl #8
2153:Core/Src/deca_device.c **** 
 5178              		.loc 1 2153 30 view .LVU1245
 5179 0166 6383     		strh	r3, [r4, #26]	@ movhi
2155:Core/Src/deca_device.c ****             break;
 5180              		.loc 1 2155 9 is_stmt 1 view .LVU1246
2155:Core/Src/deca_device.c ****             break;
 5181              		.loc 1 2155 25 is_stmt 0 view .LVU1247
 5182 0168 837D     		ldrb	r3, [r0, #22]	@ zero_extendqisi2
2155:Core/Src/deca_device.c ****             break;
 5183              		.loc 1 2155 12 view .LVU1248
 5184 016a 13F0040F 		tst	r3, #4
 5185 016e 40F02E81 		bne	.L392
2158:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_CIA_DI
 5186              		.loc 1 2158 9 is_stmt 1 view .LVU1249
2158:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_CIA_DI
 5187              		.loc 1 2158 48 is_stmt 0 view .LVU1250
 5188 0172 9DF83B20 		ldrb	r2, [sp, #59]	@ zero_extendqisi2
2158:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_CIA_DI
 5189              		.loc 1 2158 108 view .LVU1251
ARM GAS  /tmp/cctZ3fzX.s 			page 194


 5190 0176 9DF83A30 		ldrb	r3, [sp, #58]	@ zero_extendqisi2
2158:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_CIA_DI
 5191              		.loc 1 2158 146 view .LVU1252
 5192 017a 1B04     		lsls	r3, r3, #16
2158:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_CIA_DI
 5193              		.loc 1 2158 92 view .LVU1253
 5194 017c 43EA0263 		orr	r3, r3, r2, lsl #24
2159:Core/Src/deca_device.c **** 
 5195              		.loc 1 2159 29 view .LVU1254
 5196 0180 9DF83920 		ldrb	r2, [sp, #57]	@ zero_extendqisi2
2159:Core/Src/deca_device.c **** 
 5197              		.loc 1 2159 13 view .LVU1255
 5198 0184 43EA0223 		orr	r3, r3, r2, lsl #8
2159:Core/Src/deca_device.c **** 
 5199              		.loc 1 2159 88 view .LVU1256
 5200 0188 9DF83820 		ldrb	r2, [sp, #56]	@ zero_extendqisi2
2159:Core/Src/deca_device.c **** 
 5201              		.loc 1 2159 72 view .LVU1257
 5202 018c 1343     		orrs	r3, r3, r2
2159:Core/Src/deca_device.c **** 
 5203              		.loc 1 2159 123 view .LVU1258
 5204 018e 23F06043 		bic	r3, r3, #-536870912
2158:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_CIA_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_CIA_DI
 5205              		.loc 1 2158 31 view .LVU1259
 5206 0192 A362     		str	r3, [r4, #40]
2162:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5207              		.loc 1 2162 9 is_stmt 1 view .LVU1260
2162:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5208              		.loc 1 2162 50 is_stmt 0 view .LVU1261
 5209 0194 9DF83F20 		ldrb	r2, [sp, #63]	@ zero_extendqisi2
2162:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5210              		.loc 1 2162 109 view .LVU1262
 5211 0198 9DF83E30 		ldrb	r3, [sp, #62]	@ zero_extendqisi2
2162:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5212              		.loc 1 2162 146 view .LVU1263
 5213 019c 1B04     		lsls	r3, r3, #16
2162:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5214              		.loc 1 2162 93 view .LVU1264
 5215 019e 43EA0263 		orr	r3, r3, r2, lsl #24
2163:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 3] << 24 | (uin
 5216              		.loc 1 2163 29 view .LVU1265
 5217 01a2 9DF83D20 		ldrb	r2, [sp, #61]	@ zero_extendqisi2
2163:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 3] << 24 | (uin
 5218              		.loc 1 2163 13 view .LVU1266
 5219 01a6 43EA0223 		orr	r3, r3, r2, lsl #8
2163:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 3] << 24 | (uin
 5220              		.loc 1 2163 87 view .LVU1267
 5221 01aa 9DF83C20 		ldrb	r2, [sp, #60]	@ zero_extendqisi2
2163:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 3] << 24 | (uin
 5222              		.loc 1 2163 71 view .LVU1268
 5223 01ae 1343     		orrs	r3, r3, r2
2163:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 3] << 24 | (uin
 5224              		.loc 1 2163 121 view .LVU1269
 5225 01b0 23F00043 		bic	r3, r3, #-2147483648
2162:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5226              		.loc 1 2162 33 view .LVU1270
 5227 01b4 E362     		str	r3, [r4, #44]
ARM GAS  /tmp/cctZ3fzX.s 			page 195


2164:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5228              		.loc 1 2164 9 is_stmt 1 view .LVU1271
2164:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5229              		.loc 1 2164 51 is_stmt 0 view .LVU1272
 5230 01b6 9DF84320 		ldrb	r2, [sp, #67]	@ zero_extendqisi2
2164:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5231              		.loc 1 2164 110 view .LVU1273
 5232 01ba 9DF84230 		ldrb	r3, [sp, #66]	@ zero_extendqisi2
2164:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5233              		.loc 1 2164 147 view .LVU1274
 5234 01be 1B04     		lsls	r3, r3, #16
2164:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5235              		.loc 1 2164 94 view .LVU1275
 5236 01c0 43EA0263 		orr	r3, r3, r2, lsl #24
2165:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5237              		.loc 1 2165 29 view .LVU1276
 5238 01c4 9DF84120 		ldrb	r2, [sp, #65]	@ zero_extendqisi2
2165:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5239              		.loc 1 2165 13 view .LVU1277
 5240 01c8 43EA0223 		orr	r3, r3, r2, lsl #8
2165:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5241              		.loc 1 2165 87 view .LVU1278
 5242 01cc 9DF84020 		ldrb	r2, [sp, #64]	@ zero_extendqisi2
2165:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5243              		.loc 1 2165 71 view .LVU1279
 5244 01d0 1343     		orrs	r3, r3, r2
2165:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5245              		.loc 1 2165 121 view .LVU1280
 5246 01d2 C3F31003 		ubfx	r3, r3, #0, #17
2164:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5247              		.loc 1 2164 34 view .LVU1281
 5248 01d6 2363     		str	r3, [r4, #48]
2166:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5249              		.loc 1 2166 9 is_stmt 1 view .LVU1282
2166:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5250              		.loc 1 2166 48 is_stmt 0 view .LVU1283
 5251 01d8 9DF84720 		ldrb	r2, [sp, #71]	@ zero_extendqisi2
2166:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5252              		.loc 1 2166 107 view .LVU1284
 5253 01dc 9DF84630 		ldrb	r3, [sp, #70]	@ zero_extendqisi2
2166:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5254              		.loc 1 2166 144 view .LVU1285
 5255 01e0 1B04     		lsls	r3, r3, #16
2166:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5256              		.loc 1 2166 91 view .LVU1286
 5257 01e2 43EA0263 		orr	r3, r3, r2, lsl #24
2167:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5258              		.loc 1 2167 29 view .LVU1287
 5259 01e6 9DF84520 		ldrb	r2, [sp, #69]	@ zero_extendqisi2
2167:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5260              		.loc 1 2167 13 view .LVU1288
 5261 01ea 43EA0223 		orr	r3, r3, r2, lsl #8
2167:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5262              		.loc 1 2167 87 view .LVU1289
 5263 01ee 9DF84420 		ldrb	r2, [sp, #68]	@ zero_extendqisi2
2167:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5264              		.loc 1 2167 71 view .LVU1290
ARM GAS  /tmp/cctZ3fzX.s 			page 196


 5265 01f2 1343     		orrs	r3, r3, r2
2167:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5266              		.loc 1 2167 121 view .LVU1291
 5267 01f4 C3F31503 		ubfx	r3, r3, #0, #22
2166:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5268              		.loc 1 2166 31 view .LVU1292
 5269 01f8 6363     		str	r3, [r4, #52]
2168:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5270              		.loc 1 2168 9 is_stmt 1 view .LVU1293
2168:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5271              		.loc 1 2168 48 is_stmt 0 view .LVU1294
 5272 01fa 9DF84B20 		ldrb	r2, [sp, #75]	@ zero_extendqisi2
2168:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5273              		.loc 1 2168 107 view .LVU1295
 5274 01fe 9DF84A30 		ldrb	r3, [sp, #74]	@ zero_extendqisi2
2168:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5275              		.loc 1 2168 144 view .LVU1296
 5276 0202 1B04     		lsls	r3, r3, #16
2168:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5277              		.loc 1 2168 91 view .LVU1297
 5278 0204 43EA0263 		orr	r3, r3, r2, lsl #24
2169:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5279              		.loc 1 2169 29 view .LVU1298
 5280 0208 9DF84920 		ldrb	r2, [sp, #73]	@ zero_extendqisi2
2169:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5281              		.loc 1 2169 13 view .LVU1299
 5282 020c 43EA0223 		orr	r3, r3, r2, lsl #8
2169:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5283              		.loc 1 2169 87 view .LVU1300
 5284 0210 9DF84820 		ldrb	r2, [sp, #72]	@ zero_extendqisi2
2169:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5285              		.loc 1 2169 71 view .LVU1301
 5286 0214 1343     		orrs	r3, r3, r2
2169:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5287              		.loc 1 2169 121 view .LVU1302
 5288 0216 C3F31503 		ubfx	r3, r3, #0, #22
2168:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5289              		.loc 1 2168 31 view .LVU1303
 5290 021a A363     		str	r3, [r4, #56]
2170:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5291              		.loc 1 2170 9 is_stmt 1 view .LVU1304
2170:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5292              		.loc 1 2170 48 is_stmt 0 view .LVU1305
 5293 021c 9DF84F20 		ldrb	r2, [sp, #79]	@ zero_extendqisi2
2170:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5294              		.loc 1 2170 107 view .LVU1306
 5295 0220 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2
2170:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5296              		.loc 1 2170 144 view .LVU1307
 5297 0224 1B04     		lsls	r3, r3, #16
2170:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5298              		.loc 1 2170 91 view .LVU1308
 5299 0226 43EA0263 		orr	r3, r3, r2, lsl #24
2171:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[BUF0_IP_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp
 5300              		.loc 1 2171 29 view .LVU1309
 5301 022a 9DF84D20 		ldrb	r2, [sp, #77]	@ zero_extendqisi2
2171:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[BUF0_IP_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp
ARM GAS  /tmp/cctZ3fzX.s 			page 197


 5302              		.loc 1 2171 13 view .LVU1310
 5303 022e 43EA0223 		orr	r3, r3, r2, lsl #8
2171:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[BUF0_IP_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp
 5304              		.loc 1 2171 87 view .LVU1311
 5305 0232 9DF84C20 		ldrb	r2, [sp, #76]	@ zero_extendqisi2
2171:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[BUF0_IP_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp
 5306              		.loc 1 2171 71 view .LVU1312
 5307 0236 1343     		orrs	r3, r3, r2
2171:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[BUF0_IP_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp
 5308              		.loc 1 2171 121 view .LVU1313
 5309 0238 C3F31503 		ubfx	r3, r3, #0, #22
2170:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_IP_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_IP_DIAG
 5310              		.loc 1 2170 31 view .LVU1314
 5311 023c E363     		str	r3, [r4, #60]
2172:Core/Src/deca_device.c ****         
 5312              		.loc 1 2172 9 is_stmt 1 view .LVU1315
2172:Core/Src/deca_device.c ****         
 5313              		.loc 1 2172 52 is_stmt 0 view .LVU1316
 5314 023e 9DF85D20 		ldrb	r2, [sp, #93]	@ zero_extendqisi2
2172:Core/Src/deca_device.c ****         
 5315              		.loc 1 2172 100 view .LVU1317
 5316 0242 9DF85C30 		ldrb	r3, [sp, #92]	@ zero_extendqisi2
2172:Core/Src/deca_device.c ****         
 5317              		.loc 1 2172 94 view .LVU1318
 5318 0246 43EA0223 		orr	r3, r3, r2, lsl #8
2172:Core/Src/deca_device.c ****         
 5319              		.loc 1 2172 36 view .LVU1319
 5320 024a A4F84030 		strh	r3, [r4, #64]	@ movhi
2175:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5321              		.loc 1 2175 9 is_stmt 1 view .LVU1320
2175:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5322              		.loc 1 2175 47 is_stmt 0 view .LVU1321
 5323 024e 9DF86F20 		ldrb	r2, [sp, #111]	@ zero_extendqisi2
2175:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5324              		.loc 1 2175 107 view .LVU1322
 5325 0252 9DF86E30 		ldrb	r3, [sp, #110]	@ zero_extendqisi2
2175:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5326              		.loc 1 2175 145 view .LVU1323
 5327 0256 1B04     		lsls	r3, r3, #16
2175:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5328              		.loc 1 2175 91 view .LVU1324
 5329 0258 43EA0263 		orr	r3, r3, r2, lsl #24
2176:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[BUF0_STS_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[BU
 5330              		.loc 1 2176 29 view .LVU1325
 5331 025c 9DF86D20 		ldrb	r2, [sp, #109]	@ zero_extendqisi2
2176:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[BUF0_STS_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[BU
 5332              		.loc 1 2176 13 view .LVU1326
 5333 0260 43EA0223 		orr	r3, r3, r2, lsl #8
2176:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[BUF0_STS_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[BU
 5334              		.loc 1 2176 88 view .LVU1327
 5335 0264 9DF86C20 		ldrb	r2, [sp, #108]	@ zero_extendqisi2
2176:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[BUF0_STS_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[BU
 5336              		.loc 1 2176 72 view .LVU1328
 5337 0268 1343     		orrs	r3, r3, r2
2176:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[BUF0_STS_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[BU
 5338              		.loc 1 2176 123 view .LVU1329
 5339 026a 23F04043 		bic	r3, r3, #-1073741824
ARM GAS  /tmp/cctZ3fzX.s 			page 198


2175:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5340              		.loc 1 2175 30 view .LVU1330
 5341 026e 6364     		str	r3, [r4, #68]
2177:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5342              		.loc 1 2177 9 is_stmt 1 view .LVU1331
2177:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5343              		.loc 1 2177 48 is_stmt 0 view .LVU1332
 5344 0270 9DF87120 		ldrb	r2, [sp, #113]	@ zero_extendqisi2
2177:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5345              		.loc 1 2177 97 view .LVU1333
 5346 0274 9DF87030 		ldrb	r3, [sp, #112]	@ zero_extendqisi2
2177:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5347              		.loc 1 2177 91 view .LVU1334
 5348 0278 43EA0223 		orr	r3, r3, r2, lsl #8
2177:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5349              		.loc 1 2177 31 view .LVU1335
 5350 027c A4F84830 		strh	r3, [r4, #72]	@ movhi
2178:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5351              		.loc 1 2178 9 is_stmt 1 view .LVU1336
2178:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5352              		.loc 1 2178 45 is_stmt 0 view .LVU1337
 5353 0280 9DF87720 		ldrb	r2, [sp, #119]	@ zero_extendqisi2
2178:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5354              		.loc 1 2178 105 view .LVU1338
 5355 0284 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
2178:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5356              		.loc 1 2178 143 view .LVU1339
 5357 0288 1B04     		lsls	r3, r3, #16
2178:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5358              		.loc 1 2178 89 view .LVU1340
 5359 028a 43EA0263 		orr	r3, r3, r2, lsl #24
2179:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5360              		.loc 1 2179 29 view .LVU1341
 5361 028e 9DF87520 		ldrb	r2, [sp, #117]	@ zero_extendqisi2
2179:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5362              		.loc 1 2179 13 view .LVU1342
 5363 0292 43EA0223 		orr	r3, r3, r2, lsl #8
2179:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5364              		.loc 1 2179 88 view .LVU1343
 5365 0296 9DF87420 		ldrb	r2, [sp, #116]	@ zero_extendqisi2
2179:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5366              		.loc 1 2179 72 view .LVU1344
 5367 029a 1343     		orrs	r3, r3, r2
2179:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5368              		.loc 1 2179 123 view .LVU1345
 5369 029c C3F31503 		ubfx	r3, r3, #0, #22
2178:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5370              		.loc 1 2178 28 view .LVU1346
 5371 02a0 E364     		str	r3, [r4, #76]
2180:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5372              		.loc 1 2180 9 is_stmt 1 view .LVU1347
2180:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5373              		.loc 1 2180 45 is_stmt 0 view .LVU1348
 5374 02a2 9DF87B20 		ldrb	r2, [sp, #123]	@ zero_extendqisi2
2180:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5375              		.loc 1 2180 105 view .LVU1349
 5376 02a6 9DF87A30 		ldrb	r3, [sp, #122]	@ zero_extendqisi2
ARM GAS  /tmp/cctZ3fzX.s 			page 199


2180:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5377              		.loc 1 2180 143 view .LVU1350
 5378 02aa 1B04     		lsls	r3, r3, #16
2180:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5379              		.loc 1 2180 89 view .LVU1351
 5380 02ac 43EA0263 		orr	r3, r3, r2, lsl #24
2181:Core/Src/deca_device.c ****         diagnostics->stsF3 = ((uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5381              		.loc 1 2181 29 view .LVU1352
 5382 02b0 9DF87920 		ldrb	r2, [sp, #121]	@ zero_extendqisi2
2181:Core/Src/deca_device.c ****         diagnostics->stsF3 = ((uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5383              		.loc 1 2181 13 view .LVU1353
 5384 02b4 43EA0223 		orr	r3, r3, r2, lsl #8
2181:Core/Src/deca_device.c ****         diagnostics->stsF3 = ((uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5385              		.loc 1 2181 88 view .LVU1354
 5386 02b8 9DF87820 		ldrb	r2, [sp, #120]	@ zero_extendqisi2
2181:Core/Src/deca_device.c ****         diagnostics->stsF3 = ((uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5387              		.loc 1 2181 72 view .LVU1355
 5388 02bc 1343     		orrs	r3, r3, r2
2181:Core/Src/deca_device.c ****         diagnostics->stsF3 = ((uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32_t
 5389              		.loc 1 2181 123 view .LVU1356
 5390 02be C3F31503 		ubfx	r3, r3, #0, #22
2180:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5391              		.loc 1 2180 28 view .LVU1357
 5392 02c2 2365     		str	r3, [r4, #80]
2182:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5393              		.loc 1 2182 9 is_stmt 1 view .LVU1358
2182:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5394              		.loc 1 2182 45 is_stmt 0 view .LVU1359
 5395 02c4 9DF87F20 		ldrb	r2, [sp, #127]	@ zero_extendqisi2
2182:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5396              		.loc 1 2182 105 view .LVU1360
 5397 02c8 9DF87E30 		ldrb	r3, [sp, #126]	@ zero_extendqisi2
2182:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5398              		.loc 1 2182 143 view .LVU1361
 5399 02cc 1B04     		lsls	r3, r3, #16
2182:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5400              		.loc 1 2182 89 view .LVU1362
 5401 02ce 43EA0263 		orr	r3, r3, r2, lsl #24
2183:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[BUF0_STS_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp[
 5402              		.loc 1 2183 29 view .LVU1363
 5403 02d2 9DF87D20 		ldrb	r2, [sp, #125]	@ zero_extendqisi2
2183:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[BUF0_STS_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp[
 5404              		.loc 1 2183 13 view .LVU1364
 5405 02d6 43EA0223 		orr	r3, r3, r2, lsl #8
2183:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[BUF0_STS_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp[
 5406              		.loc 1 2183 88 view .LVU1365
 5407 02da 9DF87C20 		ldrb	r2, [sp, #124]	@ zero_extendqisi2
2183:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[BUF0_STS_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp[
 5408              		.loc 1 2183 72 view .LVU1366
 5409 02de 1343     		orrs	r3, r3, r2
2183:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[BUF0_STS_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | temp[
 5410              		.loc 1 2183 123 view .LVU1367
 5411 02e0 C3F31503 		ubfx	r3, r3, #0, #22
2182:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS_DI
 5412              		.loc 1 2182 28 view .LVU1368
 5413 02e4 6365     		str	r3, [r4, #84]
2184:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[BUF0_STS_DIAG_12 - BUF0_RX_FINFO + 1] << 8 | t
ARM GAS  /tmp/cctZ3fzX.s 			page 200


 5414              		.loc 1 2184 9 is_stmt 1 view .LVU1369
2184:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[BUF0_STS_DIAG_12 - BUF0_RX_FINFO + 1] << 8 | t
 5415              		.loc 1 2184 50 is_stmt 0 view .LVU1370
 5416 02e6 9DF88D20 		ldrb	r2, [sp, #141]	@ zero_extendqisi2
2184:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[BUF0_STS_DIAG_12 - BUF0_RX_FINFO + 1] << 8 | t
 5417              		.loc 1 2184 99 view .LVU1371
 5418 02ea 9DF88C30 		ldrb	r3, [sp, #140]	@ zero_extendqisi2
2184:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[BUF0_STS_DIAG_12 - BUF0_RX_FINFO + 1] << 8 | t
 5419              		.loc 1 2184 93 view .LVU1372
 5420 02ee 43EA0223 		orr	r3, r3, r2, lsl #8
2184:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[BUF0_STS_DIAG_12 - BUF0_RX_FINFO + 1] << 8 | t
 5421              		.loc 1 2184 134 view .LVU1373
 5422 02f2 C3F30E03 		ubfx	r3, r3, #0, #15
2184:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[BUF0_STS_DIAG_12 - BUF0_RX_FINFO + 1] << 8 | t
 5423              		.loc 1 2184 33 view .LVU1374
 5424 02f6 A4F85830 		strh	r3, [r4, #88]	@ movhi
2185:Core/Src/deca_device.c **** 
 5425              		.loc 1 2185 9 is_stmt 1 view .LVU1375
2185:Core/Src/deca_device.c **** 
 5426              		.loc 1 2185 53 is_stmt 0 view .LVU1376
 5427 02fa 9DF89D20 		ldrb	r2, [sp, #157]	@ zero_extendqisi2
2185:Core/Src/deca_device.c **** 
 5428              		.loc 1 2185 103 view .LVU1377
 5429 02fe 9DF89C30 		ldrb	r3, [sp, #156]	@ zero_extendqisi2
2185:Core/Src/deca_device.c **** 
 5430              		.loc 1 2185 97 view .LVU1378
 5431 0302 43EA0223 		orr	r3, r3, r2, lsl #8
2185:Core/Src/deca_device.c **** 
 5432              		.loc 1 2185 139 view .LVU1379
 5433 0306 C3F30B03 		ubfx	r3, r3, #0, #12
2185:Core/Src/deca_device.c **** 
 5434              		.loc 1 2185 36 view .LVU1380
 5435 030a A4F85A30 		strh	r3, [r4, #90]	@ movhi
2188:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5436              		.loc 1 2188 9 is_stmt 1 view .LVU1381
2188:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5437              		.loc 1 2188 48 is_stmt 0 view .LVU1382
 5438 030e 9DF8B720 		ldrb	r2, [sp, #183]	@ zero_extendqisi2
2188:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5439              		.loc 1 2188 109 view .LVU1383
 5440 0312 9DF8B630 		ldrb	r3, [sp, #182]	@ zero_extendqisi2
2188:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5441              		.loc 1 2188 148 view .LVU1384
 5442 0316 1B04     		lsls	r3, r3, #16
2188:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5443              		.loc 1 2188 93 view .LVU1385
 5444 0318 43EA0263 		orr	r3, r3, r2, lsl #24
2189:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[BUF0_STS1_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[
 5445              		.loc 1 2189 29 view .LVU1386
 5446 031c 9DF8B520 		ldrb	r2, [sp, #181]	@ zero_extendqisi2
2189:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[BUF0_STS1_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[
 5447              		.loc 1 2189 13 view .LVU1387
 5448 0320 43EA0223 		orr	r3, r3, r2, lsl #8
2189:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[BUF0_STS1_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[
 5449              		.loc 1 2189 89 view .LVU1388
 5450 0324 9DF8B420 		ldrb	r2, [sp, #180]	@ zero_extendqisi2
2189:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[BUF0_STS1_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[
ARM GAS  /tmp/cctZ3fzX.s 			page 201


 5451              		.loc 1 2189 73 view .LVU1389
 5452 0328 1343     		orrs	r3, r3, r2
2189:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[BUF0_STS1_DIAG_1 - BUF0_RX_FINFO + 1] << 8 | temp[
 5453              		.loc 1 2189 125 view .LVU1390
 5454 032a 23F04043 		bic	r3, r3, #-1073741824
2188:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_0 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5455              		.loc 1 2188 31 view .LVU1391
 5456 032e E365     		str	r3, [r4, #92]
2190:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5457              		.loc 1 2190 9 is_stmt 1 view .LVU1392
2190:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5458              		.loc 1 2190 49 is_stmt 0 view .LVU1393
 5459 0330 9DF8B920 		ldrb	r2, [sp, #185]	@ zero_extendqisi2
2190:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5460              		.loc 1 2190 99 view .LVU1394
 5461 0334 9DF8B830 		ldrb	r3, [sp, #184]	@ zero_extendqisi2
2190:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5462              		.loc 1 2190 93 view .LVU1395
 5463 0338 43EA0223 		orr	r3, r3, r2, lsl #8
2190:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5464              		.loc 1 2190 32 view .LVU1396
 5465 033c A4F86030 		strh	r3, [r4, #96]	@ movhi
2191:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5466              		.loc 1 2191 9 is_stmt 1 view .LVU1397
2191:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5467              		.loc 1 2191 46 is_stmt 0 view .LVU1398
 5468 0340 9DF8BF20 		ldrb	r2, [sp, #191]	@ zero_extendqisi2
2191:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5469              		.loc 1 2191 107 view .LVU1399
 5470 0344 9DF8BE30 		ldrb	r3, [sp, #190]	@ zero_extendqisi2
2191:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5471              		.loc 1 2191 146 view .LVU1400
 5472 0348 1B04     		lsls	r3, r3, #16
2191:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5473              		.loc 1 2191 91 view .LVU1401
 5474 034a 43EA0263 		orr	r3, r3, r2, lsl #24
2192:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5475              		.loc 1 2192 29 view .LVU1402
 5476 034e 9DF8BD20 		ldrb	r2, [sp, #189]	@ zero_extendqisi2
2192:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5477              		.loc 1 2192 13 view .LVU1403
 5478 0352 43EA0223 		orr	r3, r3, r2, lsl #8
2192:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5479              		.loc 1 2192 89 view .LVU1404
 5480 0356 9DF8BC20 		ldrb	r2, [sp, #188]	@ zero_extendqisi2
2192:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5481              		.loc 1 2192 73 view .LVU1405
 5482 035a 1343     		orrs	r3, r3, r2
2192:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5483              		.loc 1 2192 125 view .LVU1406
 5484 035c C3F31503 		ubfx	r3, r3, #0, #22
2191:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_2 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5485              		.loc 1 2191 29 view .LVU1407
 5486 0360 6366     		str	r3, [r4, #100]
2193:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5487              		.loc 1 2193 9 is_stmt 1 view .LVU1408
2193:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
ARM GAS  /tmp/cctZ3fzX.s 			page 202


 5488              		.loc 1 2193 46 is_stmt 0 view .LVU1409
 5489 0362 9DF8C320 		ldrb	r2, [sp, #195]	@ zero_extendqisi2
2193:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5490              		.loc 1 2193 107 view .LVU1410
 5491 0366 9DF8C230 		ldrb	r3, [sp, #194]	@ zero_extendqisi2
2193:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5492              		.loc 1 2193 146 view .LVU1411
 5493 036a 1B04     		lsls	r3, r3, #16
2193:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5494              		.loc 1 2193 91 view .LVU1412
 5495 036c 43EA0263 		orr	r3, r3, r2, lsl #24
2194:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5496              		.loc 1 2194 29 view .LVU1413
 5497 0370 9DF8C120 		ldrb	r2, [sp, #193]	@ zero_extendqisi2
2194:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5498              		.loc 1 2194 13 view .LVU1414
 5499 0374 43EA0223 		orr	r3, r3, r2, lsl #8
2194:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5500              		.loc 1 2194 89 view .LVU1415
 5501 0378 9DF8C020 		ldrb	r2, [sp, #192]	@ zero_extendqisi2
2194:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5502              		.loc 1 2194 73 view .LVU1416
 5503 037c 1343     		orrs	r3, r3, r2
2194:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 3] << 24 | (uint32
 5504              		.loc 1 2194 125 view .LVU1417
 5505 037e C3F31503 		ubfx	r3, r3, #0, #22
2193:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_3 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5506              		.loc 1 2193 29 view .LVU1418
 5507 0382 A366     		str	r3, [r4, #104]
2195:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5508              		.loc 1 2195 9 is_stmt 1 view .LVU1419
2195:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5509              		.loc 1 2195 46 is_stmt 0 view .LVU1420
 5510 0384 9DF8C720 		ldrb	r2, [sp, #199]	@ zero_extendqisi2
2195:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5511              		.loc 1 2195 107 view .LVU1421
 5512 0388 9DF8C630 		ldrb	r3, [sp, #198]	@ zero_extendqisi2
2195:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5513              		.loc 1 2195 146 view .LVU1422
 5514 038c 1B04     		lsls	r3, r3, #16
2195:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5515              		.loc 1 2195 91 view .LVU1423
 5516 038e 43EA0263 		orr	r3, r3, r2, lsl #24
2196:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[BUF0_STS1_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | tem
 5517              		.loc 1 2196 29 view .LVU1424
 5518 0392 9DF8C520 		ldrb	r2, [sp, #197]	@ zero_extendqisi2
2196:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[BUF0_STS1_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | tem
 5519              		.loc 1 2196 13 view .LVU1425
 5520 0396 43EA0223 		orr	r3, r3, r2, lsl #8
2196:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[BUF0_STS1_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | tem
 5521              		.loc 1 2196 89 view .LVU1426
 5522 039a 9DF8C420 		ldrb	r2, [sp, #196]	@ zero_extendqisi2
2196:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[BUF0_STS1_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | tem
 5523              		.loc 1 2196 73 view .LVU1427
 5524 039e 1343     		orrs	r3, r3, r2
2196:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[BUF0_STS1_DIAG_8 - BUF0_RX_FINFO + 1] << 8 | tem
 5525              		.loc 1 2196 125 view .LVU1428
ARM GAS  /tmp/cctZ3fzX.s 			page 203


 5526 03a0 C3F31503 		ubfx	r3, r3, #0, #22
2195:Core/Src/deca_device.c ****             | (uint32_t)temp[BUF0_STS1_DIAG_4 - BUF0_RX_FINFO + 1] << 8 | (uint32_t)temp[BUF0_STS1_
 5527              		.loc 1 2195 29 view .LVU1429
 5528 03a4 E366     		str	r3, [r4, #108]
2197:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[BUF0_STS1_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
 5529              		.loc 1 2197 9 is_stmt 1 view .LVU1430
2197:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[BUF0_STS1_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
 5530              		.loc 1 2197 51 is_stmt 0 view .LVU1431
 5531 03a6 9DF8D520 		ldrb	r2, [sp, #213]	@ zero_extendqisi2
2197:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[BUF0_STS1_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
 5532              		.loc 1 2197 101 view .LVU1432
 5533 03aa 9DF8D430 		ldrb	r3, [sp, #212]	@ zero_extendqisi2
2197:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[BUF0_STS1_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
 5534              		.loc 1 2197 95 view .LVU1433
 5535 03ae 43EA0223 		orr	r3, r3, r2, lsl #8
2197:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[BUF0_STS1_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
 5536              		.loc 1 2197 137 view .LVU1434
 5537 03b2 C3F30E03 		ubfx	r3, r3, #0, #15
2197:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[BUF0_STS1_DIAG_12 - BUF0_RX_FINFO + 1] << 8 |
 5538              		.loc 1 2197 34 view .LVU1435
 5539 03b6 A4F87030 		strh	r3, [r4, #112]	@ movhi
2198:Core/Src/deca_device.c **** 
 5540              		.loc 1 2198 9 is_stmt 1 view .LVU1436
2198:Core/Src/deca_device.c **** 
 5541              		.loc 1 2198 54 is_stmt 0 view .LVU1437
 5542 03ba 9DF8E520 		ldrb	r2, [sp, #229]	@ zero_extendqisi2
2198:Core/Src/deca_device.c **** 
 5543              		.loc 1 2198 105 view .LVU1438
 5544 03be 9DF8E430 		ldrb	r3, [sp, #228]	@ zero_extendqisi2
2198:Core/Src/deca_device.c **** 
 5545              		.loc 1 2198 99 view .LVU1439
 5546 03c2 43EA0223 		orr	r3, r3, r2, lsl #8
2198:Core/Src/deca_device.c **** 
 5547              		.loc 1 2198 142 view .LVU1440
 5548 03c6 C3F30B03 		ubfx	r3, r3, #0, #12
2198:Core/Src/deca_device.c **** 
 5549              		.loc 1 2198 37 view .LVU1441
 5550 03ca A4F87230 		strh	r3, [r4, #114]	@ movhi
2202:Core/Src/deca_device.c **** 
 5551              		.loc 1 2202 9 is_stmt 1 view .LVU1442
 5552              	.L392:
2290:Core/Src/deca_device.c **** 
 5553              		.loc 1 2290 1 is_stmt 0 view .LVU1443
 5554 03ce 3AB0     		add	sp, sp, #232
 5555              		.cfi_remember_state
 5556              		.cfi_def_cfa_offset 8
 5557              		@ sp needed
 5558 03d0 10BD     		pop	{r4, pc}
 5559              	.LVL518:
 5560              	.L394:
 5561              		.cfi_restore_state
2206:Core/Src/deca_device.c ****         {
 5562              		.loc 1 2206 9 is_stmt 1 view .LVU1444
2206:Core/Src/deca_device.c ****         {
 5563              		.loc 1 2206 25 is_stmt 0 view .LVU1445
 5564 03d2 937D     		ldrb	r3, [r2, #22]	@ zero_extendqisi2
2206:Core/Src/deca_device.c ****         {
ARM GAS  /tmp/cctZ3fzX.s 			page 204


 5565              		.loc 1 2206 12 view .LVU1446
 5566 03d4 13F0010F 		tst	r3, #1
 5567 03d8 0FD0     		beq	.L407
2208:Core/Src/deca_device.c ****             dwt_readfromdevice(STS_DIAG_4_ID, 0, 108, &temp[108]);  //read from 0xD0000 space  (108
 5568              		.loc 1 2208 13 is_stmt 1 view .LVU1447
 5569 03da 6B46     		mov	r3, sp
 5570 03dc 6C22     		movs	r2, #108
 5571 03de 0021     		movs	r1, #0
 5572 03e0 4FF44020 		mov	r0, #786432
 5573              	.LVL519:
2208:Core/Src/deca_device.c ****             dwt_readfromdevice(STS_DIAG_4_ID, 0, 108, &temp[108]);  //read from 0xD0000 space  (108
 5574              		.loc 1 2208 13 is_stmt 0 view .LVU1448
 5575 03e4 FFF7FEFF 		bl	dwt_readfromdevice
 5576              	.LVL520:
2209:Core/Src/deca_device.c ****         }
 5577              		.loc 1 2209 13 is_stmt 1 view .LVU1449
 5578 03e8 1BAB     		add	r3, sp, #108
 5579 03ea 6C22     		movs	r2, #108
 5580 03ec 0021     		movs	r1, #0
 5581 03ee 4FF45020 		mov	r0, #851968
 5582 03f2 FFF7FEFF 		bl	dwt_readfromdevice
 5583              	.LVL521:
 5584              	.L408:
2140:Core/Src/deca_device.c ****         {
 5585              		.loc 1 2140 16 is_stmt 0 discriminator 1 view .LVU1450
 5586 03f6 0023     		movs	r3, #0
 5587 03f8 21E0     		b	.L409
 5588              	.LVL522:
 5589              	.L407:
2213:Core/Src/deca_device.c ****         }
 5590              		.loc 1 2213 13 is_stmt 1 view .LVU1451
 5591 03fa 6B46     		mov	r3, sp
 5592 03fc 2822     		movs	r2, #40
 5593 03fe 0021     		movs	r1, #0
 5594 0400 4FF44020 		mov	r0, #786432
 5595              	.LVL523:
2213:Core/Src/deca_device.c ****         }
 5596              		.loc 1 2213 13 is_stmt 0 view .LVU1452
 5597 0404 FFF7FEFF 		bl	dwt_readfromdevice
 5598              	.LVL524:
 5599 0408 F5E7     		b	.L408
 5600              	.LVL525:
 5601              	.L410:
2218:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + STS_TOA_LO_ID - IP_TOA_LO_ID];  // RX timestamp fr
 5602              		.loc 1 2218 13 is_stmt 1 discriminator 3 view .LVU1453
2218:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + STS_TOA_LO_ID - IP_TOA_LO_ID];  // RX timestamp fr
 5603              		.loc 1 2218 48 is_stmt 0 discriminator 3 view .LVU1454
 5604 040a 03F1E802 		add	r2, r3, #232
 5605 040e 6A44     		add	r2, sp, r2
 5606 0410 12F8E82C 		ldrb	r2, [r2, #-232]	@ zero_extendqisi2
2218:Core/Src/deca_device.c ****             diagnostics->stsRxTime[i] = temp[i + STS_TOA_LO_ID - IP_TOA_LO_ID];  // RX timestamp fr
 5607              		.loc 1 2218 42 discriminator 3 view .LVU1455
 5608 0414 E254     		strb	r2, [r4, r3]
2219:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + STS1_TOA_LO_ID - IP_TOA_LO_ID]; // RX timestamp f
 5609              		.loc 1 2219 13 is_stmt 1 discriminator 3 view .LVU1456
2219:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + STS1_TOA_LO_ID - IP_TOA_LO_ID]; // RX timestamp f
 5610              		.loc 1 2219 45 is_stmt 0 discriminator 3 view .LVU1457
ARM GAS  /tmp/cctZ3fzX.s 			page 205


 5611 0416 03F1F002 		add	r2, r3, #240
 5612 041a 6A44     		add	r2, sp, r2
 5613 041c 12F8E81C 		ldrb	r1, [r2, #-232]	@ zero_extendqisi2
2219:Core/Src/deca_device.c ****             diagnostics->sts2RxTime[i] = temp[i + STS1_TOA_LO_ID - IP_TOA_LO_ID]; // RX timestamp f
 5614              		.loc 1 2219 39 discriminator 3 view .LVU1458
 5615 0420 E218     		adds	r2, r4, r3
 5616 0422 1172     		strb	r1, [r2, #8]
2220:Core/Src/deca_device.c ****             diagnostics->tdoa[i] = temp[i + CIA_TDOA_0_ID - IP_TOA_LO_ID]; // timestamp difference 
 5617              		.loc 1 2220 13 is_stmt 1 discriminator 3 view .LVU1459
2220:Core/Src/deca_device.c ****             diagnostics->tdoa[i] = temp[i + CIA_TDOA_0_ID - IP_TOA_LO_ID]; // timestamp difference 
 5618              		.loc 1 2220 46 is_stmt 0 discriminator 3 view .LVU1460
 5619 0424 03F1F801 		add	r1, r3, #248
 5620 0428 6944     		add	r1, sp, r1
 5621 042a 11F8E81C 		ldrb	r1, [r1, #-232]	@ zero_extendqisi2
2220:Core/Src/deca_device.c ****             diagnostics->tdoa[i] = temp[i + CIA_TDOA_0_ID - IP_TOA_LO_ID]; // timestamp difference 
 5622              		.loc 1 2220 40 discriminator 3 view .LVU1461
 5623 042e 9174     		strb	r1, [r2, #18]
2221:Core/Src/deca_device.c ****         }
 5624              		.loc 1 2221 13 is_stmt 1 discriminator 3 view .LVU1462
2221:Core/Src/deca_device.c ****         }
 5625              		.loc 1 2221 40 is_stmt 0 discriminator 3 view .LVU1463
 5626 0430 03F58071 		add	r1, r3, #256
 5627 0434 6944     		add	r1, sp, r1
 5628 0436 11F8E81C 		ldrb	r1, [r1, #-232]	@ zero_extendqisi2
2221:Core/Src/deca_device.c ****         }
 5629              		.loc 1 2221 34 discriminator 3 view .LVU1464
 5630 043a 1177     		strb	r1, [r2, #28]
2216:Core/Src/deca_device.c ****         {
 5631              		.loc 1 2216 44 is_stmt 1 discriminator 3 view .LVU1465
2216:Core/Src/deca_device.c ****         {
 5632              		.loc 1 2216 45 is_stmt 0 discriminator 3 view .LVU1466
 5633 043c 0133     		adds	r3, r3, #1
 5634              	.LVL526:
 5635              	.L409:
2216:Core/Src/deca_device.c ****         {
 5636              		.loc 1 2216 21 is_stmt 1 discriminator 1 view .LVU1467
2216:Core/Src/deca_device.c ****         {
 5637              		.loc 1 2216 9 is_stmt 0 discriminator 1 view .LVU1468
 5638 043e 042B     		cmp	r3, #4
 5639 0440 E3DD     		ble	.L410
2223:Core/Src/deca_device.c **** 
 5640              		.loc 1 2223 9 is_stmt 1 view .LVU1469
2223:Core/Src/deca_device.c **** 
 5641              		.loc 1 2223 36 is_stmt 0 view .LVU1470
 5642 0442 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 5643              	.LVL527:
2223:Core/Src/deca_device.c **** 
 5644              		.loc 1 2223 30 view .LVU1471
 5645 0446 84F82130 		strb	r3, [r4, #33]
2225:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[IP_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[IP_TOA
 5646              		.loc 1 2225 9 is_stmt 1 view .LVU1472
2225:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[IP_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[IP_TOA
 5647              		.loc 1 2225 43 is_stmt 0 view .LVU1473
 5648 044a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
2225:Core/Src/deca_device.c ****         diagnostics->ipatovPOA = (uint16_t)temp[IP_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[IP_TOA
 5649              		.loc 1 2225 37 view .LVU1474
 5650 044e 6371     		strb	r3, [r4, #5]
ARM GAS  /tmp/cctZ3fzX.s 			page 206


2226:Core/Src/deca_device.c **** 
 5651              		.loc 1 2226 9 is_stmt 1 view .LVU1475
2226:Core/Src/deca_device.c **** 
 5652              		.loc 1 2226 48 is_stmt 0 view .LVU1476
 5653 0450 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
2226:Core/Src/deca_device.c **** 
 5654              		.loc 1 2226 93 view .LVU1477
 5655 0454 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2226:Core/Src/deca_device.c **** 
 5656              		.loc 1 2226 87 view .LVU1478
 5657 0458 43EA0223 		orr	r3, r3, r2, lsl #8
2226:Core/Src/deca_device.c **** 
 5658              		.loc 1 2226 32 view .LVU1479
 5659 045c E380     		strh	r3, [r4, #6]	@ movhi
2228:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[STS_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS_TOA_
 5660              		.loc 1 2228 9 is_stmt 1 view .LVU1480
2228:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[STS_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS_TOA_
 5661              		.loc 1 2228 51 is_stmt 0 view .LVU1481
 5662 045e 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
2228:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[STS_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS_TOA_
 5663              		.loc 1 2228 112 view .LVU1482
 5664 0462 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
2228:Core/Src/deca_device.c ****         diagnostics->stsPOA = (uint16_t)temp[STS_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS_TOA_
 5665              		.loc 1 2228 34 view .LVU1483
 5666 0466 1A43     		orrs	r2, r2, r3
 5667 0468 D209     		lsrs	r2, r2, #7
 5668 046a E281     		strh	r2, [r4, #14]	@ movhi
2229:Core/Src/deca_device.c **** 
 5669              		.loc 1 2229 9 is_stmt 1 view .LVU1484
2229:Core/Src/deca_device.c **** 
 5670              		.loc 1 2229 91 is_stmt 0 view .LVU1485
 5671 046c 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
2229:Core/Src/deca_device.c **** 
 5672              		.loc 1 2229 85 view .LVU1486
 5673 0470 42EA0322 		orr	r2, r2, r3, lsl #8
2229:Core/Src/deca_device.c **** 
 5674              		.loc 1 2229 29 view .LVU1487
 5675 0474 2282     		strh	r2, [r4, #16]	@ movhi
2231:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[STS1_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS1_T
 5676              		.loc 1 2231 9 is_stmt 1 view .LVU1488
2231:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[STS1_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS1_T
 5677              		.loc 1 2231 52 is_stmt 0 view .LVU1489
 5678 0476 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
2231:Core/Src/deca_device.c ****         diagnostics->sts2POA = (uint16_t)temp[STS1_TOA_HI_ID - IP_TOA_LO_ID + 2] << 8 | temp[STS1_T
 5679              		.loc 1 2231 35 view .LVU1490
 5680 047a 1343     		orrs	r3, r3, r2
 5681 047c DB09     		lsrs	r3, r3, #7
 5682 047e 2383     		strh	r3, [r4, #24]	@ movhi
2232:Core/Src/deca_device.c **** 
 5683              		.loc 1 2232 9 is_stmt 1 view .LVU1491
2232:Core/Src/deca_device.c **** 
 5684              		.loc 1 2232 46 is_stmt 0 view .LVU1492
 5685 0480 9DF81620 		ldrb	r2, [sp, #22]	@ zero_extendqisi2
2232:Core/Src/deca_device.c **** 
 5686              		.loc 1 2232 93 view .LVU1493
 5687 0484 9DF81530 		ldrb	r3, [sp, #21]	@ zero_extendqisi2
2232:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 207


 5688              		.loc 1 2232 87 view .LVU1494
 5689 0488 43EA0223 		orr	r3, r3, r2, lsl #8
2232:Core/Src/deca_device.c **** 
 5690              		.loc 1 2232 30 view .LVU1495
 5691 048c 6383     		strh	r3, [r4, #26]	@ movhi
2234:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5692              		.loc 1 2234 9 is_stmt 1 view .LVU1496
2234:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5693              		.loc 1 2234 43 is_stmt 0 view .LVU1497
 5694 048e 9DF81F20 		ldrb	r2, [sp, #31]	@ zero_extendqisi2
2234:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5695              		.loc 1 2234 94 view .LVU1498
 5696 0492 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
2234:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5697              		.loc 1 2234 88 view .LVU1499
 5698 0496 43EA0223 		orr	r3, r3, r2, lsl #8
2234:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5699              		.loc 1 2234 135 view .LVU1500
 5700 049a C3F30D03 		ubfx	r3, r3, #0, #14
2234:Core/Src/deca_device.c ****         if (diagnostics->pdoa & 0x2000) diagnostics->pdoa |= 0xC000; //sign extend
 5701              		.loc 1 2234 27 view .LVU1501
 5702 049e 6384     		strh	r3, [r4, #34]	@ movhi
2235:Core/Src/deca_device.c **** 
 5703              		.loc 1 2235 9 is_stmt 1 view .LVU1502
2235:Core/Src/deca_device.c **** 
 5704              		.loc 1 2235 12 is_stmt 0 view .LVU1503
 5705 04a0 13F4005F 		tst	r3, #8192
 5706 04a4 04D0     		beq	.L411
2235:Core/Src/deca_device.c **** 
 5707              		.loc 1 2235 41 is_stmt 1 discriminator 1 view .LVU1504
2235:Core/Src/deca_device.c **** 
 5708              		.loc 1 2235 59 is_stmt 0 discriminator 1 view .LVU1505
 5709 04a6 6FEA8343 		mvn	r3, r3, lsl #18
 5710 04aa 6FEA9343 		mvn	r3, r3, lsr #18
 5711 04ae 6384     		strh	r3, [r4, #34]	@ movhi
 5712              	.L411:
2237:Core/Src/deca_device.c **** 
 5713              		.loc 1 2237 9 is_stmt 1 view .LVU1506
2237:Core/Src/deca_device.c **** 
 5714              		.loc 1 2237 49 is_stmt 0 view .LVU1507
 5715 04b0 9DF82120 		ldrb	r2, [sp, #33]	@ zero_extendqisi2
2237:Core/Src/deca_device.c **** 
 5716              		.loc 1 2237 95 view .LVU1508
 5717 04b4 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
2237:Core/Src/deca_device.c **** 
 5718              		.loc 1 2237 89 view .LVU1509
 5719 04b8 43EA0223 		orr	r3, r3, r2, lsl #8
2237:Core/Src/deca_device.c **** 
 5720              		.loc 1 2237 127 view .LVU1510
 5721 04bc C3F30C03 		ubfx	r3, r3, #0, #13
2237:Core/Src/deca_device.c **** 
 5722              		.loc 1 2237 33 view .LVU1511
 5723 04c0 A384     		strh	r3, [r4, #36]	@ movhi
2239:Core/Src/deca_device.c ****             | (uint32_t)temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[CIA_DIAG_1_ID 
 5724              		.loc 1 2239 9 is_stmt 1 view .LVU1512
2239:Core/Src/deca_device.c ****             | (uint32_t)temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[CIA_DIAG_1_ID 
 5725              		.loc 1 2239 49 is_stmt 0 view .LVU1513
ARM GAS  /tmp/cctZ3fzX.s 			page 208


 5726 04c2 9DF82720 		ldrb	r2, [sp, #39]	@ zero_extendqisi2
2239:Core/Src/deca_device.c ****             | (uint32_t)temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[CIA_DIAG_1_ID 
 5727              		.loc 1 2239 106 view .LVU1514
 5728 04c6 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
2239:Core/Src/deca_device.c ****             | (uint32_t)temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[CIA_DIAG_1_ID 
 5729              		.loc 1 2239 141 view .LVU1515
 5730 04ca 1B04     		lsls	r3, r3, #16
2239:Core/Src/deca_device.c ****             | (uint32_t)temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[CIA_DIAG_1_ID 
 5731              		.loc 1 2239 90 view .LVU1516
 5732 04cc 43EA0263 		orr	r3, r3, r2, lsl #24
2240:Core/Src/deca_device.c **** 
 5733              		.loc 1 2240 29 view .LVU1517
 5734 04d0 9DF82520 		ldrb	r2, [sp, #37]	@ zero_extendqisi2
2240:Core/Src/deca_device.c **** 
 5735              		.loc 1 2240 13 view .LVU1518
 5736 04d4 43EA0223 		orr	r3, r3, r2, lsl #8
2240:Core/Src/deca_device.c **** 
 5737              		.loc 1 2240 85 view .LVU1519
 5738 04d8 9DF82420 		ldrb	r2, [sp, #36]	@ zero_extendqisi2
2240:Core/Src/deca_device.c **** 
 5739              		.loc 1 2240 69 view .LVU1520
 5740 04dc 1343     		orrs	r3, r3, r2
2240:Core/Src/deca_device.c **** 
 5741              		.loc 1 2240 117 view .LVU1521
 5742 04de 23F06043 		bic	r3, r3, #-536870912
2239:Core/Src/deca_device.c ****             | (uint32_t)temp[CIA_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[CIA_DIAG_1_ID 
 5743              		.loc 1 2239 31 view .LVU1522
 5744 04e2 A362     		str	r3, [r4, #40]
2242:Core/Src/deca_device.c ****             break; //break here is only logging minimal diagnositcs
 5745              		.loc 1 2242 9 is_stmt 1 view .LVU1523
2242:Core/Src/deca_device.c ****             break; //break here is only logging minimal diagnositcs
 5746              		.loc 1 2242 26 is_stmt 0 view .LVU1524
 5747 04e4 974B     		ldr	r3, .L419
 5748 04e6 1B68     		ldr	r3, [r3]
 5749 04e8 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
2242:Core/Src/deca_device.c ****             break; //break here is only logging minimal diagnositcs
 5750              		.loc 1 2242 12 view .LVU1525
 5751 04ea 13F0010F 		tst	r3, #1
 5752 04ee 3FF46EAF 		beq	.L392
2246:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_0_ID - 
 5753              		.loc 1 2246 9 is_stmt 1 view .LVU1526
2246:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_0_ID - 
 5754              		.loc 1 2246 50 is_stmt 0 view .LVU1527
 5755 04f2 9DF82B20 		ldrb	r2, [sp, #43]	@ zero_extendqisi2
2246:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_0_ID - 
 5756              		.loc 1 2246 106 view .LVU1528
 5757 04f6 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
2246:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_0_ID - 
 5758              		.loc 1 2246 140 view .LVU1529
 5759 04fa 1B04     		lsls	r3, r3, #16
2246:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_0_ID - 
 5760              		.loc 1 2246 90 view .LVU1530
 5761 04fc 43EA0263 		orr	r3, r3, r2, lsl #24
2247:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 3] << 24 | (uint32
 5762              		.loc 1 2247 29 view .LVU1531
 5763 0500 9DF82920 		ldrb	r2, [sp, #41]	@ zero_extendqisi2
2247:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 3] << 24 | (uint32
ARM GAS  /tmp/cctZ3fzX.s 			page 209


 5764              		.loc 1 2247 13 view .LVU1532
 5765 0504 43EA0223 		orr	r3, r3, r2, lsl #8
2247:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 3] << 24 | (uint32
 5766              		.loc 1 2247 84 view .LVU1533
 5767 0508 9DF82820 		ldrb	r2, [sp, #40]	@ zero_extendqisi2
2247:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 3] << 24 | (uint32
 5768              		.loc 1 2247 68 view .LVU1534
 5769 050c 1343     		orrs	r3, r3, r2
2247:Core/Src/deca_device.c ****         diagnostics->ipatovPower = ((uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 3] << 24 | (uint32
 5770              		.loc 1 2247 115 view .LVU1535
 5771 050e 23F00043 		bic	r3, r3, #-2147483648
2246:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_0_ID - 
 5772              		.loc 1 2246 33 view .LVU1536
 5773 0512 E362     		str	r3, [r4, #44]
2248:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_1_ID - 
 5774              		.loc 1 2248 9 is_stmt 1 view .LVU1537
2248:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_1_ID - 
 5775              		.loc 1 2248 51 is_stmt 0 view .LVU1538
 5776 0514 9DF82F20 		ldrb	r2, [sp, #47]	@ zero_extendqisi2
2248:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_1_ID - 
 5777              		.loc 1 2248 107 view .LVU1539
 5778 0518 9DF82E30 		ldrb	r3, [sp, #46]	@ zero_extendqisi2
2248:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_1_ID - 
 5779              		.loc 1 2248 141 view .LVU1540
 5780 051c 1B04     		lsls	r3, r3, #16
2248:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_1_ID - 
 5781              		.loc 1 2248 91 view .LVU1541
 5782 051e 43EA0263 		orr	r3, r3, r2, lsl #24
2249:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5783              		.loc 1 2249 29 view .LVU1542
 5784 0522 9DF82D20 		ldrb	r2, [sp, #45]	@ zero_extendqisi2
2249:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5785              		.loc 1 2249 13 view .LVU1543
 5786 0526 43EA0223 		orr	r3, r3, r2, lsl #8
2249:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5787              		.loc 1 2249 84 view .LVU1544
 5788 052a 9DF82C20 		ldrb	r2, [sp, #44]	@ zero_extendqisi2
2249:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5789              		.loc 1 2249 68 view .LVU1545
 5790 052e 1343     		orrs	r3, r3, r2
2249:Core/Src/deca_device.c ****         diagnostics->ipatovF1 = ((uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5791              		.loc 1 2249 115 view .LVU1546
 5792 0530 C3F31003 		ubfx	r3, r3, #0, #17
2248:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_1_ID - 
 5793              		.loc 1 2248 34 view .LVU1547
 5794 0534 2363     		str	r3, [r4, #48]
2250:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_2_ID - 
 5795              		.loc 1 2250 9 is_stmt 1 view .LVU1548
2250:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_2_ID - 
 5796              		.loc 1 2250 48 is_stmt 0 view .LVU1549
 5797 0536 9DF83320 		ldrb	r2, [sp, #51]	@ zero_extendqisi2
2250:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_2_ID - 
 5798              		.loc 1 2250 104 view .LVU1550
 5799 053a 9DF83230 		ldrb	r3, [sp, #50]	@ zero_extendqisi2
2250:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_2_ID - 
 5800              		.loc 1 2250 138 view .LVU1551
 5801 053e 1B04     		lsls	r3, r3, #16
ARM GAS  /tmp/cctZ3fzX.s 			page 210


2250:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_2_ID - 
 5802              		.loc 1 2250 88 view .LVU1552
 5803 0540 43EA0263 		orr	r3, r3, r2, lsl #24
2251:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5804              		.loc 1 2251 29 view .LVU1553
 5805 0544 9DF83120 		ldrb	r2, [sp, #49]	@ zero_extendqisi2
2251:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5806              		.loc 1 2251 13 view .LVU1554
 5807 0548 43EA0223 		orr	r3, r3, r2, lsl #8
2251:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5808              		.loc 1 2251 84 view .LVU1555
 5809 054c 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
2251:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5810              		.loc 1 2251 68 view .LVU1556
 5811 0550 1343     		orrs	r3, r3, r2
2251:Core/Src/deca_device.c ****         diagnostics->ipatovF2 = ((uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5812              		.loc 1 2251 115 view .LVU1557
 5813 0552 C3F31503 		ubfx	r3, r3, #0, #22
2250:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_2_ID - 
 5814              		.loc 1 2250 31 view .LVU1558
 5815 0556 6363     		str	r3, [r4, #52]
2252:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_3_ID - 
 5816              		.loc 1 2252 9 is_stmt 1 view .LVU1559
2252:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_3_ID - 
 5817              		.loc 1 2252 48 is_stmt 0 view .LVU1560
 5818 0558 9DF83720 		ldrb	r2, [sp, #55]	@ zero_extendqisi2
2252:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_3_ID - 
 5819              		.loc 1 2252 104 view .LVU1561
 5820 055c 9DF83630 		ldrb	r3, [sp, #54]	@ zero_extendqisi2
2252:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_3_ID - 
 5821              		.loc 1 2252 138 view .LVU1562
 5822 0560 1B04     		lsls	r3, r3, #16
2252:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_3_ID - 
 5823              		.loc 1 2252 88 view .LVU1563
 5824 0562 43EA0263 		orr	r3, r3, r2, lsl #24
2253:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5825              		.loc 1 2253 29 view .LVU1564
 5826 0566 9DF83520 		ldrb	r2, [sp, #53]	@ zero_extendqisi2
2253:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5827              		.loc 1 2253 13 view .LVU1565
 5828 056a 43EA0223 		orr	r3, r3, r2, lsl #8
2253:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5829              		.loc 1 2253 84 view .LVU1566
 5830 056e 9DF83420 		ldrb	r2, [sp, #52]	@ zero_extendqisi2
2253:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5831              		.loc 1 2253 68 view .LVU1567
 5832 0572 1343     		orrs	r3, r3, r2
2253:Core/Src/deca_device.c ****         diagnostics->ipatovF3 = ((uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)
 5833              		.loc 1 2253 115 view .LVU1568
 5834 0574 C3F31503 		ubfx	r3, r3, #0, #22
2252:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_3_ID - 
 5835              		.loc 1 2252 31 view .LVU1569
 5836 0578 A363     		str	r3, [r4, #56]
2254:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_4_ID - 
 5837              		.loc 1 2254 9 is_stmt 1 view .LVU1570
2254:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_4_ID - 
 5838              		.loc 1 2254 48 is_stmt 0 view .LVU1571
ARM GAS  /tmp/cctZ3fzX.s 			page 211


 5839 057a 9DF83B20 		ldrb	r2, [sp, #59]	@ zero_extendqisi2
2254:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_4_ID - 
 5840              		.loc 1 2254 104 view .LVU1572
 5841 057e 9DF83A30 		ldrb	r3, [sp, #58]	@ zero_extendqisi2
2254:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_4_ID - 
 5842              		.loc 1 2254 138 view .LVU1573
 5843 0582 1B04     		lsls	r3, r3, #16
2254:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_4_ID - 
 5844              		.loc 1 2254 88 view .LVU1574
 5845 0584 43EA0263 		orr	r3, r3, r2, lsl #24
2255:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[IP_DIAG_8_ID - IP_TOA_LO_ID + 1] << 8 | temp[IP
 5846              		.loc 1 2255 29 view .LVU1575
 5847 0588 9DF83920 		ldrb	r2, [sp, #57]	@ zero_extendqisi2
2255:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[IP_DIAG_8_ID - IP_TOA_LO_ID + 1] << 8 | temp[IP
 5848              		.loc 1 2255 13 view .LVU1576
 5849 058c 43EA0223 		orr	r3, r3, r2, lsl #8
2255:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[IP_DIAG_8_ID - IP_TOA_LO_ID + 1] << 8 | temp[IP
 5850              		.loc 1 2255 84 view .LVU1577
 5851 0590 9DF83820 		ldrb	r2, [sp, #56]	@ zero_extendqisi2
2255:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[IP_DIAG_8_ID - IP_TOA_LO_ID + 1] << 8 | temp[IP
 5852              		.loc 1 2255 68 view .LVU1578
 5853 0594 1343     		orrs	r3, r3, r2
2255:Core/Src/deca_device.c ****         diagnostics->ipatovFpIndex = (uint16_t)temp[IP_DIAG_8_ID - IP_TOA_LO_ID + 1] << 8 | temp[IP
 5854              		.loc 1 2255 115 view .LVU1579
 5855 0596 C3F31503 		ubfx	r3, r3, #0, #22
2254:Core/Src/deca_device.c ****             | (uint32_t)temp[IP_DIAG_4_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[IP_DIAG_4_ID - 
 5856              		.loc 1 2254 31 view .LVU1580
 5857 059a E363     		str	r3, [r4, #60]
2256:Core/Src/deca_device.c ****         diagnostics->ipatovAccumCount = ((uint16_t)temp[IP_DIAG_12_ID - IP_TOA_LO_ID + 1] << 8 | te
 5858              		.loc 1 2256 9 is_stmt 1 view .LVU1581
2256:Core/Src/deca_device.c ****         diagnostics->ipatovAccumCount = ((uint16_t)temp[IP_DIAG_12_ID - IP_TOA_LO_ID + 1] << 8 | te
 5859              		.loc 1 2256 52 is_stmt 0 view .LVU1582
 5860 059c 9DF84920 		ldrb	r2, [sp, #73]	@ zero_extendqisi2
2256:Core/Src/deca_device.c ****         diagnostics->ipatovAccumCount = ((uint16_t)temp[IP_DIAG_12_ID - IP_TOA_LO_ID + 1] << 8 | te
 5861              		.loc 1 2256 97 view .LVU1583
 5862 05a0 9DF84830 		ldrb	r3, [sp, #72]	@ zero_extendqisi2
2256:Core/Src/deca_device.c ****         diagnostics->ipatovAccumCount = ((uint16_t)temp[IP_DIAG_12_ID - IP_TOA_LO_ID + 1] << 8 | te
 5863              		.loc 1 2256 91 view .LVU1584
 5864 05a4 43EA0223 		orr	r3, r3, r2, lsl #8
2256:Core/Src/deca_device.c ****         diagnostics->ipatovAccumCount = ((uint16_t)temp[IP_DIAG_12_ID - IP_TOA_LO_ID + 1] << 8 | te
 5865              		.loc 1 2256 36 view .LVU1585
 5866 05a8 A4F84030 		strh	r3, [r4, #64]	@ movhi
2257:Core/Src/deca_device.c **** 
 5867              		.loc 1 2257 9 is_stmt 1 view .LVU1586
2257:Core/Src/deca_device.c **** 
 5868              		.loc 1 2257 56 is_stmt 0 view .LVU1587
 5869 05ac 9DF85920 		ldrb	r2, [sp, #89]	@ zero_extendqisi2
2257:Core/Src/deca_device.c **** 
 5870              		.loc 1 2257 102 view .LVU1588
 5871 05b0 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
2257:Core/Src/deca_device.c **** 
 5872              		.loc 1 2257 96 view .LVU1589
 5873 05b4 43EA0223 		orr	r3, r3, r2, lsl #8
2257:Core/Src/deca_device.c **** 
 5874              		.loc 1 2257 134 view .LVU1590
 5875 05b8 C3F30B03 		ubfx	r3, r3, #0, #12
2257:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 212


 5876              		.loc 1 2257 39 view .LVU1591
 5877 05bc A4F84230 		strh	r3, [r4, #66]	@ movhi
2260:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_0_ID 
 5878              		.loc 1 2260 9 is_stmt 1 view .LVU1592
2260:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_0_ID 
 5879              		.loc 1 2260 47 is_stmt 0 view .LVU1593
 5880 05c0 9DF85F20 		ldrb	r2, [sp, #95]	@ zero_extendqisi2
2260:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_0_ID 
 5881              		.loc 1 2260 104 view .LVU1594
 5882 05c4 9DF85E30 		ldrb	r3, [sp, #94]	@ zero_extendqisi2
2260:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_0_ID 
 5883              		.loc 1 2260 139 view .LVU1595
 5884 05c8 1B04     		lsls	r3, r3, #16
2260:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_0_ID 
 5885              		.loc 1 2260 88 view .LVU1596
 5886 05ca 43EA0263 		orr	r3, r3, r2, lsl #24
2261:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[STS_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | temp[STS_D
 5887              		.loc 1 2261 29 view .LVU1597
 5888 05ce 9DF85D20 		ldrb	r2, [sp, #93]	@ zero_extendqisi2
2261:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[STS_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | temp[STS_D
 5889              		.loc 1 2261 13 view .LVU1598
 5890 05d2 43EA0223 		orr	r3, r3, r2, lsl #8
2261:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[STS_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | temp[STS_D
 5891              		.loc 1 2261 85 view .LVU1599
 5892 05d6 9DF85C20 		ldrb	r2, [sp, #92]	@ zero_extendqisi2
2261:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[STS_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | temp[STS_D
 5893              		.loc 1 2261 69 view .LVU1600
 5894 05da 1343     		orrs	r3, r3, r2
2261:Core/Src/deca_device.c ****         diagnostics->stsPower = ((uint16_t)temp[STS_DIAG_1_ID - IP_TOA_LO_ID + 1] << 8 | temp[STS_D
 5895              		.loc 1 2261 117 view .LVU1601
 5896 05dc 23F04043 		bic	r3, r3, #-1073741824
2260:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_0_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_0_ID 
 5897              		.loc 1 2260 30 view .LVU1602
 5898 05e0 6364     		str	r3, [r4, #68]
2262:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5899              		.loc 1 2262 9 is_stmt 1 view .LVU1603
2262:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5900              		.loc 1 2262 48 is_stmt 0 view .LVU1604
 5901 05e2 9DF86120 		ldrb	r2, [sp, #97]	@ zero_extendqisi2
2262:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5902              		.loc 1 2262 94 view .LVU1605
 5903 05e6 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
2262:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5904              		.loc 1 2262 88 view .LVU1606
 5905 05ea 43EA0223 		orr	r3, r3, r2, lsl #8
2262:Core/Src/deca_device.c ****         diagnostics->stsF1 = ((uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5906              		.loc 1 2262 31 view .LVU1607
 5907 05ee A4F84830 		strh	r3, [r4, #72]	@ movhi
2263:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_2_ID 
 5908              		.loc 1 2263 9 is_stmt 1 view .LVU1608
2263:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_2_ID 
 5909              		.loc 1 2263 45 is_stmt 0 view .LVU1609
 5910 05f2 9DF86720 		ldrb	r2, [sp, #103]	@ zero_extendqisi2
2263:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_2_ID 
 5911              		.loc 1 2263 102 view .LVU1610
 5912 05f6 9DF86630 		ldrb	r3, [sp, #102]	@ zero_extendqisi2
2263:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_2_ID 
ARM GAS  /tmp/cctZ3fzX.s 			page 213


 5913              		.loc 1 2263 137 view .LVU1611
 5914 05fa 1B04     		lsls	r3, r3, #16
2263:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_2_ID 
 5915              		.loc 1 2263 86 view .LVU1612
 5916 05fc 43EA0263 		orr	r3, r3, r2, lsl #24
2264:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5917              		.loc 1 2264 29 view .LVU1613
 5918 0600 9DF86520 		ldrb	r2, [sp, #101]	@ zero_extendqisi2
2264:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5919              		.loc 1 2264 13 view .LVU1614
 5920 0604 43EA0223 		orr	r3, r3, r2, lsl #8
2264:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5921              		.loc 1 2264 85 view .LVU1615
 5922 0608 9DF86420 		ldrb	r2, [sp, #100]	@ zero_extendqisi2
2264:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5923              		.loc 1 2264 69 view .LVU1616
 5924 060c 1343     		orrs	r3, r3, r2
2264:Core/Src/deca_device.c ****         diagnostics->stsF2 = ((uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 3] << 24 | (uint32_t)te
 5925              		.loc 1 2264 117 view .LVU1617
 5926 060e C3F31503 		ubfx	r3, r3, #0, #22
2263:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_2_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_2_ID 
 5927              		.loc 1 2263 28 view .LVU1618
 5928 0612 E364     		str	r3, [r4, #76]
2265:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_3_ID 
 5929              		.loc 1 2265 9 is_stmt 1 view .LVU1619
2265:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_3_ID 
 5930              		.loc 1 2265 45 is_stmt 0 view .LVU1620
 5931 0614 9DF86B20 		ldrb	r2, [sp, #107]	@ zero_extendqisi2
2265:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_3_ID 
 5932              		.loc 1 2265 102 view .LVU1621
 5933 0618 9DF86A30 		ldrb	r3, [sp, #106]	@ zero_extendqisi2
2265:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_3_ID 
 5934              		.loc 1 2265 137 view .LVU1622
 5935 061c 1B04     		lsls	r3, r3, #16
2265:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_3_ID 
 5936              		.loc 1 2265 86 view .LVU1623
 5937 061e 43EA0263 		orr	r3, r3, r2, lsl #24
2266:Core/Src/deca_device.c **** 
 5938              		.loc 1 2266 29 view .LVU1624
 5939 0622 9DF86920 		ldrb	r2, [sp, #105]	@ zero_extendqisi2
2266:Core/Src/deca_device.c **** 
 5940              		.loc 1 2266 13 view .LVU1625
 5941 0626 43EA0223 		orr	r3, r3, r2, lsl #8
2266:Core/Src/deca_device.c **** 
 5942              		.loc 1 2266 85 view .LVU1626
 5943 062a 9DF86820 		ldrb	r2, [sp, #104]	@ zero_extendqisi2
2266:Core/Src/deca_device.c **** 
 5944              		.loc 1 2266 69 view .LVU1627
 5945 062e 1343     		orrs	r3, r3, r2
2266:Core/Src/deca_device.c **** 
 5946              		.loc 1 2266 117 view .LVU1628
 5947 0630 C3F31503 		ubfx	r3, r3, #0, #22
2265:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_3_ID - IP_TOA_LO_ID + 1] << 8 | (uint32_t)temp[STS_DIAG_3_ID 
 5948              		.loc 1 2265 28 view .LVU1629
 5949 0634 2365     		str	r3, [r4, #80]
2269:Core/Src/deca_device.c **** 
 5950              		.loc 1 2269 9 is_stmt 1 view .LVU1630
ARM GAS  /tmp/cctZ3fzX.s 			page 214


 5951              	.LVL528:
2271:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp[
 5952              		.loc 1 2271 9 view .LVU1631
2271:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp[
 5953              		.loc 1 2271 45 is_stmt 0 view .LVU1632
 5954 0636 9DF86F20 		ldrb	r2, [sp, #111]	@ zero_extendqisi2
2271:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp[
 5955              		.loc 1 2271 116 view .LVU1633
 5956 063a 9DF86E30 		ldrb	r3, [sp, #110]	@ zero_extendqisi2
2271:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp[
 5957              		.loc 1 2271 165 view .LVU1634
 5958 063e 1B04     		lsls	r3, r3, #16
2271:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp[
 5959              		.loc 1 2271 100 view .LVU1635
 5960 0640 43EA0263 		orr	r3, r3, r2, lsl #24
2272:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[STS_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 5961              		.loc 1 2272 29 view .LVU1636
 5962 0644 9DF86D20 		ldrb	r2, [sp, #109]	@ zero_extendqisi2
2272:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[STS_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 5963              		.loc 1 2272 13 view .LVU1637
 5964 0648 43EA0223 		orr	r3, r3, r2, lsl #8
2272:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[STS_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 5965              		.loc 1 2272 99 view .LVU1638
 5966 064c 9DF86C20 		ldrb	r2, [sp, #108]	@ zero_extendqisi2
2272:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[STS_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 5967              		.loc 1 2272 83 view .LVU1639
 5968 0650 1343     		orrs	r3, r3, r2
2272:Core/Src/deca_device.c ****         diagnostics->stsFpIndex = ((uint16_t)temp[STS_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 5969              		.loc 1 2272 145 view .LVU1640
 5970 0652 C3F31503 		ubfx	r3, r3, #0, #22
2271:Core/Src/deca_device.c ****             | (uint32_t)temp[STS_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp[
 5971              		.loc 1 2271 28 view .LVU1641
 5972 0656 6365     		str	r3, [r4, #84]
2273:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[STS_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd + 
 5973              		.loc 1 2273 9 is_stmt 1 view .LVU1642
2273:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[STS_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd + 
 5974              		.loc 1 2273 50 is_stmt 0 view .LVU1643
 5975 0658 9DF87D20 		ldrb	r2, [sp, #125]	@ zero_extendqisi2
2273:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[STS_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd + 
 5976              		.loc 1 2273 110 view .LVU1644
 5977 065c 9DF87C30 		ldrb	r3, [sp, #124]	@ zero_extendqisi2
2273:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[STS_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd + 
 5978              		.loc 1 2273 104 view .LVU1645
 5979 0660 43EA0223 		orr	r3, r3, r2, lsl #8
2273:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[STS_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd + 
 5980              		.loc 1 2273 156 view .LVU1646
 5981 0664 C3F30E03 		ubfx	r3, r3, #0, #15
2273:Core/Src/deca_device.c ****         diagnostics->stsAccumCount = ((uint16_t)temp[STS_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd + 
 5982              		.loc 1 2273 33 view .LVU1647
 5983 0668 A4F85830 		strh	r3, [r4, #88]	@ movhi
2274:Core/Src/deca_device.c **** 
 5984              		.loc 1 2274 9 is_stmt 1 view .LVU1648
2274:Core/Src/deca_device.c **** 
 5985              		.loc 1 2274 53 is_stmt 0 view .LVU1649
 5986 066c 9DF88D20 		ldrb	r2, [sp, #141]	@ zero_extendqisi2
2274:Core/Src/deca_device.c **** 
 5987              		.loc 1 2274 114 view .LVU1650
ARM GAS  /tmp/cctZ3fzX.s 			page 215


 5988 0670 9DF88C30 		ldrb	r3, [sp, #140]	@ zero_extendqisi2
2274:Core/Src/deca_device.c **** 
 5989              		.loc 1 2274 108 view .LVU1651
 5990 0674 43EA0223 		orr	r3, r3, r2, lsl #8
2274:Core/Src/deca_device.c **** 
 5991              		.loc 1 2274 161 view .LVU1652
 5992 0678 C3F30B03 		ubfx	r3, r3, #0, #12
2274:Core/Src/deca_device.c **** 
 5993              		.loc 1 2274 36 view .LVU1653
 5994 067c A4F85A30 		strh	r3, [r4, #90]	@ movhi
2277:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 5995              		.loc 1 2277 9 is_stmt 1 view .LVU1654
2277:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 5996              		.loc 1 2277 48 is_stmt 0 view .LVU1655
 5997 0680 9DF8A720 		ldrb	r2, [sp, #167]	@ zero_extendqisi2
2277:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 5998              		.loc 1 2277 120 view .LVU1656
 5999 0684 9DF8A630 		ldrb	r3, [sp, #166]	@ zero_extendqisi2
2277:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6000              		.loc 1 2277 170 view .LVU1657
 6001 0688 1B04     		lsls	r3, r3, #16
2277:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6002              		.loc 1 2277 104 view .LVU1658
 6003 068a 43EA0263 		orr	r3, r3, r2, lsl #24
2278:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[STS1_DIAG_1_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 6004              		.loc 1 2278 29 view .LVU1659
 6005 068e 9DF8A520 		ldrb	r2, [sp, #165]	@ zero_extendqisi2
2278:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[STS1_DIAG_1_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 6006              		.loc 1 2278 13 view .LVU1660
 6007 0692 43EA0223 		orr	r3, r3, r2, lsl #8
2278:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[STS1_DIAG_1_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 6008              		.loc 1 2278 100 view .LVU1661
 6009 0696 9DF8A420 		ldrb	r2, [sp, #164]	@ zero_extendqisi2
2278:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[STS1_DIAG_1_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 6010              		.loc 1 2278 84 view .LVU1662
 6011 069a 1343     		orrs	r3, r3, r2
2278:Core/Src/deca_device.c ****         diagnostics->sts2Power = ((uint16_t)temp[STS1_DIAG_1_ID - STS_DIAG_4_ID + offset_0xd + 1] <
 6012              		.loc 1 2278 147 view .LVU1663
 6013 069c 23F04043 		bic	r3, r3, #-1073741824
2277:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_0_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6014              		.loc 1 2277 31 view .LVU1664
 6015 06a0 E365     		str	r3, [r4, #92]
2279:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6016              		.loc 1 2279 9 is_stmt 1 view .LVU1665
2279:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6017              		.loc 1 2279 49 is_stmt 0 view .LVU1666
 6018 06a2 9DF8A920 		ldrb	r2, [sp, #169]	@ zero_extendqisi2
2279:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6019              		.loc 1 2279 110 view .LVU1667
 6020 06a6 9DF8A830 		ldrb	r3, [sp, #168]	@ zero_extendqisi2
2279:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6021              		.loc 1 2279 104 view .LVU1668
 6022 06aa 43EA0223 		orr	r3, r3, r2, lsl #8
2279:Core/Src/deca_device.c ****         diagnostics->sts2F1 = ((uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6023              		.loc 1 2279 32 view .LVU1669
 6024 06ae A4F86030 		strh	r3, [r4, #96]	@ movhi
2280:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
ARM GAS  /tmp/cctZ3fzX.s 			page 216


 6025              		.loc 1 2280 9 is_stmt 1 view .LVU1670
2280:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6026              		.loc 1 2280 46 is_stmt 0 view .LVU1671
 6027 06b2 9DF8AF20 		ldrb	r2, [sp, #175]	@ zero_extendqisi2
2280:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6028              		.loc 1 2280 118 view .LVU1672
 6029 06b6 9DF8AE30 		ldrb	r3, [sp, #174]	@ zero_extendqisi2
2280:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6030              		.loc 1 2280 168 view .LVU1673
 6031 06ba 1B04     		lsls	r3, r3, #16
2280:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6032              		.loc 1 2280 102 view .LVU1674
 6033 06bc 43EA0263 		orr	r3, r3, r2, lsl #24
2281:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6034              		.loc 1 2281 29 view .LVU1675
 6035 06c0 9DF8AD20 		ldrb	r2, [sp, #173]	@ zero_extendqisi2
2281:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6036              		.loc 1 2281 13 view .LVU1676
 6037 06c4 43EA0223 		orr	r3, r3, r2, lsl #8
2281:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6038              		.loc 1 2281 100 view .LVU1677
 6039 06c8 9DF8AC20 		ldrb	r2, [sp, #172]	@ zero_extendqisi2
2281:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6040              		.loc 1 2281 84 view .LVU1678
 6041 06cc 1343     		orrs	r3, r3, r2
2281:Core/Src/deca_device.c ****         diagnostics->sts2F2 = ((uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6042              		.loc 1 2281 147 view .LVU1679
 6043 06ce C3F31503 		ubfx	r3, r3, #0, #22
2280:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_2_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6044              		.loc 1 2280 29 view .LVU1680
 6045 06d2 6366     		str	r3, [r4, #100]
2282:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6046              		.loc 1 2282 9 is_stmt 1 view .LVU1681
2282:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6047              		.loc 1 2282 46 is_stmt 0 view .LVU1682
 6048 06d4 9DF8B320 		ldrb	r2, [sp, #179]	@ zero_extendqisi2
2282:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6049              		.loc 1 2282 118 view .LVU1683
 6050 06d8 9DF8B230 		ldrb	r3, [sp, #178]	@ zero_extendqisi2
2282:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6051              		.loc 1 2282 168 view .LVU1684
 6052 06dc 1B04     		lsls	r3, r3, #16
2282:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6053              		.loc 1 2282 102 view .LVU1685
 6054 06de 43EA0263 		orr	r3, r3, r2, lsl #24
2283:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6055              		.loc 1 2283 29 view .LVU1686
 6056 06e2 9DF8B120 		ldrb	r2, [sp, #177]	@ zero_extendqisi2
2283:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6057              		.loc 1 2283 13 view .LVU1687
 6058 06e6 43EA0223 		orr	r3, r3, r2, lsl #8
2283:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6059              		.loc 1 2283 100 view .LVU1688
 6060 06ea 9DF8B020 		ldrb	r2, [sp, #176]	@ zero_extendqisi2
2283:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6061              		.loc 1 2283 84 view .LVU1689
 6062 06ee 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/cctZ3fzX.s 			page 217


2283:Core/Src/deca_device.c ****         diagnostics->sts2F3 = ((uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 3] << 2
 6063              		.loc 1 2283 147 view .LVU1690
 6064 06f0 C3F31503 		ubfx	r3, r3, #0, #22
2282:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_3_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6065              		.loc 1 2282 29 view .LVU1691
 6066 06f4 A366     		str	r3, [r4, #104]
2284:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6067              		.loc 1 2284 9 is_stmt 1 view .LVU1692
2284:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6068              		.loc 1 2284 46 is_stmt 0 view .LVU1693
 6069 06f6 9DF8B720 		ldrb	r2, [sp, #183]	@ zero_extendqisi2
2284:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6070              		.loc 1 2284 118 view .LVU1694
 6071 06fa 9DF8B630 		ldrb	r3, [sp, #182]	@ zero_extendqisi2
2284:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6072              		.loc 1 2284 168 view .LVU1695
 6073 06fe 1B04     		lsls	r3, r3, #16
2284:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6074              		.loc 1 2284 102 view .LVU1696
 6075 0700 43EA0263 		orr	r3, r3, r2, lsl #24
2285:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[STS1_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1]
 6076              		.loc 1 2285 29 view .LVU1697
 6077 0704 9DF8B520 		ldrb	r2, [sp, #181]	@ zero_extendqisi2
2285:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[STS1_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1]
 6078              		.loc 1 2285 13 view .LVU1698
 6079 0708 43EA0223 		orr	r3, r3, r2, lsl #8
2285:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[STS1_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1]
 6080              		.loc 1 2285 100 view .LVU1699
 6081 070c 9DF8B420 		ldrb	r2, [sp, #180]	@ zero_extendqisi2
2285:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[STS1_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1]
 6082              		.loc 1 2285 84 view .LVU1700
 6083 0710 1343     		orrs	r3, r3, r2
2285:Core/Src/deca_device.c ****         diagnostics->sts2FpIndex = ((uint16_t)temp[STS1_DIAG_8_ID - STS_DIAG_4_ID + offset_0xd + 1]
 6084              		.loc 1 2285 147 view .LVU1701
 6085 0712 C3F31503 		ubfx	r3, r3, #0, #22
2284:Core/Src/deca_device.c ****             | (uint32_t)temp[STS1_DIAG_4_ID - STS_DIAG_4_ID + offset_0xd + 1] << 8 | (uint32_t)temp
 6086              		.loc 1 2284 29 view .LVU1702
 6087 0716 E366     		str	r3, [r4, #108]
2286:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[STS1_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd 
 6088              		.loc 1 2286 9 is_stmt 1 view .LVU1703
2286:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[STS1_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd 
 6089              		.loc 1 2286 51 is_stmt 0 view .LVU1704
 6090 0718 9DF8C520 		ldrb	r2, [sp, #197]	@ zero_extendqisi2
2286:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[STS1_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd 
 6091              		.loc 1 2286 112 view .LVU1705
 6092 071c 9DF8C430 		ldrb	r3, [sp, #196]	@ zero_extendqisi2
2286:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[STS1_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd 
 6093              		.loc 1 2286 106 view .LVU1706
 6094 0720 43EA0223 		orr	r3, r3, r2, lsl #8
2286:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[STS1_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd 
 6095              		.loc 1 2286 159 view .LVU1707
 6096 0724 C3F30E03 		ubfx	r3, r3, #0, #15
2286:Core/Src/deca_device.c ****         diagnostics->sts2AccumCount = ((uint16_t)temp[STS1_DIAG_12_ID - STS_DIAG_4_ID + offset_0xd 
 6097              		.loc 1 2286 34 view .LVU1708
 6098 0728 A4F87030 		strh	r3, [r4, #112]	@ movhi
2287:Core/Src/deca_device.c ****         break;
 6099              		.loc 1 2287 9 is_stmt 1 view .LVU1709
ARM GAS  /tmp/cctZ3fzX.s 			page 218


2287:Core/Src/deca_device.c ****         break;
 6100              		.loc 1 2287 54 is_stmt 0 view .LVU1710
 6101 072c 9DF8D520 		ldrb	r2, [sp, #213]	@ zero_extendqisi2
2287:Core/Src/deca_device.c ****         break;
 6102              		.loc 1 2287 116 view .LVU1711
 6103 0730 9DF8D430 		ldrb	r3, [sp, #212]	@ zero_extendqisi2
2287:Core/Src/deca_device.c ****         break;
 6104              		.loc 1 2287 110 view .LVU1712
 6105 0734 43EA0223 		orr	r3, r3, r2, lsl #8
2287:Core/Src/deca_device.c ****         break;
 6106              		.loc 1 2287 164 view .LVU1713
 6107 0738 C3F30B03 		ubfx	r3, r3, #0, #12
2287:Core/Src/deca_device.c ****         break;
 6108              		.loc 1 2287 37 view .LVU1714
 6109 073c A4F87230 		strh	r3, [r4, #114]	@ movhi
2288:Core/Src/deca_device.c ****     }
 6110              		.loc 1 2288 9 is_stmt 1 view .LVU1715
2290:Core/Src/deca_device.c **** 
 6111              		.loc 1 2290 1 is_stmt 0 view .LVU1716
 6112 0740 45E6     		b	.L392
 6113              	.L420:
 6114 0742 00BF     		.align	2
 6115              	.L419:
 6116 0744 00000000 		.word	.LANCHOR2
 6117              		.cfi_endproc
 6118              	.LFE56:
 6120              		.section	.text.dwt_readtxtimestamp,"ax",%progbits
 6121              		.align	1
 6122              		.global	dwt_readtxtimestamp
 6123              		.syntax unified
 6124              		.thumb
 6125              		.thumb_func
 6126              		.fpu fpv4-sp-d16
 6128              	dwt_readtxtimestamp:
 6129              	.LVL529:
 6130              	.LFB57:
2303:Core/Src/deca_device.c ****     dwt_readfromdevice(TX_TIME_LO_ID, 0, TX_TIME_TX_STAMP_LEN, timestamp); // Read bytes directly i
 6131              		.loc 1 2303 1 is_stmt 1 view -0
 6132              		.cfi_startproc
 6133              		@ args = 0, pretend = 0, frame = 0
 6134              		@ frame_needed = 0, uses_anonymous_args = 0
2303:Core/Src/deca_device.c ****     dwt_readfromdevice(TX_TIME_LO_ID, 0, TX_TIME_TX_STAMP_LEN, timestamp); // Read bytes directly i
 6135              		.loc 1 2303 1 is_stmt 0 view .LVU1718
 6136 0000 08B5     		push	{r3, lr}
 6137              		.cfi_def_cfa_offset 8
 6138              		.cfi_offset 3, -8
 6139              		.cfi_offset 14, -4
 6140 0002 0346     		mov	r3, r0
2304:Core/Src/deca_device.c **** }
 6141              		.loc 1 2304 5 is_stmt 1 view .LVU1719
 6142 0004 0522     		movs	r2, #5
 6143 0006 0021     		movs	r1, #0
 6144 0008 7420     		movs	r0, #116
 6145              	.LVL530:
2304:Core/Src/deca_device.c **** }
 6146              		.loc 1 2304 5 is_stmt 0 view .LVU1720
 6147 000a FFF7FEFF 		bl	dwt_readfromdevice
ARM GAS  /tmp/cctZ3fzX.s 			page 219


 6148              	.LVL531:
2305:Core/Src/deca_device.c **** 
 6149              		.loc 1 2305 1 view .LVU1721
 6150 000e 08BD     		pop	{r3, pc}
 6151              		.cfi_endproc
 6152              	.LFE57:
 6154              		.section	.text.dwt_readtxtimestamphi32,"ax",%progbits
 6155              		.align	1
 6156              		.global	dwt_readtxtimestamphi32
 6157              		.syntax unified
 6158              		.thumb
 6159              		.thumb_func
 6160              		.fpu fpv4-sp-d16
 6162              	dwt_readtxtimestamphi32:
 6163              	.LFB58:
2317:Core/Src/deca_device.c ****     return dwt_read32bitoffsetreg(TX_TIME_LO_ID, 1); // Offset is 1 to get the 4 upper bytes out of
 6164              		.loc 1 2317 1 is_stmt 1 view -0
 6165              		.cfi_startproc
 6166              		@ args = 0, pretend = 0, frame = 0
 6167              		@ frame_needed = 0, uses_anonymous_args = 0
 6168 0000 08B5     		push	{r3, lr}
 6169              		.cfi_def_cfa_offset 8
 6170              		.cfi_offset 3, -8
 6171              		.cfi_offset 14, -4
2318:Core/Src/deca_device.c **** }
 6172              		.loc 1 2318 5 view .LVU1723
2318:Core/Src/deca_device.c **** }
 6173              		.loc 1 2318 12 is_stmt 0 view .LVU1724
 6174 0002 0121     		movs	r1, #1
 6175 0004 7420     		movs	r0, #116
 6176 0006 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 6177              	.LVL532:
2319:Core/Src/deca_device.c **** 
 6178              		.loc 1 2319 1 view .LVU1725
 6179 000a 08BD     		pop	{r3, pc}
 6180              		.cfi_endproc
 6181              	.LFE58:
 6183              		.section	.text.dwt_readtxtimestamplo32,"ax",%progbits
 6184              		.align	1
 6185              		.global	dwt_readtxtimestamplo32
 6186              		.syntax unified
 6187              		.thumb
 6188              		.thumb_func
 6189              		.fpu fpv4-sp-d16
 6191              	dwt_readtxtimestamplo32:
 6192              	.LFB59:
2331:Core/Src/deca_device.c ****     return dwt_read32bitreg(TX_TIME_LO_ID); // Read TX TIME as a 32-bit register to get the 4 lower
 6193              		.loc 1 2331 1 is_stmt 1 view -0
 6194              		.cfi_startproc
 6195              		@ args = 0, pretend = 0, frame = 0
 6196              		@ frame_needed = 0, uses_anonymous_args = 0
 6197 0000 08B5     		push	{r3, lr}
 6198              		.cfi_def_cfa_offset 8
 6199              		.cfi_offset 3, -8
 6200              		.cfi_offset 14, -4
2332:Core/Src/deca_device.c **** }
 6201              		.loc 1 2332 5 view .LVU1727
ARM GAS  /tmp/cctZ3fzX.s 			page 220


2332:Core/Src/deca_device.c **** }
 6202              		.loc 1 2332 12 is_stmt 0 view .LVU1728
 6203 0002 0021     		movs	r1, #0
 6204 0004 7420     		movs	r0, #116
 6205 0006 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 6206              	.LVL533:
2333:Core/Src/deca_device.c **** 
 6207              		.loc 1 2333 1 view .LVU1729
 6208 000a 08BD     		pop	{r3, pc}
 6209              		.cfi_endproc
 6210              	.LFE59:
 6212              		.section	.text.dwt_readpdoa,"ax",%progbits
 6213              		.align	1
 6214              		.global	dwt_readpdoa
 6215              		.syntax unified
 6216              		.thumb
 6217              		.thumb_func
 6218              		.fpu fpv4-sp-d16
 6220              	dwt_readpdoa:
 6221              	.LFB60:
2348:Core/Src/deca_device.c ****     int16_t  pdoa;
 6222              		.loc 1 2348 1 is_stmt 1 view -0
 6223              		.cfi_startproc
 6224              		@ args = 0, pretend = 0, frame = 0
 6225              		@ frame_needed = 0, uses_anonymous_args = 0
 6226 0000 08B5     		push	{r3, lr}
 6227              		.cfi_def_cfa_offset 8
 6228              		.cfi_offset 3, -8
 6229              		.cfi_offset 14, -4
2349:Core/Src/deca_device.c **** 
 6230              		.loc 1 2349 5 view .LVU1731
2351:Core/Src/deca_device.c ****     {
 6231              		.loc 1 2351 5 view .LVU1732
2351:Core/Src/deca_device.c ****     {
 6232              		.loc 1 2351 25 is_stmt 0 view .LVU1733
 6233 0002 134B     		ldr	r3, .L433
 6234 0004 1B68     		ldr	r3, [r3]
 6235 0006 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
2351:Core/Src/deca_device.c ****     {
 6236              		.loc 1 2351 5 view .LVU1734
 6237 0008 012B     		cmp	r3, #1
 6238 000a 12D0     		beq	.L428
 6239 000c 032B     		cmp	r3, #3
 6240 000e 17D1     		bne	.L429
2355:Core/Src/deca_device.c ****         break;
 6241              		.loc 1 2355 9 is_stmt 1 view .LVU1735
2355:Core/Src/deca_device.c ****         break;
 6242              		.loc 1 2355 16 is_stmt 0 view .LVU1736
 6243 0010 1621     		movs	r1, #22
 6244 0012 4FF4F010 		mov	r0, #1966080
 6245 0016 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 6246              	.LVL534:
2355:Core/Src/deca_device.c ****         break;
 6247              		.loc 1 2355 14 view .LVU1737
 6248 001a C0F30D00 		ubfx	r0, r0, #0, #14
 6249              	.LVL535:
2356:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
ARM GAS  /tmp/cctZ3fzX.s 			page 221


 6250              		.loc 1 2356 9 is_stmt 1 view .LVU1738
 6251              	.L430:
2365:Core/Src/deca_device.c ****     return pdoa;
 6252              		.loc 1 2365 5 view .LVU1739
2365:Core/Src/deca_device.c ****     return pdoa;
 6253              		.loc 1 2365 14 is_stmt 0 view .LVU1740
 6254 001e 83B2     		uxth	r3, r0
2365:Core/Src/deca_device.c ****     return pdoa;
 6255              		.loc 1 2365 8 view .LVU1741
 6256 0020 10F4005F 		tst	r0, #8192
 6257 0024 04D0     		beq	.L431
2365:Core/Src/deca_device.c ****     return pdoa;
 6258              		.loc 1 2365 38 is_stmt 1 discriminator 1 view .LVU1742
2365:Core/Src/deca_device.c ****     return pdoa;
 6259              		.loc 1 2365 43 is_stmt 0 discriminator 1 view .LVU1743
 6260 0026 6FEA8340 		mvn	r0, r3, lsl #18
 6261              	.LVL536:
2365:Core/Src/deca_device.c ****     return pdoa;
 6262              		.loc 1 2365 43 discriminator 1 view .LVU1744
 6263 002a 6FEA9040 		mvn	r0, r0, lsr #18
 6264 002e 00B2     		sxth	r0, r0
 6265              	.LVL537:
 6266              	.L431:
2366:Core/Src/deca_device.c **** }
 6267              		.loc 1 2366 5 is_stmt 1 view .LVU1745
2367:Core/Src/deca_device.c **** 
 6268              		.loc 1 2367 1 is_stmt 0 view .LVU1746
 6269 0030 08BD     		pop	{r3, pc}
 6270              	.LVL538:
 6271              	.L428:
2358:Core/Src/deca_device.c ****         break;
 6272              		.loc 1 2358 9 is_stmt 1 view .LVU1747
2358:Core/Src/deca_device.c ****         break;
 6273              		.loc 1 2358 16 is_stmt 0 view .LVU1748
 6274 0032 0221     		movs	r1, #2
 6275 0034 0748     		ldr	r0, .L433+4
 6276 0036 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 6277              	.LVL539:
2358:Core/Src/deca_device.c ****         break;
 6278              		.loc 1 2358 14 view .LVU1749
 6279 003a C0F30D00 		ubfx	r0, r0, #0, #14
 6280              	.LVL540:
2359:Core/Src/deca_device.c ****     default:
 6281              		.loc 1 2359 9 is_stmt 1 view .LVU1750
 6282 003e EEE7     		b	.L430
 6283              	.LVL541:
 6284              	.L429:
2361:Core/Src/deca_device.c ****         break;
 6285              		.loc 1 2361 9 view .LVU1751
2361:Core/Src/deca_device.c ****         break;
 6286              		.loc 1 2361 16 is_stmt 0 view .LVU1752
 6287 0040 0221     		movs	r1, #2
 6288 0042 0548     		ldr	r0, .L433+8
 6289 0044 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 6290              	.LVL542:
2361:Core/Src/deca_device.c ****         break;
 6291              		.loc 1 2361 14 view .LVU1753
ARM GAS  /tmp/cctZ3fzX.s 			page 222


 6292 0048 C0F30D00 		ubfx	r0, r0, #0, #14
 6293              	.LVL543:
2362:Core/Src/deca_device.c ****     }
 6294              		.loc 1 2362 9 is_stmt 1 view .LVU1754
 6295 004c E7E7     		b	.L430
 6296              	.L434:
 6297 004e 00BF     		.align	2
 6298              	.L433:
 6299 0050 00000000 		.word	.LANCHOR2
 6300 0054 14001800 		.word	1572884
 6301 0058 1C000C00 		.word	786460
 6302              		.cfi_endproc
 6303              	.LFE60:
 6305              		.section	.text.dwt_readtdoa,"ax",%progbits
 6306              		.align	1
 6307              		.global	dwt_readtdoa
 6308              		.syntax unified
 6309              		.thumb
 6310              		.thumb_func
 6311              		.fpu fpv4-sp-d16
 6313              	dwt_readtdoa:
 6314              	.LVL544:
 6315              	.LFB61:
2383:Core/Src/deca_device.c ****     // timestamp difference of the 2 cipher RX timestamps
 6316              		.loc 1 2383 1 view -0
 6317              		.cfi_startproc
 6318              		@ args = 0, pretend = 0, frame = 0
 6319              		@ frame_needed = 0, uses_anonymous_args = 0
2383:Core/Src/deca_device.c ****     // timestamp difference of the 2 cipher RX timestamps
 6320              		.loc 1 2383 1 is_stmt 0 view .LVU1756
 6321 0000 10B5     		push	{r4, lr}
 6322              		.cfi_def_cfa_offset 8
 6323              		.cfi_offset 4, -8
 6324              		.cfi_offset 14, -4
 6325 0002 0446     		mov	r4, r0
2385:Core/Src/deca_device.c ****     tdoa[5] &= 0x01; // TDOA value is 41 bits long. You will need to read 6 bytes and mask the high
 6326              		.loc 1 2385 5 is_stmt 1 view .LVU1757
 6327 0004 0346     		mov	r3, r0
 6328 0006 0622     		movs	r2, #6
 6329 0008 0021     		movs	r1, #0
 6330 000a 0448     		ldr	r0, .L437
 6331              	.LVL545:
2385:Core/Src/deca_device.c ****     tdoa[5] &= 0x01; // TDOA value is 41 bits long. You will need to read 6 bytes and mask the high
 6332              		.loc 1 2385 5 is_stmt 0 view .LVU1758
 6333 000c FFF7FEFF 		bl	dwt_readfromdevice
 6334              	.LVL546:
2386:Core/Src/deca_device.c **** }
 6335              		.loc 1 2386 5 is_stmt 1 view .LVU1759
2386:Core/Src/deca_device.c **** }
 6336              		.loc 1 2386 13 is_stmt 0 view .LVU1760
 6337 0010 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 6338 0012 03F00103 		and	r3, r3, #1
 6339 0016 6371     		strb	r3, [r4, #5]
2387:Core/Src/deca_device.c **** 
 6340              		.loc 1 2387 1 view .LVU1761
 6341 0018 10BD     		pop	{r4, pc}
 6342              	.LVL547:
ARM GAS  /tmp/cctZ3fzX.s 			page 223


 6343              	.L438:
2387:Core/Src/deca_device.c **** 
 6344              		.loc 1 2387 1 view .LVU1762
 6345 001a 00BF     		.align	2
 6346              	.L437:
 6347 001c 18000C00 		.word	786456
 6348              		.cfi_endproc
 6349              	.LFE61:
 6351              		.section	.text.dwt_readrxtimestamp,"ax",%progbits
 6352              		.align	1
 6353              		.global	dwt_readrxtimestamp
 6354              		.syntax unified
 6355              		.thumb
 6356              		.thumb_func
 6357              		.fpu fpv4-sp-d16
 6359              	dwt_readrxtimestamp:
 6360              	.LVL548:
 6361              	.LFB62:
2400:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
 6362              		.loc 1 2400 1 is_stmt 1 view -0
 6363              		.cfi_startproc
 6364              		@ args = 0, pretend = 0, frame = 0
 6365              		@ frame_needed = 0, uses_anonymous_args = 0
2400:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
 6366              		.loc 1 2400 1 is_stmt 0 view .LVU1764
 6367 0000 08B5     		push	{r3, lr}
 6368              		.cfi_def_cfa_offset 8
 6369              		.cfi_offset 3, -8
 6370              		.cfi_offset 14, -4
 6371 0002 0346     		mov	r3, r0
2401:Core/Src/deca_device.c ****     {
 6372              		.loc 1 2401 5 is_stmt 1 view .LVU1765
2401:Core/Src/deca_device.c ****     {
 6373              		.loc 1 2401 25 is_stmt 0 view .LVU1766
 6374 0004 0C4A     		ldr	r2, .L444
 6375 0006 1268     		ldr	r2, [r2]
 6376 0008 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
2401:Core/Src/deca_device.c ****     {
 6377              		.loc 1 2401 5 view .LVU1767
 6378 000a 012A     		cmp	r2, #1
 6379 000c 08D0     		beq	.L440
 6380 000e 032A     		cmp	r2, #3
 6381 0010 0CD1     		bne	.L441
2405:Core/Src/deca_device.c ****         break;
 6382              		.loc 1 2405 9 is_stmt 1 view .LVU1768
 6383 0012 0522     		movs	r2, #5
 6384 0014 0421     		movs	r1, #4
 6385 0016 4FF4F010 		mov	r0, #1966080
 6386              	.LVL549:
2405:Core/Src/deca_device.c ****         break;
 6387              		.loc 1 2405 9 is_stmt 0 view .LVU1769
 6388 001a FFF7FEFF 		bl	dwt_readfromdevice
 6389              	.LVL550:
2406:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
 6390              		.loc 1 2406 9 is_stmt 1 view .LVU1770
 6391              	.L439:
2414:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 224


 6392              		.loc 1 2414 1 is_stmt 0 view .LVU1771
 6393 001e 08BD     		pop	{r3, pc}
 6394              	.LVL551:
 6395              	.L440:
2408:Core/Src/deca_device.c ****         break;
 6396              		.loc 1 2408 9 is_stmt 1 view .LVU1772
 6397 0020 0522     		movs	r2, #5
 6398 0022 0021     		movs	r1, #0
 6399 0024 0548     		ldr	r0, .L444+4
 6400              	.LVL552:
2408:Core/Src/deca_device.c ****         break;
 6401              		.loc 1 2408 9 is_stmt 0 view .LVU1773
 6402 0026 FFF7FEFF 		bl	dwt_readfromdevice
 6403              	.LVL553:
2409:Core/Src/deca_device.c ****     default:
 6404              		.loc 1 2409 9 is_stmt 1 view .LVU1774
 6405 002a F8E7     		b	.L439
 6406              	.LVL554:
 6407              	.L441:
2411:Core/Src/deca_device.c ****         break;
 6408              		.loc 1 2411 9 view .LVU1775
 6409 002c 0522     		movs	r2, #5
 6410 002e 0021     		movs	r1, #0
 6411 0030 6420     		movs	r0, #100
 6412              	.LVL555:
2411:Core/Src/deca_device.c ****         break;
 6413              		.loc 1 2411 9 is_stmt 0 view .LVU1776
 6414 0032 FFF7FEFF 		bl	dwt_readfromdevice
 6415              	.LVL556:
2412:Core/Src/deca_device.c ****     }
 6416              		.loc 1 2412 9 is_stmt 1 view .LVU1777
2414:Core/Src/deca_device.c **** 
 6417              		.loc 1 2414 1 is_stmt 0 view .LVU1778
 6418 0036 F2E7     		b	.L439
 6419              	.L445:
 6420              		.align	2
 6421              	.L444:
 6422 0038 00000000 		.word	.LANCHOR2
 6423 003c 04001800 		.word	1572868
 6424              		.cfi_endproc
 6425              	.LFE62:
 6427              		.section	.text.dwt_readrxtimestampunadj,"ax",%progbits
 6428              		.align	1
 6429              		.global	dwt_readrxtimestampunadj
 6430              		.syntax unified
 6431              		.thumb
 6432              		.thumb_func
 6433              		.fpu fpv4-sp-d16
 6435              	dwt_readrxtimestampunadj:
 6436              	.LVL557:
 6437              	.LFB63:
2427:Core/Src/deca_device.c ****     timestamp[0] = 0;
 6438              		.loc 1 2427 1 is_stmt 1 view -0
 6439              		.cfi_startproc
 6440              		@ args = 0, pretend = 0, frame = 0
 6441              		@ frame_needed = 0, uses_anonymous_args = 0
2427:Core/Src/deca_device.c ****     timestamp[0] = 0;
ARM GAS  /tmp/cctZ3fzX.s 			page 225


 6442              		.loc 1 2427 1 is_stmt 0 view .LVU1780
 6443 0000 08B5     		push	{r3, lr}
 6444              		.cfi_def_cfa_offset 8
 6445              		.cfi_offset 3, -8
 6446              		.cfi_offset 14, -4
2428:Core/Src/deca_device.c ****     dwt_readfromdevice(RX_TIME_RAW_ID, 0, RX_TIME_RX_STAMP_LEN-1, &timestamp[1]);
 6447              		.loc 1 2428 5 is_stmt 1 view .LVU1781
2428:Core/Src/deca_device.c ****     dwt_readfromdevice(RX_TIME_RAW_ID, 0, RX_TIME_RX_STAMP_LEN-1, &timestamp[1]);
 6448              		.loc 1 2428 18 is_stmt 0 view .LVU1782
 6449 0002 0021     		movs	r1, #0
 6450 0004 0346     		mov	r3, r0
 6451 0006 03F8011B 		strb	r1, [r3], #1
2429:Core/Src/deca_device.c **** }
 6452              		.loc 1 2429 5 is_stmt 1 view .LVU1783
 6453 000a 0422     		movs	r2, #4
 6454 000c 7020     		movs	r0, #112
 6455              	.LVL558:
2429:Core/Src/deca_device.c **** }
 6456              		.loc 1 2429 5 is_stmt 0 view .LVU1784
 6457 000e FFF7FEFF 		bl	dwt_readfromdevice
 6458              	.LVL559:
2430:Core/Src/deca_device.c **** 
 6459              		.loc 1 2430 1 view .LVU1785
 6460 0012 08BD     		pop	{r3, pc}
 6461              		.cfi_endproc
 6462              	.LFE63:
 6464              		.section	.text.dwt_readrxtimestamp_ipatov,"ax",%progbits
 6465              		.align	1
 6466              		.global	dwt_readrxtimestamp_ipatov
 6467              		.syntax unified
 6468              		.thumb
 6469              		.thumb_func
 6470              		.fpu fpv4-sp-d16
 6472              	dwt_readrxtimestamp_ipatov:
 6473              	.LVL560:
 6474              	.LFB64:
2443:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
 6475              		.loc 1 2443 1 is_stmt 1 view -0
 6476              		.cfi_startproc
 6477              		@ args = 0, pretend = 0, frame = 0
 6478              		@ frame_needed = 0, uses_anonymous_args = 0
2443:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
 6479              		.loc 1 2443 1 is_stmt 0 view .LVU1787
 6480 0000 08B5     		push	{r3, lr}
 6481              		.cfi_def_cfa_offset 8
 6482              		.cfi_offset 3, -8
 6483              		.cfi_offset 14, -4
 6484 0002 0346     		mov	r3, r0
2444:Core/Src/deca_device.c ****     {
 6485              		.loc 1 2444 5 is_stmt 1 view .LVU1788
2444:Core/Src/deca_device.c ****     {
 6486              		.loc 1 2444 25 is_stmt 0 view .LVU1789
 6487 0004 0D4A     		ldr	r2, .L453
 6488 0006 1268     		ldr	r2, [r2]
 6489 0008 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
2444:Core/Src/deca_device.c ****     {
 6490              		.loc 1 2444 5 view .LVU1790
ARM GAS  /tmp/cctZ3fzX.s 			page 226


 6491 000a 012A     		cmp	r2, #1
 6492 000c 08D0     		beq	.L449
 6493 000e 032A     		cmp	r2, #3
 6494 0010 0CD1     		bne	.L450
2448:Core/Src/deca_device.c ****         break;
 6495              		.loc 1 2448 9 is_stmt 1 view .LVU1791
 6496 0012 0522     		movs	r2, #5
 6497 0014 2021     		movs	r1, #32
 6498 0016 4FF4F010 		mov	r0, #1966080
 6499              	.LVL561:
2448:Core/Src/deca_device.c ****         break;
 6500              		.loc 1 2448 9 is_stmt 0 view .LVU1792
 6501 001a FFF7FEFF 		bl	dwt_readfromdevice
 6502              	.LVL562:
2449:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
 6503              		.loc 1 2449 9 is_stmt 1 view .LVU1793
 6504              	.L448:
2457:Core/Src/deca_device.c **** 
 6505              		.loc 1 2457 1 is_stmt 0 view .LVU1794
 6506 001e 08BD     		pop	{r3, pc}
 6507              	.LVL563:
 6508              	.L449:
2451:Core/Src/deca_device.c ****         break;
 6509              		.loc 1 2451 9 is_stmt 1 view .LVU1795
 6510 0020 0522     		movs	r2, #5
 6511 0022 0021     		movs	r1, #0
 6512 0024 0648     		ldr	r0, .L453+4
 6513              	.LVL564:
2451:Core/Src/deca_device.c ****         break;
 6514              		.loc 1 2451 9 is_stmt 0 view .LVU1796
 6515 0026 FFF7FEFF 		bl	dwt_readfromdevice
 6516              	.LVL565:
2452:Core/Src/deca_device.c ****     default:
 6517              		.loc 1 2452 9 is_stmt 1 view .LVU1797
 6518 002a F8E7     		b	.L448
 6519              	.LVL566:
 6520              	.L450:
2454:Core/Src/deca_device.c ****         break;
 6521              		.loc 1 2454 9 view .LVU1798
 6522 002c 0522     		movs	r2, #5
 6523 002e 0021     		movs	r1, #0
 6524 0030 4FF44020 		mov	r0, #786432
 6525              	.LVL567:
2454:Core/Src/deca_device.c ****         break;
 6526              		.loc 1 2454 9 is_stmt 0 view .LVU1799
 6527 0034 FFF7FEFF 		bl	dwt_readfromdevice
 6528              	.LVL568:
2455:Core/Src/deca_device.c ****     }
 6529              		.loc 1 2455 9 is_stmt 1 view .LVU1800
2457:Core/Src/deca_device.c **** 
 6530              		.loc 1 2457 1 is_stmt 0 view .LVU1801
 6531 0038 F1E7     		b	.L448
 6532              	.L454:
 6533 003a 00BF     		.align	2
 6534              	.L453:
 6535 003c 00000000 		.word	.LANCHOR2
 6536 0040 20001800 		.word	1572896
ARM GAS  /tmp/cctZ3fzX.s 			page 227


 6537              		.cfi_endproc
 6538              	.LFE64:
 6540              		.section	.text.dwt_readrxtimestamp_sts,"ax",%progbits
 6541              		.align	1
 6542              		.global	dwt_readrxtimestamp_sts
 6543              		.syntax unified
 6544              		.thumb
 6545              		.thumb_func
 6546              		.fpu fpv4-sp-d16
 6548              	dwt_readrxtimestamp_sts:
 6549              	.LVL569:
 6550              	.LFB65:
2470:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
 6551              		.loc 1 2470 1 is_stmt 1 view -0
 6552              		.cfi_startproc
 6553              		@ args = 0, pretend = 0, frame = 0
 6554              		@ frame_needed = 0, uses_anonymous_args = 0
2470:Core/Src/deca_device.c ****     switch (pdw3000local->dblbuffon)    //check if in double buffer mode and if so which buffer hos
 6555              		.loc 1 2470 1 is_stmt 0 view .LVU1803
 6556 0000 08B5     		push	{r3, lr}
 6557              		.cfi_def_cfa_offset 8
 6558              		.cfi_offset 3, -8
 6559              		.cfi_offset 14, -4
 6560 0002 0346     		mov	r3, r0
2471:Core/Src/deca_device.c ****     {
 6561              		.loc 1 2471 5 is_stmt 1 view .LVU1804
2471:Core/Src/deca_device.c ****     {
 6562              		.loc 1 2471 25 is_stmt 0 view .LVU1805
 6563 0004 0C4A     		ldr	r2, .L460
 6564 0006 1268     		ldr	r2, [r2]
 6565 0008 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
2471:Core/Src/deca_device.c ****     {
 6566              		.loc 1 2471 5 view .LVU1806
 6567 000a 012A     		cmp	r2, #1
 6568 000c 08D0     		beq	.L456
 6569 000e 032A     		cmp	r2, #3
 6570 0010 0CD1     		bne	.L457
2475:Core/Src/deca_device.c ****         break;
 6571              		.loc 1 2475 9 is_stmt 1 view .LVU1807
 6572 0012 0522     		movs	r2, #5
 6573 0014 2821     		movs	r1, #40
 6574 0016 4FF4F010 		mov	r0, #1966080
 6575              	.LVL570:
2475:Core/Src/deca_device.c ****         break;
 6576              		.loc 1 2475 9 is_stmt 0 view .LVU1808
 6577 001a FFF7FEFF 		bl	dwt_readfromdevice
 6578              	.LVL571:
2476:Core/Src/deca_device.c ****     case DBL_BUFF_ACCESS_BUFFER_0:
 6579              		.loc 1 2476 9 is_stmt 1 view .LVU1809
 6580              	.L455:
2484:Core/Src/deca_device.c **** 
 6581              		.loc 1 2484 1 is_stmt 0 view .LVU1810
 6582 001e 08BD     		pop	{r3, pc}
 6583              	.LVL572:
 6584              	.L456:
2478:Core/Src/deca_device.c ****         break;
 6585              		.loc 1 2478 9 is_stmt 1 view .LVU1811
ARM GAS  /tmp/cctZ3fzX.s 			page 228


 6586 0020 0522     		movs	r2, #5
 6587 0022 0021     		movs	r1, #0
 6588 0024 0548     		ldr	r0, .L460+4
 6589              	.LVL573:
2478:Core/Src/deca_device.c ****         break;
 6590              		.loc 1 2478 9 is_stmt 0 view .LVU1812
 6591 0026 FFF7FEFF 		bl	dwt_readfromdevice
 6592              	.LVL574:
2479:Core/Src/deca_device.c ****     default:
 6593              		.loc 1 2479 9 is_stmt 1 view .LVU1813
 6594 002a F8E7     		b	.L455
 6595              	.LVL575:
 6596              	.L457:
2481:Core/Src/deca_device.c ****         break;
 6597              		.loc 1 2481 9 view .LVU1814
 6598 002c 0522     		movs	r2, #5
 6599 002e 0021     		movs	r1, #0
 6600 0030 0348     		ldr	r0, .L460+8
 6601              	.LVL576:
2481:Core/Src/deca_device.c ****         break;
 6602              		.loc 1 2481 9 is_stmt 0 view .LVU1815
 6603 0032 FFF7FEFF 		bl	dwt_readfromdevice
 6604              	.LVL577:
2482:Core/Src/deca_device.c ****     }
 6605              		.loc 1 2482 9 is_stmt 1 view .LVU1816
2484:Core/Src/deca_device.c **** 
 6606              		.loc 1 2484 1 is_stmt 0 view .LVU1817
 6607 0036 F2E7     		b	.L455
 6608              	.L461:
 6609              		.align	2
 6610              	.L460:
 6611 0038 00000000 		.word	.LANCHOR2
 6612 003c 28001800 		.word	1572904
 6613 0040 08000C00 		.word	786440
 6614              		.cfi_endproc
 6615              	.LFE65:
 6617              		.section	.text.dwt_readrxtimestamphi32,"ax",%progbits
 6618              		.align	1
 6619              		.global	dwt_readrxtimestamphi32
 6620              		.syntax unified
 6621              		.thumb
 6622              		.thumb_func
 6623              		.fpu fpv4-sp-d16
 6625              	dwt_readrxtimestamphi32:
 6626              	.LFB66:
2496:Core/Src/deca_device.c ****     return dwt_read32bitoffsetreg(RX_TIME_0_ID, 1); // Offset is 1 to get the 4 upper bytes out of 
 6627              		.loc 1 2496 1 is_stmt 1 view -0
 6628              		.cfi_startproc
 6629              		@ args = 0, pretend = 0, frame = 0
 6630              		@ frame_needed = 0, uses_anonymous_args = 0
 6631 0000 08B5     		push	{r3, lr}
 6632              		.cfi_def_cfa_offset 8
 6633              		.cfi_offset 3, -8
 6634              		.cfi_offset 14, -4
2497:Core/Src/deca_device.c **** }
 6635              		.loc 1 2497 5 view .LVU1819
2497:Core/Src/deca_device.c **** }
ARM GAS  /tmp/cctZ3fzX.s 			page 229


 6636              		.loc 1 2497 12 is_stmt 0 view .LVU1820
 6637 0002 0121     		movs	r1, #1
 6638 0004 6420     		movs	r0, #100
 6639 0006 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 6640              	.LVL578:
2498:Core/Src/deca_device.c **** 
 6641              		.loc 1 2498 1 view .LVU1821
 6642 000a 08BD     		pop	{r3, pc}
 6643              		.cfi_endproc
 6644              	.LFE66:
 6646              		.section	.text.dwt_readrxtimestamplo32,"ax",%progbits
 6647              		.align	1
 6648              		.global	dwt_readrxtimestamplo32
 6649              		.syntax unified
 6650              		.thumb
 6651              		.thumb_func
 6652              		.fpu fpv4-sp-d16
 6654              	dwt_readrxtimestamplo32:
 6655              	.LFB67:
2510:Core/Src/deca_device.c ****     return dwt_read32bitreg(RX_TIME_0_ID); // Read RX TIME as a 32-bit register to get the 4 lower 
 6656              		.loc 1 2510 1 is_stmt 1 view -0
 6657              		.cfi_startproc
 6658              		@ args = 0, pretend = 0, frame = 0
 6659              		@ frame_needed = 0, uses_anonymous_args = 0
 6660 0000 08B5     		push	{r3, lr}
 6661              		.cfi_def_cfa_offset 8
 6662              		.cfi_offset 3, -8
 6663              		.cfi_offset 14, -4
2511:Core/Src/deca_device.c **** }
 6664              		.loc 1 2511 5 view .LVU1823
2511:Core/Src/deca_device.c **** }
 6665              		.loc 1 2511 12 is_stmt 0 view .LVU1824
 6666 0002 0021     		movs	r1, #0
 6667 0004 6420     		movs	r0, #100
 6668 0006 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 6669              	.LVL579:
2512:Core/Src/deca_device.c **** 
 6670              		.loc 1 2512 1 view .LVU1825
 6671 000a 08BD     		pop	{r3, pc}
 6672              		.cfi_endproc
 6673              	.LFE67:
 6675              		.section	.text.dwt_readsystimestamphi32,"ax",%progbits
 6676              		.align	1
 6677              		.global	dwt_readsystimestamphi32
 6678              		.syntax unified
 6679              		.thumb
 6680              		.thumb_func
 6681              		.fpu fpv4-sp-d16
 6683              	dwt_readsystimestamphi32:
 6684              	.LFB68:
2524:Core/Src/deca_device.c ****     return dwt_read32bitreg(SYS_TIME_ID);
 6685              		.loc 1 2524 1 is_stmt 1 view -0
 6686              		.cfi_startproc
 6687              		@ args = 0, pretend = 0, frame = 0
 6688              		@ frame_needed = 0, uses_anonymous_args = 0
 6689 0000 08B5     		push	{r3, lr}
 6690              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cctZ3fzX.s 			page 230


 6691              		.cfi_offset 3, -8
 6692              		.cfi_offset 14, -4
2525:Core/Src/deca_device.c **** }
 6693              		.loc 1 2525 5 view .LVU1827
2525:Core/Src/deca_device.c **** }
 6694              		.loc 1 2525 12 is_stmt 0 view .LVU1828
 6695 0002 0021     		movs	r1, #0
 6696 0004 1C20     		movs	r0, #28
 6697 0006 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 6698              	.LVL580:
2526:Core/Src/deca_device.c **** 
 6699              		.loc 1 2526 1 view .LVU1829
 6700 000a 08BD     		pop	{r3, pc}
 6701              		.cfi_endproc
 6702              	.LFE68:
 6704              		.section	.text.dwt_readsystime,"ax",%progbits
 6705              		.align	1
 6706              		.global	dwt_readsystime
 6707              		.syntax unified
 6708              		.thumb
 6709              		.thumb_func
 6710              		.fpu fpv4-sp-d16
 6712              	dwt_readsystime:
 6713              	.LVL581:
 6714              	.LFB69:
2540:Core/Src/deca_device.c ****     dwt_readfromdevice(SYS_TIME_ID, 0, SYS_TIME_LEN, timestamp);
 6715              		.loc 1 2540 1 is_stmt 1 view -0
 6716              		.cfi_startproc
 6717              		@ args = 0, pretend = 0, frame = 0
 6718              		@ frame_needed = 0, uses_anonymous_args = 0
2540:Core/Src/deca_device.c ****     dwt_readfromdevice(SYS_TIME_ID, 0, SYS_TIME_LEN, timestamp);
 6719              		.loc 1 2540 1 is_stmt 0 view .LVU1831
 6720 0000 08B5     		push	{r3, lr}
 6721              		.cfi_def_cfa_offset 8
 6722              		.cfi_offset 3, -8
 6723              		.cfi_offset 14, -4
 6724 0002 0346     		mov	r3, r0
2541:Core/Src/deca_device.c **** }
 6725              		.loc 1 2541 5 is_stmt 1 view .LVU1832
 6726 0004 0422     		movs	r2, #4
 6727 0006 0021     		movs	r1, #0
 6728 0008 1C20     		movs	r0, #28
 6729              	.LVL582:
2541:Core/Src/deca_device.c **** }
 6730              		.loc 1 2541 5 is_stmt 0 view .LVU1833
 6731 000a FFF7FEFF 		bl	dwt_readfromdevice
 6732              	.LVL583:
2542:Core/Src/deca_device.c **** 
 6733              		.loc 1 2542 1 view .LVU1834
 6734 000e 08BD     		pop	{r3, pc}
 6735              		.cfi_endproc
 6736              	.LFE69:
 6738              		.section	.text.dwt_configureframefilter,"ax",%progbits
 6739              		.align	1
 6740              		.global	dwt_configureframefilter
 6741              		.syntax unified
 6742              		.thumb
ARM GAS  /tmp/cctZ3fzX.s 			page 231


 6743              		.thumb_func
 6744              		.fpu fpv4-sp-d16
 6746              	dwt_configureframefilter:
 6747              	.LVL584:
 6748              	.LFB70:
2574:Core/Src/deca_device.c ****     if(enabletype == DWT_FF_ENABLE_802_15_4)
 6749              		.loc 1 2574 1 is_stmt 1 view -0
 6750              		.cfi_startproc
 6751              		@ args = 0, pretend = 0, frame = 0
 6752              		@ frame_needed = 0, uses_anonymous_args = 0
2574:Core/Src/deca_device.c ****     if(enabletype == DWT_FF_ENABLE_802_15_4)
 6753              		.loc 1 2574 1 is_stmt 0 view .LVU1836
 6754 0000 10B5     		push	{r4, lr}
 6755              		.cfi_def_cfa_offset 8
 6756              		.cfi_offset 4, -8
 6757              		.cfi_offset 14, -4
2575:Core/Src/deca_device.c ****     {
 6758              		.loc 1 2575 5 is_stmt 1 view .LVU1837
2575:Core/Src/deca_device.c ****     {
 6759              		.loc 1 2575 7 is_stmt 0 view .LVU1838
 6760 0002 0228     		cmp	r0, #2
 6761 0004 0BD0     		beq	.L474
2583:Core/Src/deca_device.c ****         // Clear the configuration
 6762              		.loc 1 2583 9 is_stmt 1 view .LVU1839
 6763 0006 0023     		movs	r3, #0
 6764 0008 FE22     		movs	r2, #254
 6765 000a 1946     		mov	r1, r3
 6766              	.LVL585:
2583:Core/Src/deca_device.c ****         // Clear the configuration
 6767              		.loc 1 2583 9 is_stmt 0 view .LVU1840
 6768 000c 1020     		movs	r0, #16
 6769              	.LVL586:
2583:Core/Src/deca_device.c ****         // Clear the configuration
 6770              		.loc 1 2583 9 view .LVU1841
 6771 000e FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 6772              	.LVL587:
2585:Core/Src/deca_device.c ****     }
 6773              		.loc 1 2585 9 is_stmt 1 view .LVU1842
 6774 0012 0022     		movs	r2, #0
 6775 0014 1146     		mov	r1, r2
 6776 0016 1420     		movs	r0, #20
 6777 0018 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 6778              	.LVL588:
 6779              	.L470:
2587:Core/Src/deca_device.c **** 
 6780              		.loc 1 2587 1 is_stmt 0 view .LVU1843
 6781 001c 10BD     		pop	{r4, pc}
 6782              	.LVL589:
 6783              	.L474:
2587:Core/Src/deca_device.c **** 
 6784              		.loc 1 2587 1 view .LVU1844
 6785 001e 0C46     		mov	r4, r1
2577:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(ADR_FILT_CFG_ID, 0, filtermode);
 6786              		.loc 1 2577 9 is_stmt 1 view .LVU1845
 6787 0020 0123     		movs	r3, #1
 6788 0022 FF22     		movs	r2, #255
 6789 0024 0021     		movs	r1, #0
ARM GAS  /tmp/cctZ3fzX.s 			page 232


 6790              	.LVL590:
2577:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(ADR_FILT_CFG_ID, 0, filtermode);
 6791              		.loc 1 2577 9 is_stmt 0 view .LVU1846
 6792 0026 1020     		movs	r0, #16
 6793              	.LVL591:
2577:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(ADR_FILT_CFG_ID, 0, filtermode);
 6794              		.loc 1 2577 9 view .LVU1847
 6795 0028 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 6796              	.LVL592:
2578:Core/Src/deca_device.c ****     }
 6797              		.loc 1 2578 9 is_stmt 1 view .LVU1848
 6798 002c 2246     		mov	r2, r4
 6799 002e 0021     		movs	r1, #0
 6800 0030 1420     		movs	r0, #20
 6801 0032 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 6802              	.LVL593:
 6803 0036 F1E7     		b	.L470
 6804              		.cfi_endproc
 6805              	.LFE70:
 6807              		.section	.text.dwt_setpanid,"ax",%progbits
 6808              		.align	1
 6809              		.global	dwt_setpanid
 6810              		.syntax unified
 6811              		.thumb
 6812              		.thumb_func
 6813              		.fpu fpv4-sp-d16
 6815              	dwt_setpanid:
 6816              	.LVL594:
 6817              	.LFB71:
2600:Core/Src/deca_device.c ****     // PAN ID is high 16 bits of register
 6818              		.loc 1 2600 1 view -0
 6819              		.cfi_startproc
 6820              		@ args = 0, pretend = 0, frame = 0
 6821              		@ frame_needed = 0, uses_anonymous_args = 0
2600:Core/Src/deca_device.c ****     // PAN ID is high 16 bits of register
 6822              		.loc 1 2600 1 is_stmt 0 view .LVU1850
 6823 0000 08B5     		push	{r3, lr}
 6824              		.cfi_def_cfa_offset 8
 6825              		.cfi_offset 3, -8
 6826              		.cfi_offset 14, -4
 6827 0002 0246     		mov	r2, r0
2602:Core/Src/deca_device.c **** }
 6828              		.loc 1 2602 5 is_stmt 1 view .LVU1851
 6829 0004 0221     		movs	r1, #2
 6830 0006 0C20     		movs	r0, #12
 6831              	.LVL595:
2602:Core/Src/deca_device.c **** }
 6832              		.loc 1 2602 5 is_stmt 0 view .LVU1852
 6833 0008 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 6834              	.LVL596:
2603:Core/Src/deca_device.c **** 
 6835              		.loc 1 2603 1 view .LVU1853
 6836 000c 08BD     		pop	{r3, pc}
 6837              		.cfi_endproc
 6838              	.LFE71:
 6840              		.section	.text.dwt_setaddress16,"ax",%progbits
 6841              		.align	1
ARM GAS  /tmp/cctZ3fzX.s 			page 233


 6842              		.global	dwt_setaddress16
 6843              		.syntax unified
 6844              		.thumb
 6845              		.thumb_func
 6846              		.fpu fpv4-sp-d16
 6848              	dwt_setaddress16:
 6849              	.LVL597:
 6850              	.LFB72:
2616:Core/Src/deca_device.c ****     // Short address into low 16 bits
 6851              		.loc 1 2616 1 is_stmt 1 view -0
 6852              		.cfi_startproc
 6853              		@ args = 0, pretend = 0, frame = 0
 6854              		@ frame_needed = 0, uses_anonymous_args = 0
2616:Core/Src/deca_device.c ****     // Short address into low 16 bits
 6855              		.loc 1 2616 1 is_stmt 0 view .LVU1855
 6856 0000 08B5     		push	{r3, lr}
 6857              		.cfi_def_cfa_offset 8
 6858              		.cfi_offset 3, -8
 6859              		.cfi_offset 14, -4
 6860 0002 0246     		mov	r2, r0
2618:Core/Src/deca_device.c **** }
 6861              		.loc 1 2618 5 is_stmt 1 view .LVU1856
 6862 0004 0021     		movs	r1, #0
 6863 0006 0C20     		movs	r0, #12
 6864              	.LVL598:
2618:Core/Src/deca_device.c **** }
 6865              		.loc 1 2618 5 is_stmt 0 view .LVU1857
 6866 0008 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 6867              	.LVL599:
2619:Core/Src/deca_device.c **** 
 6868              		.loc 1 2619 1 view .LVU1858
 6869 000c 08BD     		pop	{r3, pc}
 6870              		.cfi_endproc
 6871              	.LFE72:
 6873              		.section	.text.dwt_seteui,"ax",%progbits
 6874              		.align	1
 6875              		.global	dwt_seteui
 6876              		.syntax unified
 6877              		.thumb
 6878              		.thumb_func
 6879              		.fpu fpv4-sp-d16
 6881              	dwt_seteui:
 6882              	.LVL600:
 6883              	.LFB73:
2632:Core/Src/deca_device.c ****     dwt_writetodevice(EUI_64_LO_ID, 0, 0x8, eui64);
 6884              		.loc 1 2632 1 is_stmt 1 view -0
 6885              		.cfi_startproc
 6886              		@ args = 0, pretend = 0, frame = 0
 6887              		@ frame_needed = 0, uses_anonymous_args = 0
2632:Core/Src/deca_device.c ****     dwt_writetodevice(EUI_64_LO_ID, 0, 0x8, eui64);
 6888              		.loc 1 2632 1 is_stmt 0 view .LVU1860
 6889 0000 08B5     		push	{r3, lr}
 6890              		.cfi_def_cfa_offset 8
 6891              		.cfi_offset 3, -8
 6892              		.cfi_offset 14, -4
 6893 0002 0346     		mov	r3, r0
2633:Core/Src/deca_device.c **** }
ARM GAS  /tmp/cctZ3fzX.s 			page 234


 6894              		.loc 1 2633 5 is_stmt 1 view .LVU1861
 6895 0004 0822     		movs	r2, #8
 6896 0006 0021     		movs	r1, #0
 6897 0008 0420     		movs	r0, #4
 6898              	.LVL601:
2633:Core/Src/deca_device.c **** }
 6899              		.loc 1 2633 5 is_stmt 0 view .LVU1862
 6900 000a FFF7FEFF 		bl	dwt_writetodevice
 6901              	.LVL602:
2634:Core/Src/deca_device.c **** 
 6902              		.loc 1 2634 1 view .LVU1863
 6903 000e 08BD     		pop	{r3, pc}
 6904              		.cfi_endproc
 6905              	.LFE73:
 6907              		.section	.text.dwt_geteui,"ax",%progbits
 6908              		.align	1
 6909              		.global	dwt_geteui
 6910              		.syntax unified
 6911              		.thumb
 6912              		.thumb_func
 6913              		.fpu fpv4-sp-d16
 6915              	dwt_geteui:
 6916              	.LVL603:
 6917              	.LFB74:
2647:Core/Src/deca_device.c ****     dwt_readfromdevice(EUI_64_LO_ID, 0, 0x8, eui64);
 6918              		.loc 1 2647 1 is_stmt 1 view -0
 6919              		.cfi_startproc
 6920              		@ args = 0, pretend = 0, frame = 0
 6921              		@ frame_needed = 0, uses_anonymous_args = 0
2647:Core/Src/deca_device.c ****     dwt_readfromdevice(EUI_64_LO_ID, 0, 0x8, eui64);
 6922              		.loc 1 2647 1 is_stmt 0 view .LVU1865
 6923 0000 08B5     		push	{r3, lr}
 6924              		.cfi_def_cfa_offset 8
 6925              		.cfi_offset 3, -8
 6926              		.cfi_offset 14, -4
 6927 0002 0346     		mov	r3, r0
2648:Core/Src/deca_device.c **** }
 6928              		.loc 1 2648 5 is_stmt 1 view .LVU1866
 6929 0004 0822     		movs	r2, #8
 6930 0006 0021     		movs	r1, #0
 6931 0008 0420     		movs	r0, #4
 6932              	.LVL604:
2648:Core/Src/deca_device.c **** }
 6933              		.loc 1 2648 5 is_stmt 0 view .LVU1867
 6934 000a FFF7FEFF 		bl	dwt_readfromdevice
 6935              	.LVL605:
2649:Core/Src/deca_device.c **** 
 6936              		.loc 1 2649 1 view .LVU1868
 6937 000e 08BD     		pop	{r3, pc}
 6938              		.cfi_endproc
 6939              	.LFE74:
 6941              		.section	.text.dwt_aon_read,"ax",%progbits
 6942              		.align	1
 6943              		.global	dwt_aon_read
 6944              		.syntax unified
 6945              		.thumb
 6946              		.thumb_func
ARM GAS  /tmp/cctZ3fzX.s 			page 235


 6947              		.fpu fpv4-sp-d16
 6949              	dwt_aon_read:
 6950              	.LVL606:
 6951              	.LFB75:
2662:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_ADDR_ID, 0x0, aon_address);// Set short AON address for read
 6952              		.loc 1 2662 1 is_stmt 1 view -0
 6953              		.cfi_startproc
 6954              		@ args = 0, pretend = 0, frame = 0
 6955              		@ frame_needed = 0, uses_anonymous_args = 0
2662:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_ADDR_ID, 0x0, aon_address);// Set short AON address for read
 6956              		.loc 1 2662 1 is_stmt 0 view .LVU1870
 6957 0000 10B5     		push	{r4, lr}
 6958              		.cfi_def_cfa_offset 8
 6959              		.cfi_offset 4, -8
 6960              		.cfi_offset 14, -4
 6961 0002 0246     		mov	r2, r0
2663:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0x0, (AON_CTRL_DCA_ENAB_BIT_MASK | AON_CTRL_DCA_READ_EN_BIT
 6962              		.loc 1 2663 5 is_stmt 1 view .LVU1871
 6963 0004 0021     		movs	r1, #0
 6964 0006 0948     		ldr	r0, .L485
 6965              	.LVL607:
2663:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0x0, (AON_CTRL_DCA_ENAB_BIT_MASK | AON_CTRL_DCA_READ_EN_BIT
 6966              		.loc 1 2663 5 is_stmt 0 view .LVU1872
 6967 0008 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 6968              	.LVL608:
2664:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0x0, 0x0);// Clear all enabled bits
 6969              		.loc 1 2664 5 is_stmt 1 view .LVU1873
 6970 000c 084C     		ldr	r4, .L485+4
 6971 000e 8822     		movs	r2, #136
 6972 0010 0021     		movs	r1, #0
 6973 0012 2046     		mov	r0, r4
 6974 0014 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 6975              	.LVL609:
2665:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(AON_RDATA_ID, 0x0);//Return the data that was read
 6976              		.loc 1 2665 5 view .LVU1874
 6977 0018 0022     		movs	r2, #0
 6978 001a 1146     		mov	r1, r2
 6979 001c 2046     		mov	r0, r4
 6980 001e FFF7FEFF 		bl	dwt_write8bitoffsetreg
 6981              	.LVL610:
2666:Core/Src/deca_device.c **** }
 6982              		.loc 1 2666 5 view .LVU1875
2666:Core/Src/deca_device.c **** }
 6983              		.loc 1 2666 12 is_stmt 0 view .LVU1876
 6984 0022 0021     		movs	r1, #0
 6985 0024 0348     		ldr	r0, .L485+8
 6986 0026 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 6987              	.LVL611:
2667:Core/Src/deca_device.c **** 
 6988              		.loc 1 2667 1 view .LVU1877
 6989 002a 10BD     		pop	{r4, pc}
 6990              	.L486:
 6991              		.align	2
 6992              	.L485:
 6993 002c 0C000A00 		.word	655372
 6994 0030 04000A00 		.word	655364
 6995 0034 08000A00 		.word	655368
ARM GAS  /tmp/cctZ3fzX.s 			page 236


 6996              		.cfi_endproc
 6997              	.LFE75:
 6999              		.section	.text.dwt_aon_write,"ax",%progbits
 7000              		.align	1
 7001              		.global	dwt_aon_write
 7002              		.syntax unified
 7003              		.thumb
 7004              		.thumb_func
 7005              		.fpu fpv4-sp-d16
 7007              	dwt_aon_write:
 7008              	.LVL612:
 7009              	.LFB76:
2681:Core/Src/deca_device.c ****     uint8_t temp = 0;
 7010              		.loc 1 2681 1 is_stmt 1 view -0
 7011              		.cfi_startproc
 7012              		@ args = 0, pretend = 0, frame = 0
 7013              		@ frame_needed = 0, uses_anonymous_args = 0
2681:Core/Src/deca_device.c ****     uint8_t temp = 0;
 7014              		.loc 1 2681 1 is_stmt 0 view .LVU1879
 7015 0000 38B5     		push	{r3, r4, r5, lr}
 7016              		.cfi_def_cfa_offset 16
 7017              		.cfi_offset 3, -16
 7018              		.cfi_offset 4, -12
 7019              		.cfi_offset 5, -8
 7020              		.cfi_offset 14, -4
 7021 0002 0246     		mov	r2, r0
 7022 0004 0C46     		mov	r4, r1
2682:Core/Src/deca_device.c ****     if (aon_address >= 0x100) temp = AON_CTRL_DCA_WRITE_HI_EN_BIT_MASK;
 7023              		.loc 1 2682 5 is_stmt 1 view .LVU1880
 7024              	.LVL613:
2683:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_ADDR_ID, 0x0, aon_address); // Set AON address for write
 7025              		.loc 1 2683 5 view .LVU1881
2683:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_ADDR_ID, 0x0, aon_address); // Set AON address for write
 7026              		.loc 1 2683 8 is_stmt 0 view .LVU1882
 7027 0006 FF28     		cmp	r0, #255
 7028 0008 16D8     		bhi	.L489
2682:Core/Src/deca_device.c ****     if (aon_address >= 0x100) temp = AON_CTRL_DCA_WRITE_HI_EN_BIT_MASK;
 7029              		.loc 1 2682 13 view .LVU1883
 7030 000a 0025     		movs	r5, #0
 7031              	.L488:
 7032              	.LVL614:
2684:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_WDATA_ID, 0x0, aon_write_data); // Set write data
 7033              		.loc 1 2684 5 is_stmt 1 view .LVU1884
 7034 000c 0021     		movs	r1, #0
 7035              	.LVL615:
2684:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_WDATA_ID, 0x0, aon_write_data); // Set write data
 7036              		.loc 1 2684 5 is_stmt 0 view .LVU1885
 7037 000e 0B48     		ldr	r0, .L491
 7038              	.LVL616:
2684:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_WDATA_ID, 0x0, aon_write_data); // Set write data
 7039              		.loc 1 2684 5 view .LVU1886
 7040 0010 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7041              	.LVL617:
2685:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID,0x0,(temp | AON_CTRL_DCA_ENAB_BIT_MASK | AON_CTRL_DCA_WRITE_
 7042              		.loc 1 2685 5 is_stmt 1 view .LVU1887
 7043 0014 2246     		mov	r2, r4
 7044 0016 0021     		movs	r1, #0
ARM GAS  /tmp/cctZ3fzX.s 			page 237


 7045 0018 0948     		ldr	r0, .L491+4
 7046 001a FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7047              	.LVL618:
2686:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0x0, 0x0); // Clear all enabled bits
 7048              		.loc 1 2686 5 view .LVU1888
 7049 001e 094C     		ldr	r4, .L491+8
 7050 0020 45F09002 		orr	r2, r5, #144
 7051 0024 0021     		movs	r1, #0
 7052 0026 2046     		mov	r0, r4
 7053 0028 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7054              	.LVL619:
2687:Core/Src/deca_device.c **** }
 7055              		.loc 1 2687 5 view .LVU1889
 7056 002c 0022     		movs	r2, #0
 7057 002e 1146     		mov	r1, r2
 7058 0030 2046     		mov	r0, r4
 7059 0032 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7060              	.LVL620:
2688:Core/Src/deca_device.c **** 
 7061              		.loc 1 2688 1 is_stmt 0 view .LVU1890
 7062 0036 38BD     		pop	{r3, r4, r5, pc}
 7063              	.LVL621:
 7064              	.L489:
2683:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_ADDR_ID, 0x0, aon_address); // Set AON address for write
 7065              		.loc 1 2683 36 view .LVU1891
 7066 0038 2025     		movs	r5, #32
 7067 003a E7E7     		b	.L488
 7068              	.L492:
 7069              		.align	2
 7070              	.L491:
 7071 003c 0C000A00 		.word	655372
 7072 0040 10000A00 		.word	655376
 7073 0044 04000A00 		.word	655364
 7074              		.cfi_endproc
 7075              	.LFE76:
 7077              		.section	.text.dwt_otpread,"ax",%progbits
 7078              		.align	1
 7079              		.global	dwt_otpread
 7080              		.syntax unified
 7081              		.thumb
 7082              		.thumb_func
 7083              		.fpu fpv4-sp-d16
 7085              	dwt_otpread:
 7086              	.LVL622:
 7087              	.LFB77:
2703:Core/Src/deca_device.c ****     int i;
 7088              		.loc 1 2703 1 is_stmt 1 view -0
 7089              		.cfi_startproc
 7090              		@ args = 0, pretend = 0, frame = 0
 7091              		@ frame_needed = 0, uses_anonymous_args = 0
2703:Core/Src/deca_device.c ****     int i;
 7092              		.loc 1 2703 1 is_stmt 0 view .LVU1893
 7093 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7094              		.cfi_def_cfa_offset 24
 7095              		.cfi_offset 3, -24
 7096              		.cfi_offset 4, -20
 7097              		.cfi_offset 5, -16
ARM GAS  /tmp/cctZ3fzX.s 			page 238


 7098              		.cfi_offset 6, -12
 7099              		.cfi_offset 7, -8
 7100              		.cfi_offset 14, -4
 7101 0002 0746     		mov	r7, r0
 7102 0004 0E46     		mov	r6, r1
 7103 0006 1546     		mov	r5, r2
2704:Core/Src/deca_device.c **** 
 7104              		.loc 1 2704 5 is_stmt 1 view .LVU1894
2706:Core/Src/deca_device.c ****     {
 7105              		.loc 1 2706 5 view .LVU1895
 7106              	.LVL623:
2706:Core/Src/deca_device.c ****     {
 7107              		.loc 1 2706 10 is_stmt 0 view .LVU1896
 7108 0008 0024     		movs	r4, #0
2706:Core/Src/deca_device.c ****     {
 7109              		.loc 1 2706 5 view .LVU1897
 7110 000a 06E0     		b	.L494
 7111              	.LVL624:
 7112              	.L495:
2708:Core/Src/deca_device.c ****     }
 7113              		.loc 1 2708 9 is_stmt 1 discriminator 3 view .LVU1898
2708:Core/Src/deca_device.c ****     }
 7114              		.loc 1 2708 20 is_stmt 0 discriminator 3 view .LVU1899
 7115 000c 3819     		adds	r0, r7, r4
 7116 000e 80B2     		uxth	r0, r0
 7117 0010 FFF7FEFF 		bl	_dwt_otpread
 7118              	.LVL625:
2708:Core/Src/deca_device.c ****     }
 7119              		.loc 1 2708 18 discriminator 3 view .LVU1900
 7120 0014 46F82400 		str	r0, [r6, r4, lsl #2]
2706:Core/Src/deca_device.c ****     {
 7121              		.loc 1 2706 24 is_stmt 1 discriminator 3 view .LVU1901
2706:Core/Src/deca_device.c ****     {
 7122              		.loc 1 2706 25 is_stmt 0 discriminator 3 view .LVU1902
 7123 0018 0134     		adds	r4, r4, #1
 7124              	.LVL626:
 7125              	.L494:
2706:Core/Src/deca_device.c ****     {
 7126              		.loc 1 2706 14 is_stmt 1 discriminator 1 view .LVU1903
2706:Core/Src/deca_device.c ****     {
 7127              		.loc 1 2706 5 is_stmt 0 discriminator 1 view .LVU1904
 7128 001a A542     		cmp	r5, r4
 7129 001c F6DC     		bgt	.L495
2712:Core/Src/deca_device.c **** 
 7130              		.loc 1 2712 1 view .LVU1905
 7131 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
2712:Core/Src/deca_device.c **** 
 7132              		.loc 1 2712 1 view .LVU1906
 7133              		.cfi_endproc
 7134              	.LFE77:
 7136              		.section	.text.__dwt_otp_write_wdata_id_reg,"ax",%progbits
 7137              		.align	1
 7138              		.global	__dwt_otp_write_wdata_id_reg
 7139              		.syntax unified
 7140              		.thumb
 7141              		.thumb_func
 7142              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctZ3fzX.s 			page 239


 7144              	__dwt_otp_write_wdata_id_reg:
 7145              	.LVL627:
 7146              	.LFB79:
2747:Core/Src/deca_device.c ****     /* Pull the CS high to enable user interface for programming */
 7147              		.loc 1 2747 1 is_stmt 1 view -0
 7148              		.cfi_startproc
 7149              		@ args = 0, pretend = 0, frame = 0
 7150              		@ frame_needed = 0, uses_anonymous_args = 0
2747:Core/Src/deca_device.c ****     /* Pull the CS high to enable user interface for programming */
 7151              		.loc 1 2747 1 is_stmt 0 view .LVU1908
 7152 0000 10B5     		push	{r4, lr}
 7153              		.cfi_def_cfa_offset 8
 7154              		.cfi_offset 4, -8
 7155              		.cfi_offset 14, -4
 7156 0002 0446     		mov	r4, r0
2750:Core/Src/deca_device.c **** 	/* Send the relevant command to the OTP block */
 7157              		.loc 1 2750 2 is_stmt 1 view .LVU1909
 7158 0004 40F40072 		orr	r2, r0, #512
 7159 0008 92B2     		uxth	r2, r2
 7160 000a 0021     		movs	r1, #0
 7161 000c 4FF43020 		mov	r0, #720896
 7162              	.LVL628:
2750:Core/Src/deca_device.c **** 	/* Send the relevant command to the OTP block */
 7163              		.loc 1 2750 2 is_stmt 0 view .LVU1910
 7164 0010 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7165              	.LVL629:
2752:Core/Src/deca_device.c **** }
 7166              		.loc 1 2752 5 is_stmt 1 view .LVU1911
 7167 0014 A2B2     		uxth	r2, r4
 7168 0016 0021     		movs	r1, #0
 7169 0018 4FF43020 		mov	r0, #720896
 7170 001c FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7171              	.LVL630:
2753:Core/Src/deca_device.c **** 
 7172              		.loc 1 2753 1 is_stmt 0 view .LVU1912
 7173 0020 10BD     		pop	{r4, pc}
 7174              		.cfi_endproc
 7175              	.LFE79:
 7177              		.section	.text._dwt_otpprogword32,"ax",%progbits
 7178              		.align	1
 7179              		.syntax unified
 7180              		.thumb
 7181              		.thumb_func
 7182              		.fpu fpv4-sp-d16
 7184              	_dwt_otpprogword32:
 7185              	.LVL631:
 7186              	.LFB80:
2768:Core/Src/deca_device.c ****     //uint32_t rd_buf;
 7187              		.loc 1 2768 1 is_stmt 1 view -0
 7188              		.cfi_startproc
 7189              		@ args = 0, pretend = 0, frame = 8
 7190              		@ frame_needed = 0, uses_anonymous_args = 0
2768:Core/Src/deca_device.c ****     //uint32_t rd_buf;
 7191              		.loc 1 2768 1 is_stmt 0 view .LVU1914
 7192 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 7193              		.cfi_def_cfa_offset 32
 7194              		.cfi_offset 4, -32
ARM GAS  /tmp/cctZ3fzX.s 			page 240


 7195              		.cfi_offset 5, -28
 7196              		.cfi_offset 6, -24
 7197              		.cfi_offset 7, -20
 7198              		.cfi_offset 8, -16
 7199              		.cfi_offset 9, -12
 7200              		.cfi_offset 10, -8
 7201              		.cfi_offset 14, -4
 7202 0004 82B0     		sub	sp, sp, #8
 7203              		.cfi_def_cfa_offset 40
 7204 0006 0446     		mov	r4, r0
 7205 0008 0D46     		mov	r5, r1
2770:Core/Src/deca_device.c ****     //uint8_t otp_done;
 7206              		.loc 1 2770 5 is_stmt 1 view .LVU1915
2774:Core/Src/deca_device.c ****     // Set VDDHV_TX LDO to max
 7207              		.loc 1 2774 5 view .LVU1916
2774:Core/Src/deca_device.c ****     // Set VDDHV_TX LDO to max
 7208              		.loc 1 2774 25 is_stmt 0 view .LVU1917
 7209 000a DFF83C81 		ldr	r8, .L501
 7210 000e 0021     		movs	r1, #0
 7211              	.LVL632:
2774:Core/Src/deca_device.c ****     // Set VDDHV_TX LDO to max
 7212              		.loc 1 2774 25 view .LVU1918
 7213 0010 4046     		mov	r0, r8
 7214              	.LVL633:
2774:Core/Src/deca_device.c ****     // Set VDDHV_TX LDO to max
 7215              		.loc 1 2774 25 view .LVU1919
 7216 0012 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 7217              	.LVL634:
 7218 0016 8146     		mov	r9, r0
 7219              	.LVL635:
2776:Core/Src/deca_device.c ****     
 7220              		.loc 1 2776 5 is_stmt 1 view .LVU1920
 7221 0018 4FF47043 		mov	r3, #61440
 7222 001c 4FF0FF32 		mov	r2, #-1
 7223 0020 0021     		movs	r1, #0
 7224 0022 4046     		mov	r0, r8
 7225              	.LVL636:
2776:Core/Src/deca_device.c ****     
 7226              		.loc 1 2776 5 is_stmt 0 view .LVU1921
 7227 0024 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 7228              	.LVL637:
2779:Core/Src/deca_device.c **** 
 7229              		.loc 1 2779 5 is_stmt 1 view .LVU1922
 7230 0028 DFF820A1 		ldr	r10, .L501+4
 7231 002c 1822     		movs	r2, #24
 7232 002e 0021     		movs	r1, #0
 7233 0030 5046     		mov	r0, r10
 7234 0032 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7235              	.LVL638:
2782:Core/Src/deca_device.c **** 
 7236              		.loc 1 2782 5 view .LVU1923
 7237 0036 2520     		movs	r0, #37
 7238 0038 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7239              	.LVL639:
2785:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x01fc);
 7240              		.loc 1 2785 5 view .LVU1924
 7241 003c 0220     		movs	r0, #2
ARM GAS  /tmp/cctZ3fzX.s 			page 241


 7242 003e FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7243              	.LVL640:
2786:Core/Src/deca_device.c **** 
 7244              		.loc 1 2786 5 view .LVU1925
 7245 0042 4FF4FE70 		mov	r0, #508
 7246 0046 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7247              	.LVL641:
2789:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[0]);
 7248              		.loc 1 2789 5 view .LVU1926
2789:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[0]);
 7249              		.loc 1 2789 35 is_stmt 0 view .LVU1927
 7250 004a E8B2     		uxtb	r0, r5
2789:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[0]);
 7251              		.loc 1 2789 24 view .LVU1928
 7252 004c 40F48073 		orr	r3, r0, #256
2789:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[0]);
 7253              		.loc 1 2789 15 view .LVU1929
 7254 0050 ADF80030 		strh	r3, [sp]	@ movhi
2790:Core/Src/deca_device.c **** 
 7255              		.loc 1 2790 5 is_stmt 1 view .LVU1930
 7256 0054 1846     		mov	r0, r3
 7257 0056 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7258              	.LVL642:
2793:Core/Src/deca_device.c **** 
 7259              		.loc 1 2793 5 view .LVU1931
 7260 005a 4FF48070 		mov	r0, #256
 7261 005e FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7262              	.LVL643:
2796:Core/Src/deca_device.c **** 
 7263              		.loc 1 2796 5 view .LVU1932
 7264 0062 0020     		movs	r0, #0
 7265 0064 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7266              	.LVL644:
2800:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x01c0);
 7267              		.loc 1 2800 5 view .LVU1933
 7268 0068 0220     		movs	r0, #2
 7269 006a FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7270              	.LVL645:
2801:Core/Src/deca_device.c **** 
 7271              		.loc 1 2801 5 view .LVU1934
 7272 006e 4FF4E070 		mov	r0, #448
 7273 0072 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7274              	.LVL646:
2804:Core/Src/deca_device.c ****     wr_buf[1] = 0x100 | ((data >> 16) & 0xff);
 7275              		.loc 1 2804 5 view .LVU1935
2804:Core/Src/deca_device.c ****     wr_buf[1] = 0x100 | ((data >> 16) & 0xff);
 7276              		.loc 1 2804 32 is_stmt 0 view .LVU1936
 7277 0076 250E     		lsrs	r5, r4, #24
2804:Core/Src/deca_device.c ****     wr_buf[1] = 0x100 | ((data >> 16) & 0xff);
 7278              		.loc 1 2804 23 view .LVU1937
 7279 0078 45F48075 		orr	r5, r5, #256
2804:Core/Src/deca_device.c ****     wr_buf[1] = 0x100 | ((data >> 16) & 0xff);
 7280              		.loc 1 2804 15 view .LVU1938
 7281 007c ADF80050 		strh	r5, [sp]	@ movhi
2805:Core/Src/deca_device.c ****     wr_buf[2] = 0x100 | ((data >> 8) & 0xff);
 7282              		.loc 1 2805 5 is_stmt 1 view .LVU1939
2805:Core/Src/deca_device.c ****     wr_buf[2] = 0x100 | ((data >> 8) & 0xff);
ARM GAS  /tmp/cctZ3fzX.s 			page 242


 7283              		.loc 1 2805 39 is_stmt 0 view .LVU1940
 7284 0080 C4F30746 		ubfx	r6, r4, #16, #8
2805:Core/Src/deca_device.c ****     wr_buf[2] = 0x100 | ((data >> 8) & 0xff);
 7285              		.loc 1 2805 23 view .LVU1941
 7286 0084 46F48076 		orr	r6, r6, #256
2805:Core/Src/deca_device.c ****     wr_buf[2] = 0x100 | ((data >> 8) & 0xff);
 7287              		.loc 1 2805 15 view .LVU1942
 7288 0088 ADF80260 		strh	r6, [sp, #2]	@ movhi
2806:Core/Src/deca_device.c ****     wr_buf[3] = 0x100 | (data & 0xff);
 7289              		.loc 1 2806 5 is_stmt 1 view .LVU1943
2806:Core/Src/deca_device.c ****     wr_buf[3] = 0x100 | (data & 0xff);
 7290              		.loc 1 2806 38 is_stmt 0 view .LVU1944
 7291 008c C4F30727 		ubfx	r7, r4, #8, #8
2806:Core/Src/deca_device.c ****     wr_buf[3] = 0x100 | (data & 0xff);
 7292              		.loc 1 2806 23 view .LVU1945
 7293 0090 47F48077 		orr	r7, r7, #256
2806:Core/Src/deca_device.c ****     wr_buf[3] = 0x100 | (data & 0xff);
 7294              		.loc 1 2806 15 view .LVU1946
 7295 0094 ADF80470 		strh	r7, [sp, #4]	@ movhi
2807:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[3]);
 7296              		.loc 1 2807 5 is_stmt 1 view .LVU1947
2807:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[3]);
 7297              		.loc 1 2807 31 is_stmt 0 view .LVU1948
 7298 0098 E0B2     		uxtb	r0, r4
2807:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[3]);
 7299              		.loc 1 2807 23 view .LVU1949
 7300 009a 40F48070 		orr	r0, r0, #256
2807:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[3]);
 7301              		.loc 1 2807 15 view .LVU1950
 7302 009e ADF80600 		strh	r0, [sp, #6]	@ movhi
2808:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[2]);
 7303              		.loc 1 2808 5 is_stmt 1 view .LVU1951
 7304 00a2 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7305              	.LVL647:
2809:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[1]);
 7306              		.loc 1 2809 5 view .LVU1952
 7307 00a6 3846     		mov	r0, r7
 7308 00a8 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7309              	.LVL648:
2810:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(wr_buf[0]);
 7310              		.loc 1 2810 5 view .LVU1953
 7311 00ac 3046     		mov	r0, r6
 7312 00ae FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7313              	.LVL649:
2811:Core/Src/deca_device.c **** 
 7314              		.loc 1 2811 5 view .LVU1954
 7315 00b2 2846     		mov	r0, r5
 7316 00b4 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7317              	.LVL650:
2814:Core/Src/deca_device.c **** 
 7318              		.loc 1 2814 5 view .LVU1955
 7319 00b8 0020     		movs	r0, #0
 7320 00ba FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7321              	.LVL651:
2817:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x01ff);
 7322              		.loc 1 2817 5 view .LVU1956
 7323 00be 3A20     		movs	r0, #58
ARM GAS  /tmp/cctZ3fzX.s 			page 243


 7324 00c0 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7325              	.LVL652:
2818:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x010a);
 7326              		.loc 1 2818 5 view .LVU1957
 7327 00c4 40F2FF10 		movw	r0, #511
 7328 00c8 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7329              	.LVL653:
2819:Core/Src/deca_device.c ****     // Clean up
 7330              		.loc 1 2819 5 view .LVU1958
 7331 00cc 4FF48570 		mov	r0, #266
 7332 00d0 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7333              	.LVL654:
2821:Core/Src/deca_device.c **** 
 7334              		.loc 1 2821 5 view .LVU1959
 7335 00d4 0020     		movs	r0, #0
 7336 00d6 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7337              	.LVL655:
2831:Core/Src/deca_device.c **** 	__dwt_otp_write_wdata_id_reg(0x0101);
 7338              		.loc 1 2831 5 view .LVU1960
 7339 00da 3A20     		movs	r0, #58
 7340 00dc FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7341              	.LVL656:
2832:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0002);   // Different to previous one
 7342              		.loc 1 2832 2 view .LVU1961
 7343 00e0 40F20110 		movw	r0, #257
 7344 00e4 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7345              	.LVL657:
2833:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0000);
 7346              		.loc 1 2833 5 view .LVU1962
 7347 00e8 0222     		movs	r2, #2
 7348 00ea 0021     		movs	r1, #0
 7349 00ec 4FF43020 		mov	r0, #720896
 7350 00f0 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7351              	.LVL658:
2834:Core/Src/deca_device.c **** 
 7352              		.loc 1 2834 5 view .LVU1963
 7353 00f4 0022     		movs	r2, #0
 7354 00f6 1146     		mov	r1, r2
 7355 00f8 4FF43020 		mov	r0, #720896
 7356 00fc FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7357              	.LVL659:
2857:Core/Src/deca_device.c **** 
 7358              		.loc 1 2857 5 view .LVU1964
 7359 0100 0220     		movs	r0, #2
 7360 0102 FFF7FEFF 		bl	deca_sleep
 7361              	.LVL660:
2860:Core/Src/deca_device.c ****     __dwt_otp_write_wdata_id_reg(0x0102);
 7362              		.loc 1 2860 5 view .LVU1965
 7363 0106 3A20     		movs	r0, #58
 7364 0108 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7365              	.LVL661:
2861:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0002);   // Different to previous one
 7366              		.loc 1 2861 5 view .LVU1966
 7367 010c 4FF48170 		mov	r0, #258
 7368 0110 FFF7FEFF 		bl	__dwt_otp_write_wdata_id_reg
 7369              	.LVL662:
2862:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(OTP_WDATA_ID, 0, 0x0000);
ARM GAS  /tmp/cctZ3fzX.s 			page 244


 7370              		.loc 1 2862 5 view .LVU1967
 7371 0114 0222     		movs	r2, #2
 7372 0116 0021     		movs	r1, #0
 7373 0118 4FF43020 		mov	r0, #720896
 7374 011c FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7375              	.LVL663:
2863:Core/Src/deca_device.c **** 
 7376              		.loc 1 2863 5 view .LVU1968
 7377 0120 0022     		movs	r2, #0
 7378 0122 1146     		mov	r1, r2
 7379 0124 4FF43020 		mov	r0, #720896
 7380 0128 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7381              	.LVL664:
2866:Core/Src/deca_device.c ****     
 7382              		.loc 1 2866 5 view .LVU1969
 7383 012c 0022     		movs	r2, #0
 7384 012e 1146     		mov	r1, r2
 7385 0130 5046     		mov	r0, r10
 7386 0132 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7387              	.LVL665:
2869:Core/Src/deca_device.c **** }
 7388              		.loc 1 2869 5 view .LVU1970
 7389 0136 4A46     		mov	r2, r9
 7390 0138 0021     		movs	r1, #0
 7391 013a 4046     		mov	r0, r8
 7392 013c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 7393              	.LVL666:
2870:Core/Src/deca_device.c **** 
 7394              		.loc 1 2870 1 is_stmt 0 view .LVU1971
 7395 0140 02B0     		add	sp, sp, #8
 7396              		.cfi_def_cfa_offset 32
 7397              		@ sp needed
 7398 0142 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7399              	.LVL667:
 7400              	.L502:
2870:Core/Src/deca_device.c **** 
 7401              		.loc 1 2870 1 view .LVU1972
 7402 0146 00BF     		.align	2
 7403              	.L501:
 7404 0148 44000700 		.word	458820
 7405 014c 08000B00 		.word	720904
 7406              		.cfi_endproc
 7407              	.LFE80:
 7409              		.section	.text.dwt_otpwriteandverify,"ax",%progbits
 7410              		.align	1
 7411              		.global	dwt_otpwriteandverify
 7412              		.syntax unified
 7413              		.thumb
 7414              		.thumb_func
 7415              		.fpu fpv4-sp-d16
 7417              	dwt_otpwriteandverify:
 7418              	.LVL668:
 7419              	.LFB81:
2884:Core/Src/deca_device.c ****     //program the word
 7420              		.loc 1 2884 1 is_stmt 1 view -0
 7421              		.cfi_startproc
 7422              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 245


 7423              		@ frame_needed = 0, uses_anonymous_args = 0
2884:Core/Src/deca_device.c ****     //program the word
 7424              		.loc 1 2884 1 is_stmt 0 view .LVU1974
 7425 0000 38B5     		push	{r3, r4, r5, lr}
 7426              		.cfi_def_cfa_offset 16
 7427              		.cfi_offset 3, -16
 7428              		.cfi_offset 4, -12
 7429              		.cfi_offset 5, -8
 7430              		.cfi_offset 14, -4
 7431 0002 0446     		mov	r4, r0
 7432 0004 0D46     		mov	r5, r1
2886:Core/Src/deca_device.c **** 
 7433              		.loc 1 2886 5 is_stmt 1 view .LVU1975
 7434 0006 FFF7FEFF 		bl	_dwt_otpprogword32
 7435              	.LVL669:
2889:Core/Src/deca_device.c ****     {
 7436              		.loc 1 2889 5 view .LVU1976
2889:Core/Src/deca_device.c ****     {
 7437              		.loc 1 2889 8 is_stmt 0 view .LVU1977
 7438 000a 2846     		mov	r0, r5
 7439 000c FFF7FEFF 		bl	_dwt_otpread
 7440              	.LVL670:
2889:Core/Src/deca_device.c ****     {
 7441              		.loc 1 2889 7 view .LVU1978
 7442 0010 A042     		cmp	r0, r4
 7443 0012 01D1     		bne	.L505
2891:Core/Src/deca_device.c ****     }
 7444              		.loc 1 2891 16 view .LVU1979
 7445 0014 0020     		movs	r0, #0
 7446              	.L503:
2897:Core/Src/deca_device.c **** 
 7447              		.loc 1 2897 1 view .LVU1980
 7448 0016 38BD     		pop	{r3, r4, r5, pc}
 7449              	.LVL671:
 7450              	.L505:
2895:Core/Src/deca_device.c ****     }
 7451              		.loc 1 2895 16 view .LVU1981
 7452 0018 4FF0FF30 		mov	r0, #-1
 7453 001c FBE7     		b	.L503
 7454              		.cfi_endproc
 7455              	.LFE81:
 7457              		.section	.text.dwt_entersleep,"ax",%progbits
 7458              		.align	1
 7459              		.global	dwt_entersleep
 7460              		.syntax unified
 7461              		.thumb
 7462              		.thumb_func
 7463              		.fpu fpv4-sp-d16
 7465              	dwt_entersleep:
 7466              	.LVL672:
 7467              	.LFB82:
2912:Core/Src/deca_device.c ****     //clear auto INIT2IDLE bit if required
 7468              		.loc 1 2912 1 is_stmt 1 view -0
 7469              		.cfi_startproc
 7470              		@ args = 0, pretend = 0, frame = 0
 7471              		@ frame_needed = 0, uses_anonymous_args = 0
2912:Core/Src/deca_device.c ****     //clear auto INIT2IDLE bit if required
ARM GAS  /tmp/cctZ3fzX.s 			page 246


 7472              		.loc 1 2912 1 is_stmt 0 view .LVU1983
 7473 0000 10B5     		push	{r4, lr}
 7474              		.cfi_def_cfa_offset 8
 7475              		.cfi_offset 4, -8
 7476              		.cfi_offset 14, -4
2914:Core/Src/deca_device.c ****     {
 7477              		.loc 1 2914 5 is_stmt 1 view .LVU1984
2914:Core/Src/deca_device.c ****     {
 7478              		.loc 1 2914 7 is_stmt 0 view .LVU1985
 7479 0002 0228     		cmp	r0, #2
 7480 0004 0BD0     		beq	.L510
 7481              	.LVL673:
 7482              	.L508:
2920:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0, AON_CTRL_ARRAY_SAVE_BIT_MASK);
 7483              		.loc 1 2920 5 is_stmt 1 view .LVU1986
 7484 0006 094C     		ldr	r4, .L511
 7485 0008 0022     		movs	r2, #0
 7486 000a 1146     		mov	r1, r2
 7487 000c 2046     		mov	r0, r4
 7488 000e FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7489              	.LVL674:
2921:Core/Src/deca_device.c **** }
 7490              		.loc 1 2921 5 view .LVU1987
 7491 0012 0222     		movs	r2, #2
 7492 0014 0021     		movs	r1, #0
 7493 0016 2046     		mov	r0, r4
 7494 0018 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7495              	.LVL675:
2922:Core/Src/deca_device.c **** 
 7496              		.loc 1 2922 1 is_stmt 0 view .LVU1988
 7497 001c 10BD     		pop	{r4, pc}
 7498              	.LVL676:
 7499              	.L510:
2916:Core/Src/deca_device.c ****     }
 7500              		.loc 1 2916 9 is_stmt 1 view .LVU1989
 7501 001e 0023     		movs	r3, #0
 7502 0020 FE22     		movs	r2, #254
 7503 0022 0121     		movs	r1, #1
 7504 0024 0248     		ldr	r0, .L511+4
 7505              	.LVL677:
2916:Core/Src/deca_device.c ****     }
 7506              		.loc 1 2916 9 is_stmt 0 view .LVU1990
 7507 0026 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 7508              	.LVL678:
 7509 002a ECE7     		b	.L508
 7510              	.L512:
 7511              		.align	2
 7512              	.L511:
 7513 002c 04000A00 		.word	655364
 7514 0030 08001100 		.word	1114120
 7515              		.cfi_endproc
 7516              	.LFE82:
 7518              		.section	.text.dwt_configuresleepcnt,"ax",%progbits
 7519              		.align	1
 7520              		.global	dwt_configuresleepcnt
 7521              		.syntax unified
 7522              		.thumb
ARM GAS  /tmp/cctZ3fzX.s 			page 247


 7523              		.thumb_func
 7524              		.fpu fpv4-sp-d16
 7526              	dwt_configuresleepcnt:
 7527              	.LVL679:
 7528              	.LFB83:
2937:Core/Src/deca_device.c **** 
 7529              		.loc 1 2937 1 is_stmt 1 view -0
 7530              		.cfi_startproc
 7531              		@ args = 0, pretend = 0, frame = 0
 7532              		@ frame_needed = 0, uses_anonymous_args = 0
2937:Core/Src/deca_device.c **** 
 7533              		.loc 1 2937 1 is_stmt 0 view .LVU1992
 7534 0000 10B5     		push	{r4, lr}
 7535              		.cfi_def_cfa_offset 8
 7536              		.cfi_offset 4, -8
 7537              		.cfi_offset 14, -4
 7538 0002 0446     		mov	r4, r0
2939:Core/Src/deca_device.c ****     dwt_aon_write(AON_SLPCNT_HI, (uint8_t)(sleepcnt>>8));
 7539              		.loc 1 2939 5 is_stmt 1 view .LVU1993
 7540 0004 C1B2     		uxtb	r1, r0
 7541 0006 4FF48170 		mov	r0, #258
 7542              	.LVL680:
2939:Core/Src/deca_device.c ****     dwt_aon_write(AON_SLPCNT_HI, (uint8_t)(sleepcnt>>8));
 7543              		.loc 1 2939 5 is_stmt 0 view .LVU1994
 7544 000a FFF7FEFF 		bl	dwt_aon_write
 7545              	.LVL681:
2940:Core/Src/deca_device.c **** 
 7546              		.loc 1 2940 5 is_stmt 1 view .LVU1995
 7547 000e 210A     		lsrs	r1, r4, #8
 7548 0010 40F20310 		movw	r0, #259
 7549 0014 FFF7FEFF 		bl	dwt_aon_write
 7550              	.LVL682:
2942:Core/Src/deca_device.c **** 
 7551              		.loc 1 2942 1 is_stmt 0 view .LVU1996
 7552 0018 10BD     		pop	{r4, pc}
 7553              		.cfi_endproc
 7554              	.LFE83:
 7556              		.section	.text.dwt_calibratesleepcnt,"ax",%progbits
 7557              		.align	1
 7558              		.global	dwt_calibratesleepcnt
 7559              		.syntax unified
 7560              		.thumb
 7561              		.thumb_func
 7562              		.fpu fpv4-sp-d16
 7564              	dwt_calibratesleepcnt:
 7565              	.LFB84:
2956:Core/Src/deca_device.c ****     uint16_t temp = 0;
 7566              		.loc 1 2956 1 is_stmt 1 view -0
 7567              		.cfi_startproc
 7568              		@ args = 0, pretend = 0, frame = 0
 7569              		@ frame_needed = 0, uses_anonymous_args = 0
 7570 0000 38B5     		push	{r3, r4, r5, lr}
 7571              		.cfi_def_cfa_offset 16
 7572              		.cfi_offset 3, -16
 7573              		.cfi_offset 4, -12
 7574              		.cfi_offset 5, -8
 7575              		.cfi_offset 14, -4
ARM GAS  /tmp/cctZ3fzX.s 			page 248


2957:Core/Src/deca_device.c **** 
 7576              		.loc 1 2957 5 view .LVU1998
 7577              	.LVL683:
2960:Core/Src/deca_device.c ****     // Clear any previous cal settings
 7578              		.loc 1 2960 5 view .LVU1999
 7579 0002 164D     		ldr	r5, .L517
 7580 0004 1023     		movs	r3, #16
 7581 0006 FF22     		movs	r2, #255
 7582 0008 0021     		movs	r1, #0
 7583 000a 2846     		mov	r0, r5
 7584 000c FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 7585              	.LVL684:
2962:Core/Src/deca_device.c ****     // Run cal
 7586              		.loc 1 2962 5 view .LVU2000
 7587 0010 0021     		movs	r1, #0
 7588 0012 4FF48270 		mov	r0, #260
 7589 0016 FFF7FEFF 		bl	dwt_aon_write
 7590              	.LVL685:
2964:Core/Src/deca_device.c ****     deca_sleep(2); //need to wait for at least 1 LP OSC period at slowest frequency of 15kHz =~ 66 
 7591              		.loc 1 2964 5 view .LVU2001
 7592 001a 0421     		movs	r1, #4
 7593 001c 4FF48270 		mov	r0, #260
 7594 0020 FFF7FEFF 		bl	dwt_aon_write
 7595              	.LVL686:
2965:Core/Src/deca_device.c ****     // Read the Cal value from AON
 7596              		.loc 1 2965 5 view .LVU2002
 7597 0024 0220     		movs	r0, #2
 7598 0026 FFF7FEFF 		bl	deca_sleep
 7599              	.LVL687:
2967:Core/Src/deca_device.c ****     temp = (temp) | (dwt_aon_read(AON_SLPCNT_CAL_HI) << 8);
 7600              		.loc 1 2967 5 view .LVU2003
2967:Core/Src/deca_device.c ****     temp = (temp) | (dwt_aon_read(AON_SLPCNT_CAL_HI) << 8);
 7601              		.loc 1 2967 12 is_stmt 0 view .LVU2004
 7602 002a 4FF48770 		mov	r0, #270
 7603 002e FFF7FEFF 		bl	dwt_aon_read
 7604              	.LVL688:
 7605 0032 0446     		mov	r4, r0
 7606              	.LVL689:
2968:Core/Src/deca_device.c ****     // Clear cal
 7607              		.loc 1 2968 5 is_stmt 1 view .LVU2005
2968:Core/Src/deca_device.c ****     // Clear cal
 7608              		.loc 1 2968 22 is_stmt 0 view .LVU2006
 7609 0034 40F20F10 		movw	r0, #271
 7610 0038 FFF7FEFF 		bl	dwt_aon_read
 7611              	.LVL690:
2968:Core/Src/deca_device.c ****     // Clear cal
 7612              		.loc 1 2968 19 view .LVU2007
 7613 003c 44EA0024 		orr	r4, r4, r0, lsl #8
 7614              	.LVL691:
2968:Core/Src/deca_device.c ****     // Clear cal
 7615              		.loc 1 2968 10 view .LVU2008
 7616 0040 A4B2     		uxth	r4, r4
 7617              	.LVL692:
2970:Core/Src/deca_device.c ****     // Disable VDDPLL for reference clock
 7618              		.loc 1 2970 5 is_stmt 1 view .LVU2009
 7619 0042 0021     		movs	r1, #0
 7620 0044 4FF48270 		mov	r0, #260
ARM GAS  /tmp/cctZ3fzX.s 			page 249


 7621 0048 FFF7FEFF 		bl	dwt_aon_write
 7622              	.LVL693:
2972:Core/Src/deca_device.c ****     return (temp);
 7623              		.loc 1 2972 5 view .LVU2010
 7624 004c 0023     		movs	r3, #0
 7625 004e EF22     		movs	r2, #239
 7626 0050 1946     		mov	r1, r3
 7627 0052 2846     		mov	r0, r5
 7628 0054 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 7629              	.LVL694:
2973:Core/Src/deca_device.c **** }
 7630              		.loc 1 2973 5 view .LVU2011
2974:Core/Src/deca_device.c **** 
 7631              		.loc 1 2974 1 is_stmt 0 view .LVU2012
 7632 0058 2046     		mov	r0, r4
 7633 005a 38BD     		pop	{r3, r4, r5, pc}
 7634              	.LVL695:
 7635              	.L518:
2974:Core/Src/deca_device.c **** 
 7636              		.loc 1 2974 1 view .LVU2013
 7637              		.align	2
 7638              	.L517:
 7639 005c 48000700 		.word	458824
 7640              		.cfi_endproc
 7641              	.LFE84:
 7643              		.section	.text.dwt_configuresleep,"ax",%progbits
 7644              		.align	1
 7645              		.global	dwt_configuresleep
 7646              		.syntax unified
 7647              		.thumb
 7648              		.thumb_func
 7649              		.fpu fpv4-sp-d16
 7651              	dwt_configuresleep:
 7652              	.LVL696:
 7653              	.LFB85:
3014:Core/Src/deca_device.c ****     // Add predefined sleep settings before writing the mode
 7654              		.loc 1 3014 1 is_stmt 1 view -0
 7655              		.cfi_startproc
 7656              		@ args = 0, pretend = 0, frame = 0
 7657              		@ frame_needed = 0, uses_anonymous_args = 0
3014:Core/Src/deca_device.c ****     // Add predefined sleep settings before writing the mode
 7658              		.loc 1 3014 1 is_stmt 0 view .LVU2015
 7659 0000 10B5     		push	{r4, lr}
 7660              		.cfi_def_cfa_offset 8
 7661              		.cfi_offset 4, -8
 7662              		.cfi_offset 14, -4
 7663 0002 0C46     		mov	r4, r1
3016:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_DIG_CFG_ID, 0,  pdw3000local->sleep_mode);
 7664              		.loc 1 3016 5 is_stmt 1 view .LVU2016
3016:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_DIG_CFG_ID, 0,  pdw3000local->sleep_mode);
 7665              		.loc 1 3016 30 is_stmt 0 view .LVU2017
 7666 0004 084B     		ldr	r3, .L521
 7667 0006 1B68     		ldr	r3, [r3]
 7668 0008 1A8A     		ldrh	r2, [r3, #16]
 7669 000a 1043     		orrs	r0, r0, r2
 7670              	.LVL697:
3016:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(AON_DIG_CFG_ID, 0,  pdw3000local->sleep_mode);
ARM GAS  /tmp/cctZ3fzX.s 			page 250


 7671              		.loc 1 3016 30 view .LVU2018
 7672 000c 82B2     		uxth	r2, r0
 7673 000e 1A82     		strh	r2, [r3, #16]	@ movhi
3017:Core/Src/deca_device.c **** 
 7674              		.loc 1 3017 5 is_stmt 1 view .LVU2019
 7675 0010 0021     		movs	r1, #0
 7676              	.LVL698:
3017:Core/Src/deca_device.c **** 
 7677              		.loc 1 3017 5 is_stmt 0 view .LVU2020
 7678 0012 4FF42020 		mov	r0, #655360
 7679 0016 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7680              	.LVL699:
3019:Core/Src/deca_device.c **** }
 7681              		.loc 1 3019 5 is_stmt 1 view .LVU2021
 7682 001a 2246     		mov	r2, r4
 7683 001c 0021     		movs	r1, #0
 7684 001e 0348     		ldr	r0, .L521+4
 7685 0020 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7686              	.LVL700:
3020:Core/Src/deca_device.c **** 
 7687              		.loc 1 3020 1 is_stmt 0 view .LVU2022
 7688 0024 10BD     		pop	{r4, pc}
 7689              	.L522:
 7690 0026 00BF     		.align	2
 7691              	.L521:
 7692 0028 00000000 		.word	.LANCHOR2
 7693 002c 14000A00 		.word	655380
 7694              		.cfi_endproc
 7695              	.LFE85:
 7697              		.section	.text.dwt_clearaonconfig,"ax",%progbits
 7698              		.align	1
 7699              		.global	dwt_clearaonconfig
 7700              		.syntax unified
 7701              		.thumb
 7702              		.thumb_func
 7703              		.fpu fpv4-sp-d16
 7705              	dwt_clearaonconfig:
 7706              	.LFB86:
3032:Core/Src/deca_device.c ****     // Clear any AON auto download bits (as reset will trigger AON download)
 7707              		.loc 1 3032 1 is_stmt 1 view -0
 7708              		.cfi_startproc
 7709              		@ args = 0, pretend = 0, frame = 0
 7710              		@ frame_needed = 0, uses_anonymous_args = 0
 7711 0000 10B5     		push	{r4, lr}
 7712              		.cfi_def_cfa_offset 8
 7713              		.cfi_offset 4, -8
 7714              		.cfi_offset 14, -4
3034:Core/Src/deca_device.c ****     // Clear the wake-up configuration
 7715              		.loc 1 3034 5 view .LVU2024
 7716 0002 0022     		movs	r2, #0
 7717 0004 1146     		mov	r1, r2
 7718 0006 4FF42020 		mov	r0, #655360
 7719 000a FFF7FEFF 		bl	dwt_write16bitoffsetreg
 7720              	.LVL701:
3036:Core/Src/deca_device.c ****     // Upload the new configuration
 7721              		.loc 1 3036 5 view .LVU2025
 7722 000e 0022     		movs	r2, #0
ARM GAS  /tmp/cctZ3fzX.s 			page 251


 7723 0010 1146     		mov	r1, r2
 7724 0012 0748     		ldr	r0, .L525
 7725 0014 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7726              	.LVL702:
3039:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AON_CTRL_ID, 0, AON_CTRL_ARRAY_SAVE_BIT_MASK);
 7727              		.loc 1 3039 5 view .LVU2026
 7728 0018 064C     		ldr	r4, .L525+4
 7729 001a 0022     		movs	r2, #0
 7730 001c 1146     		mov	r1, r2
 7731 001e 2046     		mov	r0, r4
 7732 0020 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7733              	.LVL703:
3040:Core/Src/deca_device.c **** }
 7734              		.loc 1 3040 5 view .LVU2027
 7735 0024 0222     		movs	r2, #2
 7736 0026 0021     		movs	r1, #0
 7737 0028 2046     		mov	r0, r4
 7738 002a FFF7FEFF 		bl	dwt_write8bitoffsetreg
 7739              	.LVL704:
3041:Core/Src/deca_device.c **** 
 7740              		.loc 1 3041 1 is_stmt 0 view .LVU2028
 7741 002e 10BD     		pop	{r4, pc}
 7742              	.L526:
 7743              		.align	2
 7744              	.L525:
 7745 0030 14000A00 		.word	655380
 7746 0034 04000A00 		.word	655364
 7747              		.cfi_endproc
 7748              	.LFE86:
 7750              		.section	.text.dwt_entersleepaftertx,"ax",%progbits
 7751              		.align	1
 7752              		.global	dwt_entersleepaftertx
 7753              		.syntax unified
 7754              		.thumb
 7755              		.thumb_func
 7756              		.fpu fpv4-sp-d16
 7758              	dwt_entersleepaftertx:
 7759              	.LVL705:
 7760              	.LFB87:
3058:Core/Src/deca_device.c ****     // Set the auto TX -> sleep bit
 7761              		.loc 1 3058 1 is_stmt 1 view -0
 7762              		.cfi_startproc
 7763              		@ args = 0, pretend = 0, frame = 0
 7764              		@ frame_needed = 0, uses_anonymous_args = 0
3058:Core/Src/deca_device.c ****     // Set the auto TX -> sleep bit
 7765              		.loc 1 3058 1 is_stmt 0 view .LVU2030
 7766 0000 08B5     		push	{r3, lr}
 7767              		.cfi_def_cfa_offset 8
 7768              		.cfi_offset 3, -8
 7769              		.cfi_offset 14, -4
3060:Core/Src/deca_device.c ****     {
 7770              		.loc 1 3060 5 is_stmt 1 view .LVU2031
3060:Core/Src/deca_device.c ****     {
 7771              		.loc 1 3060 7 is_stmt 0 view .LVU2032
 7772 0002 40B1     		cbz	r0, .L528
3062:Core/Src/deca_device.c ****     }
 7773              		.loc 1 3062 9 is_stmt 1 view .LVU2033
ARM GAS  /tmp/cctZ3fzX.s 			page 252


 7774 0004 4FF40063 		mov	r3, #2048
 7775 0008 4FF6FF72 		movw	r2, #65535
 7776 000c 0021     		movs	r1, #0
 7777 000e 0648     		ldr	r0, .L531
 7778              	.LVL706:
3062:Core/Src/deca_device.c ****     }
 7779              		.loc 1 3062 9 is_stmt 0 view .LVU2034
 7780 0010 FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 7781              	.LVL707:
 7782              	.L527:
3068:Core/Src/deca_device.c **** 
 7783              		.loc 1 3068 1 view .LVU2035
 7784 0014 08BD     		pop	{r3, pc}
 7785              	.LVL708:
 7786              	.L528:
3066:Core/Src/deca_device.c ****     }
 7787              		.loc 1 3066 9 is_stmt 1 view .LVU2036
 7788 0016 0023     		movs	r3, #0
 7789 0018 4FF2FF72 		movw	r2, #63487
 7790 001c 1946     		mov	r1, r3
 7791 001e 0248     		ldr	r0, .L531
 7792              	.LVL709:
3066:Core/Src/deca_device.c ****     }
 7793              		.loc 1 3066 9 is_stmt 0 view .LVU2037
 7794 0020 FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 7795              	.LVL710:
3068:Core/Src/deca_device.c **** 
 7796              		.loc 1 3068 1 view .LVU2038
 7797 0024 F6E7     		b	.L527
 7798              	.L532:
 7799 0026 00BF     		.align	2
 7800              	.L531:
 7801 0028 08001100 		.word	1114120
 7802              		.cfi_endproc
 7803              	.LFE87:
 7805              		.section	.text.dwt_check_dev_id,"ax",%progbits
 7806              		.align	1
 7807              		.global	dwt_check_dev_id
 7808              		.syntax unified
 7809              		.thumb
 7810              		.thumb_func
 7811              		.fpu fpv4-sp-d16
 7813              	dwt_check_dev_id:
 7814              	.LFB88:
3081:Core/Src/deca_device.c ****     uint32_t  dev_id;
 7815              		.loc 1 3081 1 is_stmt 1 view -0
 7816              		.cfi_startproc
 7817              		@ args = 0, pretend = 0, frame = 0
 7818              		@ frame_needed = 0, uses_anonymous_args = 0
 7819 0000 08B5     		push	{r3, lr}
 7820              		.cfi_def_cfa_offset 8
 7821              		.cfi_offset 3, -8
 7822              		.cfi_offset 14, -4
3082:Core/Src/deca_device.c **** 
 7823              		.loc 1 3082 5 view .LVU2040
3084:Core/Src/deca_device.c **** 
 7824              		.loc 1 3084 5 view .LVU2041
ARM GAS  /tmp/cctZ3fzX.s 			page 253


3084:Core/Src/deca_device.c **** 
 7825              		.loc 1 3084 14 is_stmt 0 view .LVU2042
 7826 0002 FFF7FEFF 		bl	dwt_readdevid
 7827              	.LVL711:
3086:Core/Src/deca_device.c ****     {
 7828              		.loc 1 3086 5 is_stmt 1 view .LVU2043
3086:Core/Src/deca_device.c ****     {
 7829              		.loc 1 3086 8 is_stmt 0 view .LVU2044
 7830 0006 064B     		ldr	r3, .L538
 7831 0008 9842     		cmp	r0, r3
 7832 000a 04D0     		beq	.L535
3086:Core/Src/deca_device.c ****     {
 7833              		.loc 1 3086 9 discriminator 1 view .LVU2045
 7834 000c 103B     		subs	r3, r3, #16
 7835 000e 9842     		cmp	r0, r3
 7836 0010 03D1     		bne	.L536
3090:Core/Src/deca_device.c **** }
 7837              		.loc 1 3090 12 view .LVU2046
 7838 0012 0020     		movs	r0, #0
 7839              	.LVL712:
 7840              	.L533:
3091:Core/Src/deca_device.c **** 
 7841              		.loc 1 3091 1 view .LVU2047
 7842 0014 08BD     		pop	{r3, pc}
 7843              	.LVL713:
 7844              	.L535:
3090:Core/Src/deca_device.c **** }
 7845              		.loc 1 3090 12 view .LVU2048
 7846 0016 0020     		movs	r0, #0
 7847              	.LVL714:
3090:Core/Src/deca_device.c **** }
 7848              		.loc 1 3090 12 view .LVU2049
 7849 0018 FCE7     		b	.L533
 7850              	.LVL715:
 7851              	.L536:
3088:Core/Src/deca_device.c ****     }
 7852              		.loc 1 3088 16 view .LVU2050
 7853 001a 4FF0FF30 		mov	r0, #-1
 7854              	.LVL716:
3088:Core/Src/deca_device.c ****     }
 7855              		.loc 1 3088 16 view .LVU2051
 7856 001e F9E7     		b	.L533
 7857              	.L539:
 7858              		.align	2
 7859              	.L538:
 7860 0020 1203CADE 		.word	-557186286
 7861              		.cfi_endproc
 7862              	.LFE88:
 7864              		.section	.text.dwt_initialise,"ax",%progbits
 7865              		.align	1
 7866              		.global	dwt_initialise
 7867              		.syntax unified
 7868              		.thumb
 7869              		.thumb_func
 7870              		.fpu fpv4-sp-d16
 7872              	dwt_initialise:
 7873              	.LVL717:
ARM GAS  /tmp/cctZ3fzX.s 			page 254


 7874              	.LFB21:
 772:Core/Src/deca_device.c ****    //uint16_t otp_addr;
 7875              		.loc 1 772 1 is_stmt 1 view -0
 7876              		.cfi_startproc
 7877              		@ args = 0, pretend = 0, frame = 0
 7878              		@ frame_needed = 0, uses_anonymous_args = 0
 772:Core/Src/deca_device.c ****    //uint16_t otp_addr;
 7879              		.loc 1 772 1 is_stmt 0 view .LVU2053
 7880 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7881              		.cfi_def_cfa_offset 24
 7882              		.cfi_offset 3, -24
 7883              		.cfi_offset 4, -20
 7884              		.cfi_offset 5, -16
 7885              		.cfi_offset 6, -12
 7886              		.cfi_offset 7, -8
 7887              		.cfi_offset 14, -4
 7888 0002 0446     		mov	r4, r0
 775:Core/Src/deca_device.c ****     uint32_t ldo_tune_hi;
 7889              		.loc 1 775 5 is_stmt 1 view .LVU2054
 776:Core/Src/deca_device.c **** 
 7890              		.loc 1 776 5 view .LVU2055
 778:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = DWT_RUNSAR;  // Configure RUN_SAR on wake by default as it is needed
 7891              		.loc 1 778 5 view .LVU2056
 778:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = DWT_RUNSAR;  // Configure RUN_SAR on wake by default as it is needed
 7892              		.loc 1 778 17 is_stmt 0 view .LVU2057
 7893 0004 434B     		ldr	r3, .L560
 7894 0006 1B68     		ldr	r3, [r3]
 778:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = DWT_RUNSAR;  // Configure RUN_SAR on wake by default as it is needed
 7895              		.loc 1 778 29 view .LVU2058
 7896 0008 0022     		movs	r2, #0
 7897 000a DA73     		strb	r2, [r3, #15]
 779:Core/Src/deca_device.c ****     pdw3000local->spicrc = 0;
 7898              		.loc 1 779 5 is_stmt 1 view .LVU2059
 779:Core/Src/deca_device.c ****     pdw3000local->spicrc = 0;
 7899              		.loc 1 779 30 is_stmt 0 view .LVU2060
 7900 000c 0221     		movs	r1, #2
 7901 000e 1982     		strh	r1, [r3, #16]	@ movhi
 780:Core/Src/deca_device.c ****     pdw3000local->stsconfig = 0; //STS off
 7902              		.loc 1 780 5 is_stmt 1 view .LVU2061
 780:Core/Src/deca_device.c ****     pdw3000local->stsconfig = 0; //STS off
 7903              		.loc 1 780 26 is_stmt 0 view .LVU2062
 7904 0010 1A75     		strb	r2, [r3, #20]
 781:Core/Src/deca_device.c ****     pdw3000local->vBatP = 0;
 7905              		.loc 1 781 5 is_stmt 1 view .LVU2063
 781:Core/Src/deca_device.c ****     pdw3000local->vBatP = 0;
 7906              		.loc 1 781 29 is_stmt 0 view .LVU2064
 7907 0012 5A75     		strb	r2, [r3, #21]
 782:Core/Src/deca_device.c ****     pdw3000local->tempP = 0;
 7908              		.loc 1 782 5 is_stmt 1 view .LVU2065
 782:Core/Src/deca_device.c ****     pdw3000local->tempP = 0;
 7909              		.loc 1 782 25 is_stmt 0 view .LVU2066
 7910 0014 9A72     		strb	r2, [r3, #10]
 783:Core/Src/deca_device.c **** 
 7911              		.loc 1 783 5 is_stmt 1 view .LVU2067
 783:Core/Src/deca_device.c **** 
 7912              		.loc 1 783 25 is_stmt 0 view .LVU2068
 7913 0016 DA72     		strb	r2, [r3, #11]
ARM GAS  /tmp/cctZ3fzX.s 			page 255


 785:Core/Src/deca_device.c ****     pdw3000local->cbRxOk = NULL;
 7914              		.loc 1 785 5 is_stmt 1 view .LVU2069
 785:Core/Src/deca_device.c ****     pdw3000local->cbRxOk = NULL;
 7915              		.loc 1 785 28 is_stmt 0 view .LVU2070
 7916 0018 9A62     		str	r2, [r3, #40]
 786:Core/Src/deca_device.c ****     pdw3000local->cbRxTo = NULL;
 7917              		.loc 1 786 5 is_stmt 1 view .LVU2071
 786:Core/Src/deca_device.c ****     pdw3000local->cbRxTo = NULL;
 7918              		.loc 1 786 26 is_stmt 0 view .LVU2072
 7919 001a DA62     		str	r2, [r3, #44]
 787:Core/Src/deca_device.c ****     pdw3000local->cbRxErr = NULL;
 7920              		.loc 1 787 5 is_stmt 1 view .LVU2073
 787:Core/Src/deca_device.c ****     pdw3000local->cbRxErr = NULL;
 7921              		.loc 1 787 26 is_stmt 0 view .LVU2074
 7922 001c 1A63     		str	r2, [r3, #48]
 788:Core/Src/deca_device.c ****     pdw3000local->cbSPIRdy = NULL;
 7923              		.loc 1 788 5 is_stmt 1 view .LVU2075
 788:Core/Src/deca_device.c ****     pdw3000local->cbSPIRdy = NULL;
 7924              		.loc 1 788 27 is_stmt 0 view .LVU2076
 7925 001e 5A63     		str	r2, [r3, #52]
 789:Core/Src/deca_device.c ****     pdw3000local->cbSPIErr = NULL;
 7926              		.loc 1 789 5 is_stmt 1 view .LVU2077
 789:Core/Src/deca_device.c ****     pdw3000local->cbSPIErr = NULL;
 7927              		.loc 1 789 28 is_stmt 0 view .LVU2078
 7928 0020 DA63     		str	r2, [r3, #60]
 790:Core/Src/deca_device.c **** 
 7929              		.loc 1 790 5 is_stmt 1 view .LVU2079
 790:Core/Src/deca_device.c **** 
 7930              		.loc 1 790 28 is_stmt 0 view .LVU2080
 7931 0022 9A63     		str	r2, [r3, #56]
 793:Core/Src/deca_device.c ****     {
 7932              		.loc 1 793 5 is_stmt 1 view .LVU2081
 793:Core/Src/deca_device.c ****     {
 7933              		.loc 1 793 9 is_stmt 0 view .LVU2082
 7934 0024 FFF7FEFF 		bl	dwt_check_dev_id
 7935              	.LVL718:
 793:Core/Src/deca_device.c ****     {
 7936              		.loc 1 793 8 view .LVU2083
 7937 0028 0028     		cmp	r0, #0
 7938 002a 6FD1     		bne	.L552
 7939 002c 0646     		mov	r6, r0
 799:Core/Src/deca_device.c ****     ldo_tune_hi = _dwt_otpread(LDOTUNEHI_ADDRESS);
 7940              		.loc 1 799 5 is_stmt 1 view .LVU2084
 799:Core/Src/deca_device.c ****     ldo_tune_hi = _dwt_otpread(LDOTUNEHI_ADDRESS);
 7941              		.loc 1 799 19 is_stmt 0 view .LVU2085
 7942 002e 0420     		movs	r0, #4
 7943 0030 FFF7FEFF 		bl	_dwt_otpread
 7944              	.LVL719:
 7945 0034 0546     		mov	r5, r0
 7946              	.LVL720:
 800:Core/Src/deca_device.c ****     pdw3000local->bias_tune = (_dwt_otpread(BIAS_TUNE_ADDRESS) >> 16) & BIAS_CTRL_BIAS_MASK;
 7947              		.loc 1 800 5 is_stmt 1 view .LVU2086
 800:Core/Src/deca_device.c ****     pdw3000local->bias_tune = (_dwt_otpread(BIAS_TUNE_ADDRESS) >> 16) & BIAS_CTRL_BIAS_MASK;
 7948              		.loc 1 800 19 is_stmt 0 view .LVU2087
 7949 0036 0520     		movs	r0, #5
 7950              	.LVL721:
 800:Core/Src/deca_device.c ****     pdw3000local->bias_tune = (_dwt_otpread(BIAS_TUNE_ADDRESS) >> 16) & BIAS_CTRL_BIAS_MASK;
ARM GAS  /tmp/cctZ3fzX.s 			page 256


 7951              		.loc 1 800 19 view .LVU2088
 7952 0038 FFF7FEFF 		bl	_dwt_otpread
 7953              	.LVL722:
 7954 003c 0746     		mov	r7, r0
 7955              	.LVL723:
 801:Core/Src/deca_device.c **** 
 7956              		.loc 1 801 5 is_stmt 1 view .LVU2089
 801:Core/Src/deca_device.c **** 
 7957              		.loc 1 801 32 is_stmt 0 view .LVU2090
 7958 003e 0A20     		movs	r0, #10
 7959              	.LVL724:
 801:Core/Src/deca_device.c **** 
 7960              		.loc 1 801 32 view .LVU2091
 7961 0040 FFF7FEFF 		bl	_dwt_otpread
 7962              	.LVL725:
 801:Core/Src/deca_device.c **** 
 7963              		.loc 1 801 17 view .LVU2092
 7964 0044 334B     		ldr	r3, .L560
 7965 0046 1A68     		ldr	r2, [r3]
 801:Core/Src/deca_device.c **** 
 7966              		.loc 1 801 71 view .LVU2093
 7967 0048 C0F30440 		ubfx	r0, r0, #16, #5
 801:Core/Src/deca_device.c **** 
 7968              		.loc 1 801 29 view .LVU2094
 7969 004c 1072     		strb	r0, [r2, #8]
 803:Core/Src/deca_device.c ****     {
 7970              		.loc 1 803 5 is_stmt 1 view .LVU2095
 803:Core/Src/deca_device.c ****     {
 7971              		.loc 1 803 8 is_stmt 0 view .LVU2096
 7972 004e 15B1     		cbz	r5, .L542
 803:Core/Src/deca_device.c ****     {
 7973              		.loc 1 803 28 discriminator 1 view .LVU2097
 7974 0050 0FB1     		cbz	r7, .L542
 803:Core/Src/deca_device.c ****     {
 7975              		.loc 1 803 50 discriminator 2 view .LVU2098
 7976 0052 0028     		cmp	r0, #0
 7977 0054 36D1     		bne	.L554
 7978              	.L542:
 809:Core/Src/deca_device.c ****     {
 7979              		.loc 1 809 5 is_stmt 1 view .LVU2099
 809:Core/Src/deca_device.c ****     {
 7980              		.loc 1 809 9 is_stmt 0 view .LVU2100
 7981 0056 2020     		movs	r0, #32
 7982 0058 FFF7FEFF 		bl	_dwt_otpread
 7983              	.LVL726:
 809:Core/Src/deca_device.c ****     {
 7984              		.loc 1 809 8 view .LVU2101
 7985 005c 2E4B     		ldr	r3, .L560+4
 7986 005e 9842     		cmp	r0, r3
 7987 0060 33D0     		beq	.L555
 815:Core/Src/deca_device.c ****     }
 7988              		.loc 1 815 9 is_stmt 1 view .LVU2102
 815:Core/Src/deca_device.c ****     }
 7989              		.loc 1 815 21 is_stmt 0 view .LVU2103
 7990 0062 2C4B     		ldr	r3, .L560
 7991 0064 1B68     		ldr	r3, [r3]
 815:Core/Src/deca_device.c ****     }
ARM GAS  /tmp/cctZ3fzX.s 			page 257


 7992              		.loc 1 815 35 view .LVU2104
 7993 0066 0022     		movs	r2, #0
 7994 0068 5A72     		strb	r2, [r3, #9]
 7995              	.L544:
 819:Core/Src/deca_device.c ****         pdw3000local->partID = _dwt_otpread(PARTID_ADDRESS);
 7996              		.loc 1 819 5 is_stmt 1 view .LVU2105
 819:Core/Src/deca_device.c ****         pdw3000local->partID = _dwt_otpread(PARTID_ADDRESS);
 7997              		.loc 1 819 7 is_stmt 0 view .LVU2106
 7998 006a 14F0100F 		tst	r4, #16
 7999 006e 31D1     		bne	.L556
 8000              	.LVL727:
 8001              	.L545:
 821:Core/Src/deca_device.c ****         pdw3000local->lotID = _dwt_otpread(LOTID_ADDRESS);
 8002              		.loc 1 821 5 is_stmt 1 view .LVU2107
 821:Core/Src/deca_device.c ****         pdw3000local->lotID = _dwt_otpread(LOTID_ADDRESS);
 8003              		.loc 1 821 8 is_stmt 0 view .LVU2108
 8004 0070 14F0200F 		tst	r4, #32
 8005 0074 35D1     		bne	.L557
 8006              	.L546:
 823:Core/Src/deca_device.c ****         pdw3000local->vBatP = (uint8_t)_dwt_otpread(VBAT_ADDRESS);
 8007              		.loc 1 823 5 is_stmt 1 view .LVU2109
 823:Core/Src/deca_device.c ****         pdw3000local->vBatP = (uint8_t)_dwt_otpread(VBAT_ADDRESS);
 8008              		.loc 1 823 8 is_stmt 0 view .LVU2110
 8009 0076 14F0400F 		tst	r4, #64
 8010 007a 39D1     		bne	.L558
 8011              	.L547:
 825:Core/Src/deca_device.c ****         pdw3000local->tempP = (uint8_t)_dwt_otpread(VTEMP_ADDRESS);
 8012              		.loc 1 825 5 is_stmt 1 view .LVU2111
 825:Core/Src/deca_device.c ****         pdw3000local->tempP = (uint8_t)_dwt_otpread(VTEMP_ADDRESS);
 8013              		.loc 1 825 8 is_stmt 0 view .LVU2112
 8014 007c 14F0800F 		tst	r4, #128
 8015 0080 3DD1     		bne	.L559
 8016              	.L548:
 829:Core/Src/deca_device.c ****     {
 8017              		.loc 1 829 5 is_stmt 1 view .LVU2113
 829:Core/Src/deca_device.c ****     {
 8018              		.loc 1 829 20 is_stmt 0 view .LVU2114
 8019 0082 244B     		ldr	r3, .L560
 8020 0084 1B68     		ldr	r3, [r3]
 8021 0086 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 829:Core/Src/deca_device.c ****     {
 8022              		.loc 1 829 7 view .LVU2115
 8023 0088 0AB9     		cbnz	r2, .L549
 831:Core/Src/deca_device.c ****     }
 8024              		.loc 1 831 9 is_stmt 1 view .LVU2116
 831:Core/Src/deca_device.c ****     }
 8025              		.loc 1 831 29 is_stmt 0 view .LVU2117
 8026 008a 8522     		movs	r2, #133
 8027 008c DA72     		strb	r2, [r3, #11]
 8028              	.L549:
 834:Core/Src/deca_device.c ****     {
 8029              		.loc 1 834 5 is_stmt 1 view .LVU2118
 834:Core/Src/deca_device.c ****     {
 8030              		.loc 1 834 20 is_stmt 0 view .LVU2119
 8031 008e 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 834:Core/Src/deca_device.c ****     {
 8032              		.loc 1 834 7 view .LVU2120
ARM GAS  /tmp/cctZ3fzX.s 			page 258


 8033 0090 0AB9     		cbnz	r2, .L550
 836:Core/Src/deca_device.c ****     }
 8034              		.loc 1 836 9 is_stmt 1 view .LVU2121
 836:Core/Src/deca_device.c ****     }
 8035              		.loc 1 836 29 is_stmt 0 view .LVU2122
 8036 0092 7422     		movs	r2, #116
 8037 0094 9A72     		strb	r2, [r3, #10]
 8038              	.L550:
 839:Core/Src/deca_device.c **** 
 8039              		.loc 1 839 5 is_stmt 1 view .LVU2123
 839:Core/Src/deca_device.c **** 
 8040              		.loc 1 839 38 is_stmt 0 view .LVU2124
 8041 0096 1F20     		movs	r0, #31
 8042 0098 FFF7FEFF 		bl	_dwt_otpread
 8043              	.LVL728:
 839:Core/Src/deca_device.c **** 
 8044              		.loc 1 839 17 view .LVU2125
 8045 009c 1D4C     		ldr	r4, .L560
 8046              	.LVL729:
 839:Core/Src/deca_device.c **** 
 8047              		.loc 1 839 17 view .LVU2126
 8048 009e 2368     		ldr	r3, [r4]
 839:Core/Src/deca_device.c **** 
 8049              		.loc 1 839 26 view .LVU2127
 8050 00a0 5873     		strb	r0, [r3, #13]
 841:Core/Src/deca_device.c ****     if(pdw3000local->init_xtrim == 0)
 8051              		.loc 1 841 5 is_stmt 1 view .LVU2128
 841:Core/Src/deca_device.c ****     if(pdw3000local->init_xtrim == 0)
 8052              		.loc 1 841 32 is_stmt 0 view .LVU2129
 8053 00a2 1E20     		movs	r0, #30
 8054 00a4 FFF7FEFF 		bl	_dwt_otpread
 8055              	.LVL730:
 841:Core/Src/deca_device.c ****     if(pdw3000local->init_xtrim == 0)
 8056              		.loc 1 841 17 view .LVU2130
 8057 00a8 2368     		ldr	r3, [r4]
 841:Core/Src/deca_device.c ****     if(pdw3000local->init_xtrim == 0)
 8058              		.loc 1 841 60 view .LVU2131
 8059 00aa 00F07F00 		and	r0, r0, #127
 841:Core/Src/deca_device.c ****     if(pdw3000local->init_xtrim == 0)
 8060              		.loc 1 841 30 view .LVU2132
 8061 00ae 9873     		strb	r0, [r3, #14]
 842:Core/Src/deca_device.c ****     {
 8062              		.loc 1 842 5 is_stmt 1 view .LVU2133
 842:Core/Src/deca_device.c ****     {
 8063              		.loc 1 842 7 is_stmt 0 view .LVU2134
 8064 00b0 08B9     		cbnz	r0, .L551
 844:Core/Src/deca_device.c ****     }
 8065              		.loc 1 844 9 is_stmt 1 view .LVU2135
 844:Core/Src/deca_device.c ****     }
 8066              		.loc 1 844 34 is_stmt 0 view .LVU2136
 8067 00b2 2E22     		movs	r2, #46
 8068 00b4 9A73     		strb	r2, [r3, #14]
 8069              	.L551:
 846:Core/Src/deca_device.c **** 
 8070              		.loc 1 846 5 is_stmt 1 view .LVU2137
 8071 00b6 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 8072 00b8 0021     		movs	r1, #0
ARM GAS  /tmp/cctZ3fzX.s 			page 259


 8073 00ba 1848     		ldr	r0, .L560+8
 8074 00bc FFF7FEFF 		bl	dwt_write8bitoffsetreg
 8075              	.LVL731:
 849:Core/Src/deca_device.c **** 
 8076              		.loc 1 849 5 view .LVU2138
 8077              	.L540:
 851:Core/Src/deca_device.c **** 
 8078              		.loc 1 851 1 is_stmt 0 view .LVU2139
 8079 00c0 3046     		mov	r0, r6
 8080 00c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8081              	.LVL732:
 8082              	.L554:
 805:Core/Src/deca_device.c ****     }
 8083              		.loc 1 805 9 is_stmt 1 view .LVU2140
 8084 00c4 FFF7FEFF 		bl	_dwt_prog_ldo_and_bias_tune
 8085              	.LVL733:
 8086 00c8 C5E7     		b	.L542
 8087              	.L555:
 811:Core/Src/deca_device.c ****     }
 8088              		.loc 1 811 9 view .LVU2141
 811:Core/Src/deca_device.c ****     }
 8089              		.loc 1 811 21 is_stmt 0 view .LVU2142
 8090 00ca 124B     		ldr	r3, .L560
 8091 00cc 1B68     		ldr	r3, [r3]
 811:Core/Src/deca_device.c ****     }
 8092              		.loc 1 811 35 view .LVU2143
 8093 00ce 0122     		movs	r2, #1
 8094 00d0 5A72     		strb	r2, [r3, #9]
 8095 00d2 CAE7     		b	.L544
 8096              	.L556:
 820:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_LID)
 8097              		.loc 1 820 9 is_stmt 1 view .LVU2144
 820:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_LID)
 8098              		.loc 1 820 21 is_stmt 0 view .LVU2145
 8099 00d4 0F4B     		ldr	r3, .L560
 8100 00d6 1D68     		ldr	r5, [r3]
 8101              	.LVL734:
 820:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_LID)
 8102              		.loc 1 820 32 view .LVU2146
 8103 00d8 0620     		movs	r0, #6
 8104 00da FFF7FEFF 		bl	_dwt_otpread
 8105              	.LVL735:
 820:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_LID)
 8106              		.loc 1 820 30 view .LVU2147
 8107 00de 2860     		str	r0, [r5]
 8108 00e0 C6E7     		b	.L545
 8109              	.L557:
 822:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_BAT)
 8110              		.loc 1 822 9 is_stmt 1 view .LVU2148
 822:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_BAT)
 8111              		.loc 1 822 21 is_stmt 0 view .LVU2149
 8112 00e2 0C4B     		ldr	r3, .L560
 8113 00e4 1D68     		ldr	r5, [r3]
 822:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_BAT)
 8114              		.loc 1 822 31 view .LVU2150
 8115 00e6 0720     		movs	r0, #7
 8116 00e8 FFF7FEFF 		bl	_dwt_otpread
ARM GAS  /tmp/cctZ3fzX.s 			page 260


 8117              	.LVL736:
 822:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_BAT)
 8118              		.loc 1 822 29 view .LVU2151
 8119 00ec 6860     		str	r0, [r5, #4]
 8120 00ee C2E7     		b	.L546
 8121              	.L558:
 824:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_TMP)
 8122              		.loc 1 824 9 is_stmt 1 view .LVU2152
 824:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_TMP)
 8123              		.loc 1 824 40 is_stmt 0 view .LVU2153
 8124 00f0 0820     		movs	r0, #8
 8125 00f2 FFF7FEFF 		bl	_dwt_otpread
 8126              	.LVL737:
 824:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_TMP)
 8127              		.loc 1 824 21 view .LVU2154
 8128 00f6 074B     		ldr	r3, .L560
 8129 00f8 1B68     		ldr	r3, [r3]
 824:Core/Src/deca_device.c ****     if (mode & DWT_READ_OTP_TMP)
 8130              		.loc 1 824 29 view .LVU2155
 8131 00fa 9872     		strb	r0, [r3, #10]
 8132 00fc BEE7     		b	.L547
 8133              	.L559:
 826:Core/Src/deca_device.c **** 
 8134              		.loc 1 826 9 is_stmt 1 view .LVU2156
 826:Core/Src/deca_device.c **** 
 8135              		.loc 1 826 40 is_stmt 0 view .LVU2157
 8136 00fe 0920     		movs	r0, #9
 8137 0100 FFF7FEFF 		bl	_dwt_otpread
 8138              	.LVL738:
 826:Core/Src/deca_device.c **** 
 8139              		.loc 1 826 21 view .LVU2158
 8140 0104 034B     		ldr	r3, .L560
 8141 0106 1B68     		ldr	r3, [r3]
 826:Core/Src/deca_device.c **** 
 8142              		.loc 1 826 29 view .LVU2159
 8143 0108 D872     		strb	r0, [r3, #11]
 8144 010a BAE7     		b	.L548
 8145              	.LVL739:
 8146              	.L552:
 795:Core/Src/deca_device.c ****     }
 8147              		.loc 1 795 16 view .LVU2160
 8148 010c 4FF0FF36 		mov	r6, #-1
 8149 0110 D6E7     		b	.L540
 8150              	.L561:
 8151 0112 00BF     		.align	2
 8152              	.L560:
 8153 0114 00000000 		.word	.LANCHOR2
 8154 0118 40020010 		.word	268436032
 8155 011c 14000900 		.word	589844
 8156              		.cfi_endproc
 8157              	.LFE21:
 8159              		.section	.text.dwt_configciadiag,"ax",%progbits
 8160              		.align	1
 8161              		.global	dwt_configciadiag
 8162              		.syntax unified
 8163              		.thumb
 8164              		.thumb_func
ARM GAS  /tmp/cctZ3fzX.s 			page 261


 8165              		.fpu fpv4-sp-d16
 8167              	dwt_configciadiag:
 8168              	.LVL740:
 8169              	.LFB89:
3109:Core/Src/deca_device.c ****     if(enable_mask & DW_CIA_DIAG_LOG_ALL)
 8170              		.loc 1 3109 1 is_stmt 1 view -0
 8171              		.cfi_startproc
 8172              		@ args = 0, pretend = 0, frame = 0
 8173              		@ frame_needed = 0, uses_anonymous_args = 0
3109:Core/Src/deca_device.c ****     if(enable_mask & DW_CIA_DIAG_LOG_ALL)
 8174              		.loc 1 3109 1 is_stmt 0 view .LVU2162
 8175 0000 10B5     		push	{r4, lr}
 8176              		.cfi_def_cfa_offset 8
 8177              		.cfi_offset 4, -8
 8178              		.cfi_offset 14, -4
 8179 0002 0446     		mov	r4, r0
3110:Core/Src/deca_device.c ****     {
 8180              		.loc 1 3110 5 is_stmt 1 view .LVU2163
3110:Core/Src/deca_device.c ****     {
 8181              		.loc 1 3110 7 is_stmt 0 view .LVU2164
 8182 0004 10F0010F 		tst	r0, #1
 8183 0008 0FD0     		beq	.L563
3112:Core/Src/deca_device.c ****     }
 8184              		.loc 1 3112 9 is_stmt 1 view .LVU2165
 8185 000a 0023     		movs	r3, #0
 8186 000c EF22     		movs	r2, #239
 8187 000e 0221     		movs	r1, #2
 8188 0010 4FF46020 		mov	r0, #917504
 8189              	.LVL741:
3112:Core/Src/deca_device.c ****     }
 8190              		.loc 1 3112 9 is_stmt 0 view .LVU2166
 8191 0014 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 8192              	.LVL742:
 8193              	.L564:
3119:Core/Src/deca_device.c **** 
 8194              		.loc 1 3119 5 is_stmt 1 view .LVU2167
 8195 0018 6208     		lsrs	r2, r4, #1
 8196 001a 0021     		movs	r1, #0
 8197 001c 0748     		ldr	r0, .L566
 8198 001e FFF7FEFF 		bl	dwt_write8bitoffsetreg
 8199              	.LVL743:
3121:Core/Src/deca_device.c **** }
 8200              		.loc 1 3121 5 view .LVU2168
3121:Core/Src/deca_device.c **** }
 8201              		.loc 1 3121 17 is_stmt 0 view .LVU2169
 8202 0022 074B     		ldr	r3, .L566+4
 8203 0024 1B68     		ldr	r3, [r3]
3121:Core/Src/deca_device.c **** }
 8204              		.loc 1 3121 34 view .LVU2170
 8205 0026 9C75     		strb	r4, [r3, #22]
3122:Core/Src/deca_device.c **** 
 8206              		.loc 1 3122 1 view .LVU2171
 8207 0028 10BD     		pop	{r4, pc}
 8208              	.LVL744:
 8209              	.L563:
3116:Core/Src/deca_device.c ****     }
 8210              		.loc 1 3116 9 is_stmt 1 view .LVU2172
ARM GAS  /tmp/cctZ3fzX.s 			page 262


 8211 002a 1023     		movs	r3, #16
 8212 002c FF22     		movs	r2, #255
 8213 002e 0221     		movs	r1, #2
 8214 0030 4FF46020 		mov	r0, #917504
 8215              	.LVL745:
3116:Core/Src/deca_device.c ****     }
 8216              		.loc 1 3116 9 is_stmt 0 view .LVU2173
 8217 0034 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 8218              	.LVL746:
 8219 0038 EEE7     		b	.L564
 8220              	.L567:
 8221 003a 00BF     		.align	2
 8222              	.L566:
 8223 003c 28000100 		.word	65576
 8224 0040 00000000 		.word	.LANCHOR2
 8225              		.cfi_endproc
 8226              	.LFE89:
 8228              		.section	.text.dwt_enableautoack,"ax",%progbits
 8229              		.align	1
 8230              		.global	dwt_enableautoack
 8231              		.syntax unified
 8232              		.thumb
 8233              		.thumb_func
 8234              		.fpu fpv4-sp-d16
 8236              	dwt_enableautoack:
 8237              	.LVL747:
 8238              	.LFB90:
3138:Core/Src/deca_device.c ****     // Set auto ACK reply delay
 8239              		.loc 1 3138 1 is_stmt 1 view -0
 8240              		.cfi_startproc
 8241              		@ args = 0, pretend = 0, frame = 0
 8242              		@ frame_needed = 0, uses_anonymous_args = 0
3138:Core/Src/deca_device.c ****     // Set auto ACK reply delay
 8243              		.loc 1 3138 1 is_stmt 0 view .LVU2175
 8244 0000 10B5     		push	{r4, lr}
 8245              		.cfi_def_cfa_offset 8
 8246              		.cfi_offset 4, -8
 8247              		.cfi_offset 14, -4
 8248 0002 0246     		mov	r2, r0
 8249 0004 0C46     		mov	r4, r1
3140:Core/Src/deca_device.c **** 
 8250              		.loc 1 3140 5 is_stmt 1 view .LVU2176
 8251 0006 0321     		movs	r1, #3
 8252              	.LVL748:
3140:Core/Src/deca_device.c **** 
 8253              		.loc 1 3140 5 is_stmt 0 view .LVU2177
 8254 0008 0A48     		ldr	r0, .L572
 8255              	.LVL749:
3140:Core/Src/deca_device.c **** 
 8256              		.loc 1 3140 5 view .LVU2178
 8257 000a FFF7FEFF 		bl	dwt_write8bitoffsetreg
 8258              	.LVL750:
3143:Core/Src/deca_device.c ****     {
 8259              		.loc 1 3143 5 is_stmt 1 view .LVU2179
3143:Core/Src/deca_device.c ****     {
 8260              		.loc 1 3143 8 is_stmt 0 view .LVU2180
 8261 000e 44B1     		cbz	r4, .L569
ARM GAS  /tmp/cctZ3fzX.s 			page 263


3145:Core/Src/deca_device.c ****     }
 8262              		.loc 1 3145 9 is_stmt 1 view .LVU2181
 8263 0010 4FF48123 		mov	r3, #264192
 8264 0014 4FF0FF32 		mov	r2, #-1
 8265 0018 0021     		movs	r1, #0
 8266 001a 1020     		movs	r0, #16
 8267 001c FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 8268              	.LVL751:
 8269              	.L568:
3151:Core/Src/deca_device.c **** 
 8270              		.loc 1 3151 1 is_stmt 0 view .LVU2182
 8271 0020 10BD     		pop	{r4, pc}
 8272              	.LVL752:
 8273              	.L569:
3149:Core/Src/deca_device.c ****     }
 8274              		.loc 1 3149 9 is_stmt 1 view .LVU2183
 8275 0022 0023     		movs	r3, #0
 8276 0024 4FF2FF72 		movw	r2, #63487
 8277 0028 1946     		mov	r1, r3
 8278 002a 1020     		movs	r0, #16
 8279 002c FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 8280              	.LVL753:
3151:Core/Src/deca_device.c **** 
 8281              		.loc 1 3151 1 is_stmt 0 view .LVU2184
 8282 0030 F6E7     		b	.L568
 8283              	.L573:
 8284 0032 00BF     		.align	2
 8285              	.L572:
 8286 0034 08000100 		.word	65544
 8287              		.cfi_endproc
 8288              	.LFE90:
 8290              		.section	.text.dwt_signal_rx_buff_free,"ax",%progbits
 8291              		.align	1
 8292              		.global	dwt_signal_rx_buff_free
 8293              		.syntax unified
 8294              		.thumb
 8295              		.thumb_func
 8296              		.fpu fpv4-sp-d16
 8298              	dwt_signal_rx_buff_free:
 8299              	.LFB91:
3165:Core/Src/deca_device.c ****     dwt_writefastCMD(CMD_DB_TOGGLE);
 8300              		.loc 1 3165 1 is_stmt 1 view -0
 8301              		.cfi_startproc
 8302              		@ args = 0, pretend = 0, frame = 0
 8303              		@ frame_needed = 0, uses_anonymous_args = 0
 8304 0000 08B5     		push	{r3, lr}
 8305              		.cfi_def_cfa_offset 8
 8306              		.cfi_offset 3, -8
 8307              		.cfi_offset 14, -4
3166:Core/Src/deca_device.c **** 
 8308              		.loc 1 3166 5 view .LVU2186
 8309 0002 0023     		movs	r3, #0
 8310 0004 1A46     		mov	r2, r3
 8311 0006 1946     		mov	r1, r3
 8312 0008 1320     		movs	r0, #19
 8313 000a FFF7FEFF 		bl	dwt_writetodevice
 8314              	.LVL754:
ARM GAS  /tmp/cctZ3fzX.s 			page 264


3169:Core/Src/deca_device.c ****     {
 8315              		.loc 1 3169 5 view .LVU2187
3169:Core/Src/deca_device.c ****     {
 8316              		.loc 1 3169 21 is_stmt 0 view .LVU2188
 8317 000e 054B     		ldr	r3, .L579
 8318 0010 1B68     		ldr	r3, [r3]
 8319 0012 DA7B     		ldrb	r2, [r3, #15]	@ zero_extendqisi2
3169:Core/Src/deca_device.c ****     {
 8320              		.loc 1 3169 8 view .LVU2189
 8321 0014 032A     		cmp	r2, #3
 8322 0016 02D0     		beq	.L578
3175:Core/Src/deca_device.c ****     }
 8323              		.loc 1 3175 9 is_stmt 1 view .LVU2190
3175:Core/Src/deca_device.c ****     }
 8324              		.loc 1 3175 33 is_stmt 0 view .LVU2191
 8325 0018 0322     		movs	r2, #3
 8326 001a DA73     		strb	r2, [r3, #15]
 8327              	.L574:
3177:Core/Src/deca_device.c **** 
 8328              		.loc 1 3177 1 view .LVU2192
 8329 001c 08BD     		pop	{r3, pc}
 8330              	.L578:
3171:Core/Src/deca_device.c ****     }
 8331              		.loc 1 3171 9 is_stmt 1 view .LVU2193
3171:Core/Src/deca_device.c ****     }
 8332              		.loc 1 3171 33 is_stmt 0 view .LVU2194
 8333 001e 0122     		movs	r2, #1
 8334 0020 DA73     		strb	r2, [r3, #15]
 8335 0022 FBE7     		b	.L574
 8336              	.L580:
 8337              		.align	2
 8338              	.L579:
 8339 0024 00000000 		.word	.LANCHOR2
 8340              		.cfi_endproc
 8341              	.LFE91:
 8343              		.section	.text.dwt_setdblrxbuffmode,"ax",%progbits
 8344              		.align	1
 8345              		.global	dwt_setdblrxbuffmode
 8346              		.syntax unified
 8347              		.thumb
 8348              		.thumb_func
 8349              		.fpu fpv4-sp-d16
 8351              	dwt_setdblrxbuffmode:
 8352              	.LVL755:
 8353              	.LFB92:
3191:Core/Src/deca_device.c ****     uint32_t  or_val=0,and_val=-1;
 8354              		.loc 1 3191 1 is_stmt 1 view -0
 8355              		.cfi_startproc
 8356              		@ args = 0, pretend = 0, frame = 0
 8357              		@ frame_needed = 0, uses_anonymous_args = 0
3191:Core/Src/deca_device.c ****     uint32_t  or_val=0,and_val=-1;
 8358              		.loc 1 3191 1 is_stmt 0 view .LVU2196
 8359 0000 10B5     		push	{r4, lr}
 8360              		.cfi_def_cfa_offset 8
 8361              		.cfi_offset 4, -8
 8362              		.cfi_offset 14, -4
 8363 0002 0C46     		mov	r4, r1
ARM GAS  /tmp/cctZ3fzX.s 			page 265


3192:Core/Src/deca_device.c **** 
 8364              		.loc 1 3192 5 is_stmt 1 view .LVU2197
 8365              	.LVL756:
3194:Core/Src/deca_device.c ****     {
 8366              		.loc 1 3194 5 view .LVU2198
3194:Core/Src/deca_device.c ****     {
 8367              		.loc 1 3194 8 is_stmt 0 view .LVU2199
 8368 0004 70B1     		cbz	r0, .L587
3205:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_OFF;
 8369              		.loc 1 3205 9 is_stmt 1 view .LVU2200
 8370              	.LVL757:
3206:Core/Src/deca_device.c ****     }
 8371              		.loc 1 3206 9 view .LVU2201
3206:Core/Src/deca_device.c ****     }
 8372              		.loc 1 3206 21 is_stmt 0 view .LVU2202
 8373 0006 124B     		ldr	r3, .L588
 8374 0008 1B68     		ldr	r3, [r3]
3206:Core/Src/deca_device.c ****     }
 8375              		.loc 1 3206 33 view .LVU2203
 8376 000a 0022     		movs	r2, #0
 8377 000c DA73     		strb	r2, [r3, #15]
3192:Core/Src/deca_device.c **** 
 8378              		.loc 1 3192 24 view .LVU2204
 8379 000e 4FF0FF32 		mov	r2, #-1
3205:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_OFF;
 8380              		.loc 1 3205 16 view .LVU2205
 8381 0012 0823     		movs	r3, #8
 8382              	.LVL758:
 8383              	.L583:
3209:Core/Src/deca_device.c ****     {
 8384              		.loc 1 3209 5 is_stmt 1 view .LVU2206
3209:Core/Src/deca_device.c ****     {
 8385              		.loc 1 3209 8 is_stmt 0 view .LVU2207
 8386 0014 C4B9     		cbnz	r4, .L584
3211:Core/Src/deca_device.c ****     }
 8387              		.loc 1 3211 9 is_stmt 1 view .LVU2208
3211:Core/Src/deca_device.c ****     }
 8388              		.loc 1 3211 16 is_stmt 0 view .LVU2209
 8389 0016 43F48063 		orr	r3, r3, #1024
 8390              	.LVL759:
 8391              	.L585:
3218:Core/Src/deca_device.c **** }
 8392              		.loc 1 3218 5 is_stmt 1 view .LVU2210
 8393 001a 0021     		movs	r1, #0
 8394 001c 1020     		movs	r0, #16
 8395 001e FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 8396              	.LVL760:
3219:Core/Src/deca_device.c **** 
 8397              		.loc 1 3219 1 is_stmt 0 view .LVU2211
 8398 0022 10BD     		pop	{r4, pc}
 8399              	.LVL761:
 8400              	.L587:
3196:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_ACCESS_BUFFER_0;    //the host will access RX_BUFFER_0 i
 8401              		.loc 1 3196 9 is_stmt 1 view .LVU2212
3197:Core/Src/deca_device.c ****         //Updating indirect address here to save time setting it inside the interrupt(in order to r
 8402              		.loc 1 3197 9 view .LVU2213
3197:Core/Src/deca_device.c ****         //Updating indirect address here to save time setting it inside the interrupt(in order to r
ARM GAS  /tmp/cctZ3fzX.s 			page 266


 8403              		.loc 1 3197 21 is_stmt 0 view .LVU2214
 8404 0024 0A4B     		ldr	r3, .L588
 8405 0026 1B68     		ldr	r3, [r3]
3197:Core/Src/deca_device.c ****         //Updating indirect address here to save time setting it inside the interrupt(in order to r
 8406              		.loc 1 3197 33 view .LVU2215
 8407 0028 0122     		movs	r2, #1
 8408 002a DA73     		strb	r2, [r3, #15]
3200:Core/Src/deca_device.c ****         dwt_write32bitreg(ADDR_OFFSET_B_ID, BUF1_RX_FINFO & 0xffff);
 8409              		.loc 1 3200 9 is_stmt 1 view .LVU2216
 8410 002c 1822     		movs	r2, #24
 8411 002e 0021     		movs	r1, #0
 8412              	.LVL762:
3200:Core/Src/deca_device.c ****         dwt_write32bitreg(ADDR_OFFSET_B_ID, BUF1_RX_FINFO & 0xffff);
 8413              		.loc 1 3200 9 is_stmt 0 view .LVU2217
 8414 0030 0848     		ldr	r0, .L588+4
 8415              	.LVL763:
3200:Core/Src/deca_device.c ****         dwt_write32bitreg(ADDR_OFFSET_B_ID, BUF1_RX_FINFO & 0xffff);
 8416              		.loc 1 3200 9 view .LVU2218
 8417 0032 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 8418              	.LVL764:
3201:Core/Src/deca_device.c ****     }
 8419              		.loc 1 3201 9 is_stmt 1 view .LVU2219
 8420 0036 E822     		movs	r2, #232
 8421 0038 0021     		movs	r1, #0
 8422 003a 0748     		ldr	r0, .L588+8
 8423 003c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 8424              	.LVL765:
3196:Core/Src/deca_device.c ****         pdw3000local->dblbuffon = DBL_BUFF_ACCESS_BUFFER_0;    //the host will access RX_BUFFER_0 i
 8425              		.loc 1 3196 16 is_stmt 0 view .LVU2220
 8426 0040 6FF00802 		mvn	r2, #8
3192:Core/Src/deca_device.c **** 
 8427              		.loc 1 3192 15 view .LVU2221
 8428 0044 0023     		movs	r3, #0
 8429 0046 E5E7     		b	.L583
 8430              	.LVL766:
 8431              	.L584:
3215:Core/Src/deca_device.c ****     }
 8432              		.loc 1 3215 9 is_stmt 1 view .LVU2222
3215:Core/Src/deca_device.c ****     }
 8433              		.loc 1 3215 17 is_stmt 0 view .LVU2223
 8434 0048 22F48062 		bic	r2, r2, #1024
 8435              	.LVL767:
3215:Core/Src/deca_device.c ****     }
 8436              		.loc 1 3215 17 view .LVU2224
 8437 004c E5E7     		b	.L585
 8438              	.L589:
 8439 004e 00BF     		.align	2
 8440              	.L588:
 8441 0050 00000000 		.word	.LANCHOR2
 8442 0054 0C001F00 		.word	2031628
 8443 0058 10001F00 		.word	2031632
 8444              		.cfi_endproc
 8445              	.LFE92:
 8447              		.section	.text.dwt_setrxaftertxdelay,"ax",%progbits
 8448              		.align	1
 8449              		.global	dwt_setrxaftertxdelay
 8450              		.syntax unified
ARM GAS  /tmp/cctZ3fzX.s 			page 267


 8451              		.thumb
 8452              		.thumb_func
 8453              		.fpu fpv4-sp-d16
 8455              	dwt_setrxaftertxdelay:
 8456              	.LVL768:
 8457              	.LFB93:
3232:Core/Src/deca_device.c ****     uint32_t val = dwt_read32bitreg(ACK_RESP_ID); // Read ACK_RESP_T_ID register
 8458              		.loc 1 3232 1 is_stmt 1 view -0
 8459              		.cfi_startproc
 8460              		@ args = 0, pretend = 0, frame = 0
 8461              		@ frame_needed = 0, uses_anonymous_args = 0
3232:Core/Src/deca_device.c ****     uint32_t val = dwt_read32bitreg(ACK_RESP_ID); // Read ACK_RESP_T_ID register
 8462              		.loc 1 3232 1 is_stmt 0 view .LVU2226
 8463 0000 38B5     		push	{r3, r4, r5, lr}
 8464              		.cfi_def_cfa_offset 16
 8465              		.cfi_offset 3, -16
 8466              		.cfi_offset 4, -12
 8467              		.cfi_offset 5, -8
 8468              		.cfi_offset 14, -4
 8469 0002 0446     		mov	r4, r0
3233:Core/Src/deca_device.c **** 
 8470              		.loc 1 3233 5 is_stmt 1 view .LVU2227
3233:Core/Src/deca_device.c **** 
 8471              		.loc 1 3233 20 is_stmt 0 view .LVU2228
 8472 0004 074D     		ldr	r5, .L592
 8473 0006 0021     		movs	r1, #0
 8474 0008 2846     		mov	r0, r5
 8475              	.LVL769:
3233:Core/Src/deca_device.c **** 
 8476              		.loc 1 3233 20 view .LVU2229
 8477 000a FFF7FEFF 		bl	dwt_read32bitoffsetreg
 8478              	.LVL770:
3235:Core/Src/deca_device.c **** 
 8479              		.loc 1 3235 5 is_stmt 1 view .LVU2230
3235:Core/Src/deca_device.c **** 
 8480              		.loc 1 3235 9 is_stmt 0 view .LVU2231
 8481 000e 000D     		lsrs	r0, r0, #20
 8482              	.LVL771:
3235:Core/Src/deca_device.c **** 
 8483              		.loc 1 3235 9 view .LVU2232
 8484 0010 0005     		lsls	r0, r0, #20
 8485              	.LVL772:
3237:Core/Src/deca_device.c **** 
 8486              		.loc 1 3237 5 is_stmt 1 view .LVU2233
3237:Core/Src/deca_device.c **** 
 8487              		.loc 1 3237 25 is_stmt 0 view .LVU2234
 8488 0012 C4F31302 		ubfx	r2, r4, #0, #20
 8489              	.LVL773:
3239:Core/Src/deca_device.c **** }
 8490              		.loc 1 3239 5 is_stmt 1 view .LVU2235
 8491 0016 0243     		orrs	r2, r2, r0
 8492              	.LVL774:
3239:Core/Src/deca_device.c **** }
 8493              		.loc 1 3239 5 is_stmt 0 view .LVU2236
 8494 0018 0021     		movs	r1, #0
 8495 001a 2846     		mov	r0, r5
 8496 001c FFF7FEFF 		bl	dwt_write32bitoffsetreg
ARM GAS  /tmp/cctZ3fzX.s 			page 268


 8497              	.LVL775:
3240:Core/Src/deca_device.c **** 
 8498              		.loc 1 3240 1 view .LVU2237
 8499 0020 38BD     		pop	{r3, r4, r5, pc}
 8500              	.LVL776:
 8501              	.L593:
3240:Core/Src/deca_device.c **** 
 8502              		.loc 1 3240 1 view .LVU2238
 8503 0022 00BF     		.align	2
 8504              	.L592:
 8505 0024 08000100 		.word	65544
 8506              		.cfi_endproc
 8507              	.LFE93:
 8509              		.section	.text.dwt_setcallbacks,"ax",%progbits
 8510              		.align	1
 8511              		.global	dwt_setcallbacks
 8512              		.syntax unified
 8513              		.thumb
 8514              		.thumb_func
 8515              		.fpu fpv4-sp-d16
 8517              	dwt_setcallbacks:
 8518              	.LVL777:
 8519              	.LFB94:
3261:Core/Src/deca_device.c ****     pdw3000local->cbTxDone = cbTxDone;
 8520              		.loc 1 3261 1 is_stmt 1 view -0
 8521              		.cfi_startproc
 8522              		@ args = 8, pretend = 0, frame = 0
 8523              		@ frame_needed = 0, uses_anonymous_args = 0
 8524              		@ link register save eliminated.
3261:Core/Src/deca_device.c ****     pdw3000local->cbTxDone = cbTxDone;
 8525              		.loc 1 3261 1 is_stmt 0 view .LVU2240
 8526 0000 10B4     		push	{r4}
 8527              		.cfi_def_cfa_offset 4
 8528              		.cfi_offset 4, -4
3262:Core/Src/deca_device.c ****     pdw3000local->cbRxOk = cbRxOk;
 8529              		.loc 1 3262 5 is_stmt 1 view .LVU2241
3262:Core/Src/deca_device.c ****     pdw3000local->cbRxOk = cbRxOk;
 8530              		.loc 1 3262 17 is_stmt 0 view .LVU2242
 8531 0002 064C     		ldr	r4, .L596
 8532 0004 2468     		ldr	r4, [r4]
3262:Core/Src/deca_device.c ****     pdw3000local->cbRxOk = cbRxOk;
 8533              		.loc 1 3262 28 view .LVU2243
 8534 0006 A062     		str	r0, [r4, #40]
3263:Core/Src/deca_device.c ****     pdw3000local->cbRxTo = cbRxTo;
 8535              		.loc 1 3263 5 is_stmt 1 view .LVU2244
3263:Core/Src/deca_device.c ****     pdw3000local->cbRxTo = cbRxTo;
 8536              		.loc 1 3263 26 is_stmt 0 view .LVU2245
 8537 0008 E162     		str	r1, [r4, #44]
3264:Core/Src/deca_device.c ****     pdw3000local->cbRxErr = cbRxErr;
 8538              		.loc 1 3264 5 is_stmt 1 view .LVU2246
3264:Core/Src/deca_device.c ****     pdw3000local->cbRxErr = cbRxErr;
 8539              		.loc 1 3264 26 is_stmt 0 view .LVU2247
 8540 000a 2263     		str	r2, [r4, #48]
3265:Core/Src/deca_device.c ****     pdw3000local->cbSPIErr = cbSPIErr;
 8541              		.loc 1 3265 5 is_stmt 1 view .LVU2248
3265:Core/Src/deca_device.c ****     pdw3000local->cbSPIErr = cbSPIErr;
 8542              		.loc 1 3265 27 is_stmt 0 view .LVU2249
ARM GAS  /tmp/cctZ3fzX.s 			page 269


 8543 000c 6363     		str	r3, [r4, #52]
3266:Core/Src/deca_device.c ****     pdw3000local->cbSPIRdy = cbSPIRdy;
 8544              		.loc 1 3266 5 is_stmt 1 view .LVU2250
3266:Core/Src/deca_device.c ****     pdw3000local->cbSPIRdy = cbSPIRdy;
 8545              		.loc 1 3266 28 is_stmt 0 view .LVU2251
 8546 000e 019B     		ldr	r3, [sp, #4]
 8547              	.LVL778:
3266:Core/Src/deca_device.c ****     pdw3000local->cbSPIRdy = cbSPIRdy;
 8548              		.loc 1 3266 28 view .LVU2252
 8549 0010 A363     		str	r3, [r4, #56]
3267:Core/Src/deca_device.c **** }
 8550              		.loc 1 3267 5 is_stmt 1 view .LVU2253
3267:Core/Src/deca_device.c **** }
 8551              		.loc 1 3267 28 is_stmt 0 view .LVU2254
 8552 0012 029B     		ldr	r3, [sp, #8]
 8553 0014 E363     		str	r3, [r4, #60]
3268:Core/Src/deca_device.c **** 
 8554              		.loc 1 3268 1 view .LVU2255
 8555 0016 5DF8044B 		ldr	r4, [sp], #4
 8556              		.cfi_restore 4
 8557              		.cfi_def_cfa_offset 0
 8558              	.LVL779:
3268:Core/Src/deca_device.c **** 
 8559              		.loc 1 3268 1 view .LVU2256
 8560 001a 7047     		bx	lr
 8561              	.L597:
 8562              		.align	2
 8563              	.L596:
 8564 001c 00000000 		.word	.LANCHOR2
 8565              		.cfi_endproc
 8566              	.LFE94:
 8568              		.section	.text.dwt_checkirq,"ax",%progbits
 8569              		.align	1
 8570              		.global	dwt_checkirq
 8571              		.syntax unified
 8572              		.thumb
 8573              		.thumb_func
 8574              		.fpu fpv4-sp-d16
 8576              	dwt_checkirq:
 8577              	.LFB95:
3280:Core/Src/deca_device.c ****     /* Reading the lower byte only is enough for this operation */
 8578              		.loc 1 3280 1 is_stmt 1 view -0
 8579              		.cfi_startproc
 8580              		@ args = 0, pretend = 0, frame = 0
 8581              		@ frame_needed = 0, uses_anonymous_args = 0
 8582 0000 08B5     		push	{r3, lr}
 8583              		.cfi_def_cfa_offset 8
 8584              		.cfi_offset 3, -8
 8585              		.cfi_offset 14, -4
3282:Core/Src/deca_device.c **** }
 8586              		.loc 1 3282 5 view .LVU2258
3282:Core/Src/deca_device.c **** }
 8587              		.loc 1 3282 13 is_stmt 0 view .LVU2259
 8588 0002 0021     		movs	r1, #0
 8589 0004 4420     		movs	r0, #68
 8590 0006 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 8591              	.LVL780:
ARM GAS  /tmp/cctZ3fzX.s 			page 270


3283:Core/Src/deca_device.c **** 
 8592              		.loc 1 3283 1 view .LVU2260
 8593 000a 00F00100 		and	r0, r0, #1
 8594 000e 08BD     		pop	{r3, pc}
 8595              		.cfi_endproc
 8596              	.LFE95:
 8598              		.section	.text.dwt_checkidlerc,"ax",%progbits
 8599              		.align	1
 8600              		.global	dwt_checkidlerc
 8601              		.syntax unified
 8602              		.thumb
 8603              		.thumb_func
 8604              		.fpu fpv4-sp-d16
 8606              	dwt_checkidlerc:
 8607              	.LFB96:
3295:Core/Src/deca_device.c ****     //deca_sleep(2); /* wait 2 ms for DW IC to get into IDLE_RC state */
 8608              		.loc 1 3295 1 is_stmt 1 view -0
 8609              		.cfi_startproc
 8610              		@ args = 0, pretend = 0, frame = 0
 8611              		@ frame_needed = 0, uses_anonymous_args = 0
 8612 0000 08B5     		push	{r3, lr}
 8613              		.cfi_def_cfa_offset 8
 8614              		.cfi_offset 3, -8
 8615              		.cfi_offset 14, -4
3298:Core/Src/deca_device.c ****     return ( (reg & (SYS_STATUS_RCINIT_BIT_MASK)) == (SYS_STATUS_RCINIT_BIT_MASK));
 8616              		.loc 1 3298 5 view .LVU2262
3298:Core/Src/deca_device.c ****     return ( (reg & (SYS_STATUS_RCINIT_BIT_MASK)) == (SYS_STATUS_RCINIT_BIT_MASK));
 8617              		.loc 1 3298 31 is_stmt 0 view .LVU2263
 8618 0002 0221     		movs	r1, #2
 8619 0004 4420     		movs	r0, #68
 8620 0006 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 8621              	.LVL781:
3299:Core/Src/deca_device.c **** }
 8622              		.loc 1 3299 5 is_stmt 1 view .LVU2264
3300:Core/Src/deca_device.c **** 
 8623              		.loc 1 3300 1 is_stmt 0 view .LVU2265
 8624 000a C0F30020 		ubfx	r0, r0, #8, #1
 8625              	.LVL782:
3300:Core/Src/deca_device.c **** 
 8626              		.loc 1 3300 1 view .LVU2266
 8627 000e 08BD     		pop	{r3, pc}
 8628              		.cfi_endproc
 8629              	.LFE96:
 8631              		.section	.text.dwt_isr,"ax",%progbits
 8632              		.align	1
 8633              		.global	dwt_isr
 8634              		.syntax unified
 8635              		.thumb
 8636              		.thumb_func
 8637              		.fpu fpv4-sp-d16
 8639              	dwt_isr:
 8640              	.LFB97:
3329:Core/Src/deca_device.c **** 
 8641              		.loc 1 3329 1 is_stmt 1 view -0
 8642              		.cfi_startproc
 8643              		@ args = 0, pretend = 0, frame = 0
 8644              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 271


 8645 0000 70B5     		push	{r4, r5, r6, lr}
 8646              		.cfi_def_cfa_offset 16
 8647              		.cfi_offset 4, -16
 8648              		.cfi_offset 5, -12
 8649              		.cfi_offset 6, -8
 8650              		.cfi_offset 14, -4
3332:Core/Src/deca_device.c ****     uint32_t status = dwt_read32bitreg(SYS_STATUS_ID); // Read status register low 32bits
 8651              		.loc 1 3332 5 view .LVU2268
3332:Core/Src/deca_device.c ****     uint32_t status = dwt_read32bitreg(SYS_STATUS_ID); // Read status register low 32bits
 8652              		.loc 1 3332 21 is_stmt 0 view .LVU2269
 8653 0002 0021     		movs	r1, #0
 8654 0004 4FF4F810 		mov	r0, #2031616
 8655 0008 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 8656              	.LVL783:
 8657 000c 0446     		mov	r4, r0
 8658              	.LVL784:
3333:Core/Src/deca_device.c ****     pdw3000local->cbData.status = status;
 8659              		.loc 1 3333 5 is_stmt 1 view .LVU2270
3333:Core/Src/deca_device.c ****     pdw3000local->cbData.status = status;
 8660              		.loc 1 3333 23 is_stmt 0 view .LVU2271
 8661 000e 0021     		movs	r1, #0
 8662 0010 4420     		movs	r0, #68
 8663 0012 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 8664              	.LVL785:
 8665 0016 0546     		mov	r5, r0
 8666              	.LVL786:
3334:Core/Src/deca_device.c ****     if ((pdw3000local->stsconfig & DWT_STS_MODE_ND) == DWT_STS_MODE_ND) //cannot use FSTAT when in 
 8667              		.loc 1 3334 5 is_stmt 1 view .LVU2272
3334:Core/Src/deca_device.c ****     if ((pdw3000local->stsconfig & DWT_STS_MODE_ND) == DWT_STS_MODE_ND) //cannot use FSTAT when in 
 8668              		.loc 1 3334 17 is_stmt 0 view .LVU2273
 8669 0018 9F4B     		ldr	r3, .L640
 8670 001a 1E68     		ldr	r6, [r3]
3334:Core/Src/deca_device.c ****     if ((pdw3000local->stsconfig & DWT_STS_MODE_ND) == DWT_STS_MODE_ND) //cannot use FSTAT when in 
 8671              		.loc 1 3334 33 view .LVU2274
 8672 001c B061     		str	r0, [r6, #24]
3335:Core/Src/deca_device.c ****     {
 8673              		.loc 1 3335 5 is_stmt 1 view .LVU2275
3335:Core/Src/deca_device.c ****     {
 8674              		.loc 1 3335 22 is_stmt 0 view .LVU2276
 8675 001e 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
3335:Core/Src/deca_device.c ****     {
 8676              		.loc 1 3335 8 view .LVU2277
 8677 0020 03F00303 		and	r3, r3, #3
 8678 0024 032B     		cmp	r3, #3
 8679 0026 00F08280 		beq	.L630
 8680              	.L603:
3345:Core/Src/deca_device.c ****     {
 8681              		.loc 1 3345 5 is_stmt 1 view .LVU2278
3345:Core/Src/deca_device.c ****     {
 8682              		.loc 1 3345 7 is_stmt 0 view .LVU2279
 8683 002a 14F0800F 		tst	r4, #128
 8684 002e 40F08680 		bne	.L631
 8685              	.LVL787:
 8686              	.L604:
3378:Core/Src/deca_device.c ****     {
 8687              		.loc 1 3378 5 is_stmt 1 view .LVU2280
3378:Core/Src/deca_device.c ****     {
ARM GAS  /tmp/cctZ3fzX.s 			page 272


 8688              		.loc 1 3378 7 is_stmt 0 view .LVU2281
 8689 0032 14F0010F 		tst	r4, #1
 8690 0036 40F0B280 		bne	.L632
 8691              	.L608:
3394:Core/Src/deca_device.c ****     {
 8692              		.loc 1 3394 5 is_stmt 1 view .LVU2282
3394:Core/Src/deca_device.c ****     {
 8693              		.loc 1 3394 7 is_stmt 0 view .LVU2283
 8694 003a 14F0400F 		tst	r4, #64
 8695 003e 0BD0     		beq	.L609
3399:Core/Src/deca_device.c ****         {
 8696              		.loc 1 3399 9 is_stmt 1 view .LVU2284
3399:Core/Src/deca_device.c ****         {
 8697              		.loc 1 3399 24 is_stmt 0 view .LVU2285
 8698 0040 954B     		ldr	r3, .L640
 8699 0042 1868     		ldr	r0, [r3]
 8700 0044 C36B     		ldr	r3, [r0, #60]
3399:Core/Src/deca_device.c ****         {
 8701              		.loc 1 3399 11 view .LVU2286
 8702 0046 0BB1     		cbz	r3, .L610
3401:Core/Src/deca_device.c ****         }
 8703              		.loc 1 3401 13 is_stmt 1 view .LVU2287
 8704 0048 1830     		adds	r0, r0, #24
 8705 004a 9847     		blx	r3
 8706              	.LVL788:
 8707              	.L610:
3404:Core/Src/deca_device.c **** 
 8708              		.loc 1 3404 9 view .LVU2288
 8709 004c 4FF4C072 		mov	r2, #384
 8710 0050 0221     		movs	r1, #2
 8711 0052 4420     		movs	r0, #68
 8712 0054 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 8713              	.LVL789:
 8714              	.L609:
3410:Core/Src/deca_device.c ****     {
 8715              		.loc 1 3410 5 view .LVU2289
3410:Core/Src/deca_device.c ****     {
 8716              		.loc 1 3410 7 is_stmt 0 view .LVU2290
 8717 0058 14F0080F 		tst	r4, #8
 8718 005c 5ED0     		beq	.L611
 8719              	.LBB10:
3412:Core/Src/deca_device.c ****         
 8720              		.loc 1 3412 9 is_stmt 1 view .LVU2291
 8721              	.LVL790:
3414:Core/Src/deca_device.c **** 
 8722              		.loc 1 3414 9 view .LVU2292
3414:Core/Src/deca_device.c **** 
 8723              		.loc 1 3414 21 is_stmt 0 view .LVU2293
 8724 005e 8E4B     		ldr	r3, .L640
 8725 0060 1B68     		ldr	r3, [r3]
3414:Core/Src/deca_device.c **** 
 8726              		.loc 1 3414 39 view .LVU2294
 8727 0062 0022     		movs	r2, #0
 8728 0064 83F82020 		strb	r2, [r3, #32]
3416:Core/Src/deca_device.c ****         {
 8729              		.loc 1 3416 9 is_stmt 1 view .LVU2295
3416:Core/Src/deca_device.c ****         {
ARM GAS  /tmp/cctZ3fzX.s 			page 273


 8730              		.loc 1 3416 24 is_stmt 0 view .LVU2296
 8731 0068 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
3416:Core/Src/deca_device.c ****         {
 8732              		.loc 1 3416 11 view .LVU2297
 8733 006a 002B     		cmp	r3, #0
 8734 006c 40F0A580 		bne	.L633
 8735              	.L612:
3433:Core/Src/deca_device.c ****         //clear LDE error (as we do not want to go back into cbRxErr)
 8736              		.loc 1 3433 9 is_stmt 1 view .LVU2298
3433:Core/Src/deca_device.c ****         //clear LDE error (as we do not want to go back into cbRxErr)
 8737              		.loc 1 3433 21 is_stmt 0 view .LVU2299
 8738 0070 894B     		ldr	r3, .L640
 8739 0072 1B68     		ldr	r3, [r3]
3433:Core/Src/deca_device.c ****         //clear LDE error (as we do not want to go back into cbRxErr)
 8740              		.loc 1 3433 37 view .LVU2300
 8741 0074 9D61     		str	r5, [r3, #24]
3435:Core/Src/deca_device.c ****         {
 8742              		.loc 1 3435 9 is_stmt 1 view .LVU2301
3435:Core/Src/deca_device.c ****         {
 8743              		.loc 1 3435 12 is_stmt 0 view .LVU2302
 8744 0076 15F48022 		ands	r2, r5, #262144
 8745 007a 00F0BB80 		beq	.L616
3437:Core/Src/deca_device.c ****             cia_err = SYS_STATUS_CIAERR_BIT_MASK;
 8746              		.loc 1 3437 13 is_stmt 1 view .LVU2303
3437:Core/Src/deca_device.c ****             cia_err = SYS_STATUS_CIAERR_BIT_MASK;
 8747              		.loc 1 3437 43 is_stmt 0 view .LVU2304
 8748 007e 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 8749 0082 42F00802 		orr	r2, r2, #8
 8750 0086 83F82020 		strb	r2, [r3, #32]
3438:Core/Src/deca_device.c ****         }
 8751              		.loc 1 3438 13 is_stmt 1 view .LVU2305
 8752              	.LVL791:
3438:Core/Src/deca_device.c ****         }
 8753              		.loc 1 3438 21 is_stmt 0 view .LVU2306
 8754 008a 4FF48026 		mov	r6, #262144
 8755              	.LVL792:
 8756              	.L617:
3448:Core/Src/deca_device.c ****         {
 8757              		.loc 1 3448 9 is_stmt 1 view .LVU2307
3448:Core/Src/deca_device.c ****         {
 8758              		.loc 1 3448 12 is_stmt 0 view .LVU2308
 8759 008e 15F0805F 		tst	r5, #268435456
 8760 0092 07D0     		beq	.L618
3450:Core/Src/deca_device.c ****             cia_err |= SYS_STATUS_CPERR_BIT_MASK;
 8761              		.loc 1 3450 13 is_stmt 1 view .LVU2309
3450:Core/Src/deca_device.c ****             cia_err |= SYS_STATUS_CPERR_BIT_MASK;
 8762              		.loc 1 3450 43 is_stmt 0 view .LVU2310
 8763 0094 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 8764 0098 42F01002 		orr	r2, r2, #16
 8765 009c 83F82020 		strb	r2, [r3, #32]
3451:Core/Src/deca_device.c ****         }
 8766              		.loc 1 3451 13 is_stmt 1 view .LVU2311
3451:Core/Src/deca_device.c ****         }
 8767              		.loc 1 3451 21 is_stmt 0 view .LVU2312
 8768 00a0 46F08056 		orr	r6, r6, #268435456
 8769              	.LVL793:
 8770              	.L618:
ARM GAS  /tmp/cctZ3fzX.s 			page 274


3455:Core/Src/deca_device.c ****         {
 8771              		.loc 1 3455 9 is_stmt 1 view .LVU2313
3455:Core/Src/deca_device.c ****         {
 8772              		.loc 1 3455 12 is_stmt 0 view .LVU2314
 8773 00a4 15F4005F 		tst	r5, #8192
 8774 00a8 05D0     		beq	.L619
3455:Core/Src/deca_device.c ****         {
 8775              		.loc 1 3455 66 discriminator 1 view .LVU2315
 8776 00aa 5A7D     		ldrb	r2, [r3, #21]	@ zero_extendqisi2
3455:Core/Src/deca_device.c ****         {
 8777              		.loc 1 3455 49 discriminator 1 view .LVU2316
 8778 00ac 02F00302 		and	r2, r2, #3
 8779 00b0 032A     		cmp	r2, #3
 8780 00b2 00F0AB80 		beq	.L634
 8781              	.L619:
3465:Core/Src/deca_device.c ****         {
 8782              		.loc 1 3465 9 is_stmt 1 view .LVU2317
3465:Core/Src/deca_device.c ****         {
 8783              		.loc 1 3465 12 is_stmt 0 view .LVU2318
 8784 00b6 15F4804F 		tst	r5, #16384
 8785 00ba 1DD0     		beq	.L620
 8786              	.LBB11:
3467:Core/Src/deca_device.c **** 
 8787              		.loc 1 3467 13 is_stmt 1 view .LVU2319
3470:Core/Src/deca_device.c ****             {
 8788              		.loc 1 3470 13 view .LVU2320
3470:Core/Src/deca_device.c ****             {
 8789              		.loc 1 3470 33 is_stmt 0 view .LVU2321
 8790 00bc DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
3470:Core/Src/deca_device.c ****             {
 8791              		.loc 1 3470 13 view .LVU2322
 8792 00be 012B     		cmp	r3, #1
 8793 00c0 00F0AF80 		beq	.L621
 8794 00c4 032B     		cmp	r3, #3
 8795 00c6 40F0B780 		bne	.L622
3473:Core/Src/deca_device.c ****                 finfo16 = dwt_read16bitoffsetreg(INDIRECT_POINTER_B_ID, 0);
 8796              		.loc 1 3473 17 is_stmt 1 view .LVU2323
 8797 00ca F022     		movs	r2, #240
 8798 00cc 0021     		movs	r1, #0
 8799 00ce 7348     		ldr	r0, .L640+4
 8800 00d0 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 8801              	.LVL794:
3474:Core/Src/deca_device.c ****                 break;
 8802              		.loc 1 3474 17 view .LVU2324
3474:Core/Src/deca_device.c ****                 break;
 8803              		.loc 1 3474 27 is_stmt 0 view .LVU2325
 8804 00d4 0021     		movs	r1, #0
 8805 00d6 4FF4F010 		mov	r0, #1966080
 8806 00da FFF7FEFF 		bl	dwt_read16bitoffsetreg
 8807              	.LVL795:
3475:Core/Src/deca_device.c ****             case DBL_BUFF_ACCESS_BUFFER_0: //accessing frame info relating to the first buffer (RX_
 8808              		.loc 1 3475 17 is_stmt 1 view .LVU2326
 8809              	.L623:
3486:Core/Src/deca_device.c ****             {
 8810              		.loc 1 3486 13 view .LVU2327
3486:Core/Src/deca_device.c ****             {
 8811              		.loc 1 3486 28 is_stmt 0 view .LVU2328
ARM GAS  /tmp/cctZ3fzX.s 			page 275


 8812 00de 6E4B     		ldr	r3, .L640
 8813 00e0 1B68     		ldr	r3, [r3]
 8814 00e2 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
3486:Core/Src/deca_device.c ****             {
 8815              		.loc 1 3486 15 view .LVU2329
 8816 00e4 002A     		cmp	r2, #0
 8817 00e6 40F0AC80 		bne	.L624
3488:Core/Src/deca_device.c ****             }
 8818              		.loc 1 3488 17 is_stmt 1 view .LVU2330
3488:Core/Src/deca_device.c ****             }
 8819              		.loc 1 3488 59 is_stmt 0 view .LVU2331
 8820 00ea 00F07F02 		and	r2, r0, #127
3488:Core/Src/deca_device.c ****             }
 8821              		.loc 1 3488 49 view .LVU2332
 8822 00ee DA83     		strh	r2, [r3, #30]	@ movhi
 8823              	.L625:
3496:Core/Src/deca_device.c ****             {
 8824              		.loc 1 3496 13 is_stmt 1 view .LVU2333
3496:Core/Src/deca_device.c ****             {
 8825              		.loc 1 3496 15 is_stmt 0 view .LVU2334
 8826 00f0 10F4004F 		tst	r0, #32768
 8827 00f4 40F0A980 		bne	.L635
 8828              	.LVL796:
 8829              	.L620:
3496:Core/Src/deca_device.c ****             {
 8830              		.loc 1 3496 15 view .LVU2335
 8831              	.LBE11:
3503:Core/Src/deca_device.c **** 
 8832              		.loc 1 3503 9 is_stmt 1 view .LVU2336
 8833 00f8 46F4DE42 		orr	r2, r6, #28416
 8834 00fc 0021     		movs	r1, #0
 8835 00fe 4420     		movs	r0, #68
 8836 0100 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 8837              	.LVL797:
3506:Core/Src/deca_device.c ****         {
 8838              		.loc 1 3506 9 view .LVU2337
3506:Core/Src/deca_device.c ****         {
 8839              		.loc 1 3506 24 is_stmt 0 view .LVU2338
 8840 0104 644B     		ldr	r3, .L640
 8841 0106 1868     		ldr	r0, [r3]
 8842 0108 C36A     		ldr	r3, [r0, #44]
3506:Core/Src/deca_device.c ****         {
 8843              		.loc 1 3506 11 view .LVU2339
 8844 010a 0BB1     		cbz	r3, .L626
3508:Core/Src/deca_device.c ****         }
 8845              		.loc 1 3508 13 is_stmt 1 view .LVU2340
 8846 010c 1830     		adds	r0, r0, #24
 8847 010e 9847     		blx	r3
 8848              	.LVL798:
 8849              	.L626:
3511:Core/Src/deca_device.c ****         {
 8850              		.loc 1 3511 9 view .LVU2341
3511:Core/Src/deca_device.c ****         {
 8851              		.loc 1 3511 25 is_stmt 0 view .LVU2342
 8852 0110 614B     		ldr	r3, .L640
 8853 0112 1B68     		ldr	r3, [r3]
 8854 0114 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
ARM GAS  /tmp/cctZ3fzX.s 			page 276


3511:Core/Src/deca_device.c ****         {
 8855              		.loc 1 3511 12 view .LVU2343
 8856 0116 002B     		cmp	r3, #0
 8857 0118 40F09E80 		bne	.L636
 8858              	.LVL799:
 8859              	.L611:
3511:Core/Src/deca_device.c ****         {
 8860              		.loc 1 3511 12 view .LVU2344
 8861              	.LBE10:
3521:Core/Src/deca_device.c ****     {
 8862              		.loc 1 3521 5 is_stmt 1 view .LVU2345
3521:Core/Src/deca_device.c ****     {
 8863              		.loc 1 3521 7 is_stmt 0 view .LVU2346
 8864 011c 14F0100F 		tst	r4, #16
 8865 0120 40F09D80 		bne	.L637
 8866              	.L627:
3535:Core/Src/deca_device.c ****     {
 8867              		.loc 1 3535 5 is_stmt 1 view .LVU2347
3535:Core/Src/deca_device.c ****     {
 8868              		.loc 1 3535 7 is_stmt 0 view .LVU2348
 8869 0124 14F0200F 		tst	r4, #32
 8870 0128 40F0A780 		bne	.L638
 8871              	.L602:
3549:Core/Src/deca_device.c **** 
 8872              		.loc 1 3549 1 view .LVU2349
 8873 012c 70BD     		pop	{r4, r5, r6, pc}
 8874              	.LVL800:
 8875              	.L630:
3338:Core/Src/deca_device.c ****         {
 8876              		.loc 1 3338 9 is_stmt 1 view .LVU2350
3338:Core/Src/deca_device.c ****         {
 8877              		.loc 1 3338 12 is_stmt 0 view .LVU2351
 8878 012e 10F4005F 		tst	r0, #8192
 8879 0132 3FF47AAF 		beq	.L603
3340:Core/Src/deca_device.c ****         }
 8880              		.loc 1 3340 13 is_stmt 1 view .LVU2352
3340:Core/Src/deca_device.c ****         }
 8881              		.loc 1 3340 19 is_stmt 0 view .LVU2353
 8882 0136 44F00804 		orr	r4, r4, #8
 8883              	.LVL801:
3340:Core/Src/deca_device.c ****         }
 8884              		.loc 1 3340 19 view .LVU2354
 8885 013a E4B2     		uxtb	r4, r4
 8886              	.LVL802:
3340:Core/Src/deca_device.c ****         }
 8887              		.loc 1 3340 19 view .LVU2355
 8888 013c 75E7     		b	.L603
 8889              	.L631:
3347:Core/Src/deca_device.c **** 
 8890              		.loc 1 3347 9 is_stmt 1 view .LVU2356
3347:Core/Src/deca_device.c **** 
 8891              		.loc 1 3347 42 is_stmt 0 view .LVU2357
 8892 013e 0021     		movs	r1, #0
 8893 0140 4820     		movs	r0, #72
 8894              	.LVL803:
3347:Core/Src/deca_device.c **** 
 8895              		.loc 1 3347 42 view .LVU2358
ARM GAS  /tmp/cctZ3fzX.s 			page 277


 8896 0142 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 8897              	.LVL804:
3347:Core/Src/deca_device.c **** 
 8898              		.loc 1 3347 40 view .LVU2359
 8899 0146 B083     		strh	r0, [r6, #28]	@ movhi
3351:Core/Src/deca_device.c ****                 (pdw3000local->cbData.status_hi & (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATUS_HI_SP
 8900              		.loc 1 3351 9 is_stmt 1 view .LVU2360
3351:Core/Src/deca_device.c ****                 (pdw3000local->cbData.status_hi & (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATUS_HI_SP
 8901              		.loc 1 3351 25 is_stmt 0 view .LVU2361
 8902 0148 534B     		ldr	r3, .L640
 8903 014a 1B68     		ldr	r3, [r3]
 8904 014c 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
3351:Core/Src/deca_device.c ****                 (pdw3000local->cbData.status_hi & (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATUS_HI_SP
 8905              		.loc 1 3351 11 view .LVU2362
 8906 014e 1AB1     		cbz	r2, .L605
3351:Core/Src/deca_device.c ****                 (pdw3000local->cbData.status_hi & (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATUS_HI_SP
 8907              		.loc 1 3351 58 discriminator 1 view .LVU2363
 8908 0150 9A69     		ldr	r2, [r3, #24]
3351:Core/Src/deca_device.c ****                 (pdw3000local->cbData.status_hi & (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATUS_HI_SP
 8909              		.loc 1 3351 34 discriminator 1 view .LVU2364
 8910 0152 12F0040F 		tst	r2, #4
 8911 0156 03D1     		bne	.L606
 8912              	.L605:
3352:Core/Src/deca_device.c ****         {
 8913              		.loc 1 3352 38 discriminator 3 view .LVU2365
 8914 0158 9B8B     		ldrh	r3, [r3, #28]
3351:Core/Src/deca_device.c ****                 (pdw3000local->cbData.status_hi & (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATUS_HI_SP
 8915              		.loc 1 3351 98 discriminator 3 view .LVU2366
 8916 015a 13F4606F 		tst	r3, #3584
 8917 015e 10D0     		beq	.L607
 8918              	.L606:
3354:Core/Src/deca_device.c ****             dwt_write16bitoffsetreg(SYS_STATUS_HI_ID, 0, (SYS_STATUS_HI_SPIERR_BIT_MASK | SYS_STATU
 8919              		.loc 1 3354 13 is_stmt 1 view .LVU2367
 8920 0160 0422     		movs	r2, #4
 8921 0162 0021     		movs	r1, #0
 8922 0164 4420     		movs	r0, #68
 8923 0166 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 8924              	.LVL805:
3355:Core/Src/deca_device.c ****             // Call the corresponding callback if present
 8925              		.loc 1 3355 13 view .LVU2368
 8926 016a 4FF46062 		mov	r2, #3584
 8927 016e 0021     		movs	r1, #0
 8928 0170 4820     		movs	r0, #72
 8929 0172 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 8930              	.LVL806:
3357:Core/Src/deca_device.c ****             {
 8931              		.loc 1 3357 13 view .LVU2369
3357:Core/Src/deca_device.c ****             {
 8932              		.loc 1 3357 28 is_stmt 0 view .LVU2370
 8933 0176 484B     		ldr	r3, .L640
 8934 0178 1868     		ldr	r0, [r3]
 8935 017a 836B     		ldr	r3, [r0, #56]
3357:Core/Src/deca_device.c ****             {
 8936              		.loc 1 3357 15 view .LVU2371
 8937 017c 0BB1     		cbz	r3, .L607
3359:Core/Src/deca_device.c ****             }
 8938              		.loc 1 3359 17 is_stmt 1 view .LVU2372
ARM GAS  /tmp/cctZ3fzX.s 			page 278


 8939 017e 1830     		adds	r0, r0, #24
 8940 0180 9847     		blx	r3
 8941              	.LVL807:
 8942              	.L607:
3364:Core/Src/deca_device.c ****         {
 8943              		.loc 1 3364 9 view .LVU2373
3364:Core/Src/deca_device.c ****         {
 8944              		.loc 1 3364 24 is_stmt 0 view .LVU2374
 8945 0182 454B     		ldr	r3, .L640
 8946 0184 1B68     		ldr	r3, [r3]
3364:Core/Src/deca_device.c ****         {
 8947              		.loc 1 3364 32 view .LVU2375
 8948 0186 9B8B     		ldrh	r3, [r3, #28]
3364:Core/Src/deca_device.c ****         {
 8949              		.loc 1 3364 11 view .LVU2376
 8950 0188 13F4807F 		tst	r3, #256
 8951 018c 3FF451AF 		beq	.L604
3366:Core/Src/deca_device.c ****             // Call the corresponding callback if present
 8952              		.loc 1 3366 13 is_stmt 1 view .LVU2377
 8953 0190 4FF48072 		mov	r2, #256
 8954 0194 0021     		movs	r1, #0
 8955 0196 4820     		movs	r0, #72
 8956 0198 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 8957              	.LVL808:
 8958 019c 49E7     		b	.L604
 8959              	.L632:
3381:Core/Src/deca_device.c **** 
 8960              		.loc 1 3381 9 view .LVU2378
 8961 019e F822     		movs	r2, #248
 8962 01a0 0021     		movs	r1, #0
 8963 01a2 4420     		movs	r0, #68
 8964 01a4 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 8965              	.LVL809:
3384:Core/Src/deca_device.c ****         {
 8966              		.loc 1 3384 9 view .LVU2379
3384:Core/Src/deca_device.c ****         {
 8967              		.loc 1 3384 24 is_stmt 0 view .LVU2380
 8968 01a8 3B4B     		ldr	r3, .L640
 8969 01aa 1868     		ldr	r0, [r3]
 8970 01ac 836A     		ldr	r3, [r0, #40]
3384:Core/Src/deca_device.c ****         {
 8971              		.loc 1 3384 11 view .LVU2381
 8972 01ae 002B     		cmp	r3, #0
 8973 01b0 3FF443AF 		beq	.L608
3386:Core/Src/deca_device.c ****         }
 8974              		.loc 1 3386 13 is_stmt 1 view .LVU2382
 8975 01b4 1830     		adds	r0, r0, #24
 8976 01b6 9847     		blx	r3
 8977              	.LVL810:
 8978 01b8 3FE7     		b	.L608
 8979              	.LVL811:
 8980              	.L633:
 8981              	.LBB14:
 8982              	.LBB12:
3418:Core/Src/deca_device.c **** 
 8983              		.loc 1 3418 13 view .LVU2383
3418:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 279


 8984              		.loc 1 3418 32 is_stmt 0 view .LVU2384
 8985 01ba 1146     		mov	r1, r2
 8986 01bc 3748     		ldr	r0, .L640+4
 8987 01be FFF7FEFF 		bl	dwt_read8bitoffsetreg
 8988              	.LVL812:
3420:Core/Src/deca_device.c ****             {
 8989              		.loc 1 3420 13 is_stmt 1 view .LVU2385
3420:Core/Src/deca_device.c ****             {
 8990              		.loc 1 3420 29 is_stmt 0 view .LVU2386
 8991 01c2 354B     		ldr	r3, .L640
 8992 01c4 1B68     		ldr	r3, [r3]
 8993 01c6 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
3420:Core/Src/deca_device.c ****             {
 8994              		.loc 1 3420 16 view .LVU2387
 8995 01c8 032B     		cmp	r3, #3
 8996 01ca 10D0     		beq	.L639
 8997              	.L613:
3425:Core/Src/deca_device.c ****                 status |= SYS_STATUS_RXFCG_BIT_MASK;
 8998              		.loc 1 3425 13 is_stmt 1 view .LVU2388
3425:Core/Src/deca_device.c ****                 status |= SYS_STATUS_RXFCG_BIT_MASK;
 8999              		.loc 1 3425 16 is_stmt 0 view .LVU2389
 9000 01cc 10F0010F 		tst	r0, #1
 9001 01d0 01D0     		beq	.L614
3426:Core/Src/deca_device.c ****             if (statusDB & RDB_STATUS_RXFR0_BIT_MASK)
 9002              		.loc 1 3426 17 is_stmt 1 view .LVU2390
3426:Core/Src/deca_device.c ****             if (statusDB & RDB_STATUS_RXFR0_BIT_MASK)
 9003              		.loc 1 3426 24 is_stmt 0 view .LVU2391
 9004 01d2 45F48045 		orr	r5, r5, #16384
 9005              	.LVL813:
 9006              	.L614:
3427:Core/Src/deca_device.c ****                 status |= SYS_STATUS_RXFR_BIT_MASK;
 9007              		.loc 1 3427 13 is_stmt 1 view .LVU2392
3427:Core/Src/deca_device.c ****                 status |= SYS_STATUS_RXFR_BIT_MASK;
 9008              		.loc 1 3427 16 is_stmt 0 view .LVU2393
 9009 01d6 10F0020F 		tst	r0, #2
 9010 01da 01D0     		beq	.L615
3428:Core/Src/deca_device.c ****             if (statusDB & RDB_STATUS_CIADONE0_BIT_MASK)
 9011              		.loc 1 3428 17 is_stmt 1 view .LVU2394
3428:Core/Src/deca_device.c ****             if (statusDB & RDB_STATUS_CIADONE0_BIT_MASK)
 9012              		.loc 1 3428 24 is_stmt 0 view .LVU2395
 9013 01dc 45F40055 		orr	r5, r5, #8192
 9014              	.LVL814:
 9015              	.L615:
3429:Core/Src/deca_device.c ****                 status |= SYS_STATUS_CIADONE_BIT_MASK;
 9016              		.loc 1 3429 13 is_stmt 1 view .LVU2396
3429:Core/Src/deca_device.c ****                 status |= SYS_STATUS_CIADONE_BIT_MASK;
 9017              		.loc 1 3429 16 is_stmt 0 view .LVU2397
 9018 01e0 10F0040F 		tst	r0, #4
 9019 01e4 3FF444AF 		beq	.L612
3430:Core/Src/deca_device.c ****         }
 9020              		.loc 1 3430 17 is_stmt 1 view .LVU2398
3430:Core/Src/deca_device.c ****         }
 9021              		.loc 1 3430 24 is_stmt 0 view .LVU2399
 9022 01e8 45F48065 		orr	r5, r5, #1024
 9023              	.LVL815:
3430:Core/Src/deca_device.c ****         }
 9024              		.loc 1 3430 24 view .LVU2400
ARM GAS  /tmp/cctZ3fzX.s 			page 280


 9025 01ec 40E7     		b	.L612
 9026              	.L639:
3422:Core/Src/deca_device.c ****             }
 9027              		.loc 1 3422 17 is_stmt 1 view .LVU2401
3422:Core/Src/deca_device.c ****             }
 9028              		.loc 1 3422 26 is_stmt 0 view .LVU2402
 9029 01ee C0F30710 		ubfx	r0, r0, #4, #8
 9030              	.LVL816:
3422:Core/Src/deca_device.c ****             }
 9031              		.loc 1 3422 26 view .LVU2403
 9032 01f2 EBE7     		b	.L613
 9033              	.LVL817:
 9034              	.L616:
3422:Core/Src/deca_device.c ****             }
 9035              		.loc 1 3422 26 view .LVU2404
 9036              	.LBE12:
3442:Core/Src/deca_device.c ****             {
 9037              		.loc 1 3442 13 is_stmt 1 view .LVU2405
3442:Core/Src/deca_device.c ****             {
 9038              		.loc 1 3442 16 is_stmt 0 view .LVU2406
 9039 01f4 15F48066 		ands	r6, r5, #1024
 9040 01f8 3FF449AF 		beq	.L617
3444:Core/Src/deca_device.c ****             }
 9041              		.loc 1 3444 17 is_stmt 1 view .LVU2407
3444:Core/Src/deca_device.c ****             }
 9042              		.loc 1 3444 47 is_stmt 0 view .LVU2408
 9043 01fc 93F82010 		ldrb	r1, [r3, #32]	@ zero_extendqisi2
 9044 0200 41F00401 		orr	r1, r1, #4
 9045 0204 83F82010 		strb	r1, [r3, #32]
3412:Core/Src/deca_device.c ****         
 9046              		.loc 1 3412 18 view .LVU2409
 9047 0208 1646     		mov	r6, r2
 9048 020a 40E7     		b	.L617
 9049              	.LVL818:
 9050              	.L634:
3457:Core/Src/deca_device.c ****             pdw3000local->cbData.datalength = 0;
 9051              		.loc 1 3457 13 is_stmt 1 view .LVU2410
3457:Core/Src/deca_device.c ****             pdw3000local->cbData.datalength = 0;
 9052              		.loc 1 3457 43 is_stmt 0 view .LVU2411
 9053 020c 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 9054 0210 42F00202 		orr	r2, r2, #2
 9055 0214 83F82020 		strb	r2, [r3, #32]
3458:Core/Src/deca_device.c **** 
 9056              		.loc 1 3458 13 is_stmt 1 view .LVU2412
3458:Core/Src/deca_device.c **** 
 9057              		.loc 1 3458 45 is_stmt 0 view .LVU2413
 9058 0218 0022     		movs	r2, #0
 9059 021a DA83     		strh	r2, [r3, #30]	@ movhi
3460:Core/Src/deca_device.c **** 
 9060              		.loc 1 3460 13 is_stmt 1 view .LVU2414
3460:Core/Src/deca_device.c **** 
 9061              		.loc 1 3460 21 is_stmt 0 view .LVU2415
 9062 021c 46F40046 		orr	r6, r6, #32768
 9063              	.LVL819:
3460:Core/Src/deca_device.c **** 
 9064              		.loc 1 3460 21 view .LVU2416
 9065 0220 6AE7     		b	.L620
ARM GAS  /tmp/cctZ3fzX.s 			page 281


 9066              	.L621:
 9067              	.LBB13:
3477:Core/Src/deca_device.c ****                 finfo16 = dwt_read16bitoffsetreg(BUF0_RX_FINFO, 0);
 9068              		.loc 1 3477 17 is_stmt 1 view .LVU2417
 9069 0222 0F22     		movs	r2, #15
 9070 0224 0021     		movs	r1, #0
 9071 0226 1D48     		ldr	r0, .L640+4
 9072 0228 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 9073              	.LVL820:
3478:Core/Src/deca_device.c ****                 break;
 9074              		.loc 1 3478 17 view .LVU2418
3478:Core/Src/deca_device.c ****                 break;
 9075              		.loc 1 3478 27 is_stmt 0 view .LVU2419
 9076 022c 0021     		movs	r1, #0
 9077 022e 4FF4C010 		mov	r0, #1572864
 9078 0232 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 9079              	.LVL821:
3479:Core/Src/deca_device.c ****             default: //accessing frame info relating to the second buffer (RX_BUFFER_0) (single buf
 9080              		.loc 1 3479 17 is_stmt 1 view .LVU2420
 9081 0236 52E7     		b	.L623
 9082              	.LVL822:
 9083              	.L622:
3481:Core/Src/deca_device.c ****                 break;
 9084              		.loc 1 3481 17 view .LVU2421
3481:Core/Src/deca_device.c ****                 break;
 9085              		.loc 1 3481 27 is_stmt 0 view .LVU2422
 9086 0238 0021     		movs	r1, #0
 9087 023a 4C20     		movs	r0, #76
 9088 023c FFF7FEFF 		bl	dwt_read16bitoffsetreg
 9089              	.LVL823:
3482:Core/Src/deca_device.c ****             }
 9090              		.loc 1 3482 17 is_stmt 1 view .LVU2423
 9091 0240 4DE7     		b	.L623
 9092              	.L624:
3492:Core/Src/deca_device.c ****             }
 9093              		.loc 1 3492 17 view .LVU2424
3492:Core/Src/deca_device.c ****             }
 9094              		.loc 1 3492 59 is_stmt 0 view .LVU2425
 9095 0242 C0F30902 		ubfx	r2, r0, #0, #10
3492:Core/Src/deca_device.c ****             }
 9096              		.loc 1 3492 49 view .LVU2426
 9097 0246 DA83     		strh	r2, [r3, #30]	@ movhi
 9098 0248 52E7     		b	.L625
 9099              	.L635:
3498:Core/Src/deca_device.c ****             }
 9100              		.loc 1 3498 17 is_stmt 1 view .LVU2427
3498:Core/Src/deca_device.c ****             }
 9101              		.loc 1 3498 47 is_stmt 0 view .LVU2428
 9102 024a 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 9103 024e 42F00102 		orr	r2, r2, #1
 9104 0252 83F82020 		strb	r2, [r3, #32]
 9105 0256 4FE7     		b	.L620
 9106              	.LVL824:
 9107              	.L636:
3498:Core/Src/deca_device.c ****             }
 9108              		.loc 1 3498 47 view .LVU2429
 9109              	.LBE13:
ARM GAS  /tmp/cctZ3fzX.s 			page 282


3514:Core/Src/deca_device.c ****         }
 9110              		.loc 1 3514 13 is_stmt 1 view .LVU2430
 9111 0258 FFF7FEFF 		bl	dwt_signal_rx_buff_free
 9112              	.LVL825:
 9113 025c 5EE7     		b	.L611
 9114              	.LVL826:
 9115              	.L637:
3514:Core/Src/deca_device.c ****         }
 9116              		.loc 1 3514 13 is_stmt 0 view .LVU2431
 9117              	.LBE14:
3524:Core/Src/deca_device.c **** 
 9118              		.loc 1 3524 9 is_stmt 1 view .LVU2432
 9119 025e 104A     		ldr	r2, .L640+8
 9120 0260 0021     		movs	r1, #0
 9121 0262 4420     		movs	r0, #68
 9122 0264 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 9123              	.LVL827:
3527:Core/Src/deca_device.c ****         {
 9124              		.loc 1 3527 9 view .LVU2433
3527:Core/Src/deca_device.c ****         {
 9125              		.loc 1 3527 24 is_stmt 0 view .LVU2434
 9126 0268 0B4B     		ldr	r3, .L640
 9127 026a 1868     		ldr	r0, [r3]
 9128 026c 436B     		ldr	r3, [r0, #52]
3527:Core/Src/deca_device.c ****         {
 9129              		.loc 1 3527 11 view .LVU2435
 9130 026e 002B     		cmp	r3, #0
 9131 0270 3FF458AF 		beq	.L627
3529:Core/Src/deca_device.c ****         }
 9132              		.loc 1 3529 13 is_stmt 1 view .LVU2436
 9133 0274 1830     		adds	r0, r0, #24
 9134 0276 9847     		blx	r3
 9135              	.LVL828:
 9136 0278 54E7     		b	.L627
 9137              	.L638:
3538:Core/Src/deca_device.c **** 
 9138              		.loc 1 3538 9 view .LVU2437
 9139 027a 2222     		movs	r2, #34
 9140 027c 0221     		movs	r1, #2
 9141 027e 4420     		movs	r0, #68
 9142 0280 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 9143              	.LVL829:
3541:Core/Src/deca_device.c ****         {
 9144              		.loc 1 3541 9 view .LVU2438
3541:Core/Src/deca_device.c ****         {
 9145              		.loc 1 3541 24 is_stmt 0 view .LVU2439
 9146 0284 044B     		ldr	r3, .L640
 9147 0286 1868     		ldr	r0, [r3]
 9148 0288 036B     		ldr	r3, [r0, #48]
3541:Core/Src/deca_device.c ****         {
 9149              		.loc 1 3541 11 view .LVU2440
 9150 028a 002B     		cmp	r3, #0
 9151 028c 3FF44EAF 		beq	.L602
3543:Core/Src/deca_device.c ****         }
 9152              		.loc 1 3543 13 is_stmt 1 view .LVU2441
 9153 0290 1830     		adds	r0, r0, #24
 9154 0292 9847     		blx	r3
ARM GAS  /tmp/cctZ3fzX.s 			page 283


 9155              	.LVL830:
3549:Core/Src/deca_device.c **** 
 9156              		.loc 1 3549 1 is_stmt 0 view .LVU2442
 9157 0294 4AE7     		b	.L602
 9158              	.L641:
 9159 0296 00BF     		.align	2
 9160              	.L640:
 9161 0298 00000000 		.word	.LANCHOR2
 9162 029c 24000100 		.word	65572
 9163 02a0 00900524 		.word	604344320
 9164              		.cfi_endproc
 9165              	.LFE97:
 9167              		.section	.text.dwt_setleds,"ax",%progbits
 9168              		.align	1
 9169              		.global	dwt_setleds
 9170              		.syntax unified
 9171              		.thumb
 9172              		.thumb_func
 9173              		.fpu fpv4-sp-d16
 9175              	dwt_setleds:
 9176              	.LVL831:
 9177              	.LFB98:
3567:Core/Src/deca_device.c ****     uint32_t reg;
 9178              		.loc 1 3567 1 is_stmt 1 view -0
 9179              		.cfi_startproc
 9180              		@ args = 0, pretend = 0, frame = 0
 9181              		@ frame_needed = 0, uses_anonymous_args = 0
3567:Core/Src/deca_device.c ****     uint32_t reg;
 9182              		.loc 1 3567 1 is_stmt 0 view .LVU2444
 9183 0000 38B5     		push	{r3, r4, r5, lr}
 9184              		.cfi_def_cfa_offset 16
 9185              		.cfi_offset 3, -16
 9186              		.cfi_offset 4, -12
 9187              		.cfi_offset 5, -8
 9188              		.cfi_offset 14, -4
3568:Core/Src/deca_device.c ****     if (mode & DWT_LEDS_ENABLE)
 9189              		.loc 1 3568 5 is_stmt 1 view .LVU2445
3569:Core/Src/deca_device.c ****     {
 9190              		.loc 1 3569 5 view .LVU2446
3569:Core/Src/deca_device.c ****     {
 9191              		.loc 1 3569 8 is_stmt 0 view .LVU2447
 9192 0002 10F0010F 		tst	r0, #1
 9193 0006 25D0     		beq	.L643
 9194 0008 0446     		mov	r4, r0
3572:Core/Src/deca_device.c **** 
 9195              		.loc 1 3572 9 is_stmt 1 view .LVU2448
 9196 000a 4FF41073 		mov	r3, #576
 9197 000e 6FF47C62 		mvn	r2, #4032
 9198 0012 0021     		movs	r1, #0
 9199 0014 4FF4A020 		mov	r0, #327680
 9200              	.LVL832:
3572:Core/Src/deca_device.c **** 
 9201              		.loc 1 3572 9 is_stmt 0 view .LVU2449
 9202 0018 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 9203              	.LVL833:
3575:Core/Src/deca_device.c **** 
 9204              		.loc 1 3575 9 is_stmt 1 view .LVU2450
ARM GAS  /tmp/cctZ3fzX.s 			page 284


 9205 001c 4FF40403 		mov	r3, #8650752
 9206 0020 4FF0FF32 		mov	r2, #-1
 9207 0024 0021     		movs	r1, #0
 9208 0026 1348     		ldr	r0, .L648
 9209 0028 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 9210              	.LVL834:
3578:Core/Src/deca_device.c ****         // Make LEDs blink once if requested.
 9211              		.loc 1 3578 9 view .LVU2451
3580:Core/Src/deca_device.c ****         {
 9212              		.loc 1 3580 9 view .LVU2452
3580:Core/Src/deca_device.c ****         {
 9213              		.loc 1 3580 12 is_stmt 0 view .LVU2453
 9214 002c 14F00204 		ands	r4, r4, #2
 9215 0030 0ED1     		bne	.L646
3578:Core/Src/deca_device.c ****         // Make LEDs blink once if requested.
 9216              		.loc 1 3578 13 view .LVU2454
 9217 0032 4FF48875 		mov	r5, #272
 9218              	.L644:
 9219              	.LVL835:
3584:Core/Src/deca_device.c ****         // Clear force blink bits if needed.
 9220              		.loc 1 3584 9 is_stmt 1 view .LVU2455
 9221 0036 2A46     		mov	r2, r5
 9222 0038 0021     		movs	r1, #0
 9223 003a 0F48     		ldr	r0, .L648+4
 9224 003c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 9225              	.LVL836:
3586:Core/Src/deca_device.c ****         {
 9226              		.loc 1 3586 9 view .LVU2456
3586:Core/Src/deca_device.c ****         {
 9227              		.loc 1 3586 11 is_stmt 0 view .LVU2457
 9228 0040 BCB1     		cbz	r4, .L642
3588:Core/Src/deca_device.c ****             dwt_write32bitreg(LED_CTRL_ID, reg);
 9229              		.loc 1 3588 13 is_stmt 1 view .LVU2458
 9230              	.LVL837:
3589:Core/Src/deca_device.c ****         }
 9231              		.loc 1 3589 13 view .LVU2459
 9232 0042 05F48872 		and	r2, r5, #272
 9233 0046 0021     		movs	r1, #0
 9234 0048 0B48     		ldr	r0, .L648+4
 9235 004a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 9236              	.LVL838:
 9237 004e 10E0     		b	.L642
 9238              	.LVL839:
 9239              	.L646:
3582:Core/Src/deca_device.c ****         }
 9240              		.loc 1 3582 17 is_stmt 0 view .LVU2460
 9241 0050 0A4D     		ldr	r5, .L648+8
 9242 0052 F0E7     		b	.L644
 9243              	.LVL840:
 9244              	.L643:
3595:Core/Src/deca_device.c ****         dwt_and16bitoffsetreg(LED_CTRL_ID, 0, (uint16_t) ~LED_CTRL_BLINK_EN_BIT_MASK);
 9245              		.loc 1 3595 9 is_stmt 1 view .LVU2461
 9246 0054 0023     		movs	r3, #0
 9247 0056 6FF47C62 		mvn	r2, #4032
 9248 005a 1946     		mov	r1, r3
 9249 005c 4FF4A020 		mov	r0, #327680
 9250              	.LVL841:
ARM GAS  /tmp/cctZ3fzX.s 			page 285


3595:Core/Src/deca_device.c ****         dwt_and16bitoffsetreg(LED_CTRL_ID, 0, (uint16_t) ~LED_CTRL_BLINK_EN_BIT_MASK);
 9251              		.loc 1 3595 9 is_stmt 0 view .LVU2462
 9252 0060 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 9253              	.LVL842:
3596:Core/Src/deca_device.c ****     }
 9254              		.loc 1 3596 9 is_stmt 1 view .LVU2463
 9255 0064 0023     		movs	r3, #0
 9256 0066 4FF6FF62 		movw	r2, #65279
 9257 006a 1946     		mov	r1, r3
 9258 006c 0248     		ldr	r0, .L648+4
 9259 006e FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 9260              	.LVL843:
 9261              	.L642:
3599:Core/Src/deca_device.c **** 
 9262              		.loc 1 3599 1 is_stmt 0 view .LVU2464
 9263 0072 38BD     		pop	{r3, r4, r5, pc}
 9264              	.L649:
 9265              		.align	2
 9266              	.L648:
 9267 0074 04001100 		.word	1114116
 9268 0078 16001100 		.word	1114134
 9269 007c 10010F00 		.word	983312
 9270              		.cfi_endproc
 9271              	.LFE98:
 9273              		.section	.text.dwt_setreferencetrxtime,"ax",%progbits
 9274              		.align	1
 9275              		.global	dwt_setreferencetrxtime
 9276              		.syntax unified
 9277              		.thumb
 9278              		.thumb_func
 9279              		.fpu fpv4-sp-d16
 9281              	dwt_setreferencetrxtime:
 9282              	.LVL844:
 9283              	.LFB100:
3650:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DREF_TIME_ID, 0, reftime); // Note: bit 0 of this register is ignored
 9284              		.loc 1 3650 1 is_stmt 1 view -0
 9285              		.cfi_startproc
 9286              		@ args = 0, pretend = 0, frame = 0
 9287              		@ frame_needed = 0, uses_anonymous_args = 0
3650:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DREF_TIME_ID, 0, reftime); // Note: bit 0 of this register is ignored
 9288              		.loc 1 3650 1 is_stmt 0 view .LVU2466
 9289 0000 08B5     		push	{r3, lr}
 9290              		.cfi_def_cfa_offset 8
 9291              		.cfi_offset 3, -8
 9292              		.cfi_offset 14, -4
 9293 0002 0246     		mov	r2, r0
3651:Core/Src/deca_device.c **** } // end dwt_setreferencetrxtime()
 9294              		.loc 1 3651 5 is_stmt 1 view .LVU2467
 9295 0004 0021     		movs	r1, #0
 9296 0006 3020     		movs	r0, #48
 9297              	.LVL845:
3651:Core/Src/deca_device.c **** } // end dwt_setreferencetrxtime()
 9298              		.loc 1 3651 5 is_stmt 0 view .LVU2468
 9299 0008 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 9300              	.LVL846:
3652:Core/Src/deca_device.c **** 
 9301              		.loc 1 3652 1 view .LVU2469
ARM GAS  /tmp/cctZ3fzX.s 			page 286


 9302 000c 08BD     		pop	{r3, pc}
 9303              		.cfi_endproc
 9304              	.LFE100:
 9306              		.section	.text.dwt_setdelayedtrxtime,"ax",%progbits
 9307              		.align	1
 9308              		.global	dwt_setdelayedtrxtime
 9309              		.syntax unified
 9310              		.thumb
 9311              		.thumb_func
 9312              		.fpu fpv4-sp-d16
 9314              	dwt_setdelayedtrxtime:
 9315              	.LVL847:
 9316              	.LFB101:
3667:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DX_TIME_ID, 0, starttime); // Note: bit 0 of this register is ignored
 9317              		.loc 1 3667 1 is_stmt 1 view -0
 9318              		.cfi_startproc
 9319              		@ args = 0, pretend = 0, frame = 0
 9320              		@ frame_needed = 0, uses_anonymous_args = 0
3667:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(DX_TIME_ID, 0, starttime); // Note: bit 0 of this register is ignored
 9321              		.loc 1 3667 1 is_stmt 0 view .LVU2471
 9322 0000 08B5     		push	{r3, lr}
 9323              		.cfi_def_cfa_offset 8
 9324              		.cfi_offset 3, -8
 9325              		.cfi_offset 14, -4
 9326 0002 0246     		mov	r2, r0
3668:Core/Src/deca_device.c **** } // end dwt_setdelayedtrxtime()
 9327              		.loc 1 3668 5 is_stmt 1 view .LVU2472
 9328 0004 0021     		movs	r1, #0
 9329 0006 2C20     		movs	r0, #44
 9330              	.LVL848:
3668:Core/Src/deca_device.c **** } // end dwt_setdelayedtrxtime()
 9331              		.loc 1 3668 5 is_stmt 0 view .LVU2473
 9332 0008 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 9333              	.LVL849:
3669:Core/Src/deca_device.c **** 
 9334              		.loc 1 3669 1 view .LVU2474
 9335 000c 08BD     		pop	{r3, pc}
 9336              		.cfi_endproc
 9337              	.LFE101:
 9339              		.section	.text.dwt_starttx,"ax",%progbits
 9340              		.align	1
 9341              		.global	dwt_starttx
 9342              		.syntax unified
 9343              		.thumb
 9344              		.thumb_func
 9345              		.fpu fpv4-sp-d16
 9347              	dwt_starttx:
 9348              	.LVL850:
 9349              	.LFB102:
3689:Core/Src/deca_device.c ****     int retval = DWT_SUCCESS ;
 9350              		.loc 1 3689 1 is_stmt 1 view -0
 9351              		.cfi_startproc
 9352              		@ args = 0, pretend = 0, frame = 0
 9353              		@ frame_needed = 0, uses_anonymous_args = 0
3689:Core/Src/deca_device.c ****     int retval = DWT_SUCCESS ;
 9354              		.loc 1 3689 1 is_stmt 0 view .LVU2476
 9355 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cctZ3fzX.s 			page 287


 9356              		.cfi_def_cfa_offset 8
 9357              		.cfi_offset 3, -8
 9358              		.cfi_offset 14, -4
3690:Core/Src/deca_device.c ****     uint16_t checkTxOK = 0 ;
 9359              		.loc 1 3690 5 is_stmt 1 view .LVU2477
 9360              	.LVL851:
3691:Core/Src/deca_device.c ****     uint32_t sys_state;
 9361              		.loc 1 3691 5 view .LVU2478
3692:Core/Src/deca_device.c **** 
 9362              		.loc 1 3692 5 view .LVU2479
3694:Core/Src/deca_device.c ****             || (mode & DWT_START_TX_DLY_RS) || (mode & DWT_START_TX_DLY_TS))
 9363              		.loc 1 3694 5 view .LVU2480
3694:Core/Src/deca_device.c ****             || (mode & DWT_START_TX_DLY_RS) || (mode & DWT_START_TX_DLY_TS))
 9364              		.loc 1 3694 8 is_stmt 0 view .LVU2481
 9365 0002 10F01D0F 		tst	r0, #29
 9366 0006 6DD0     		beq	.L655
3697:Core/Src/deca_device.c ****         {
 9367              		.loc 1 3697 9 is_stmt 1 view .LVU2482
3697:Core/Src/deca_device.c ****         {
 9368              		.loc 1 3697 11 is_stmt 0 view .LVU2483
 9369 0008 10F0010F 		tst	r0, #1
 9370 000c 1FD0     		beq	.L656
3699:Core/Src/deca_device.c ****             {
 9371              		.loc 1 3699 13 is_stmt 1 view .LVU2484
3699:Core/Src/deca_device.c ****             {
 9372              		.loc 1 3699 15 is_stmt 0 view .LVU2485
 9373 000e 10F0020F 		tst	r0, #2
 9374 0012 15D0     		beq	.L657
3701:Core/Src/deca_device.c ****             }
 9375              		.loc 1 3701 17 is_stmt 1 view .LVU2486
 9376 0014 0023     		movs	r3, #0
 9377 0016 1A46     		mov	r2, r3
 9378 0018 1946     		mov	r1, r3
 9379 001a 0D20     		movs	r0, #13
 9380              	.LVL852:
3701:Core/Src/deca_device.c ****             }
 9381              		.loc 1 3701 17 is_stmt 0 view .LVU2487
 9382 001c FFF7FEFF 		bl	dwt_writetodevice
 9383              	.LVL853:
 9384              	.L658:
3742:Core/Src/deca_device.c ****         if ((checkTxOK & (SYS_STATUS_HPDWARN_BIT_MASK>>24)) == 0) // Transmit Delayed Send set over
 9385              		.loc 1 3742 9 is_stmt 1 view .LVU2488
3742:Core/Src/deca_device.c ****         if ((checkTxOK & (SYS_STATUS_HPDWARN_BIT_MASK>>24)) == 0) // Transmit Delayed Send set over
 9386              		.loc 1 3742 21 is_stmt 0 view .LVU2489
 9387 0020 0321     		movs	r1, #3
 9388 0022 4420     		movs	r0, #68
 9389 0024 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 9390              	.LVL854:
3743:Core/Src/deca_device.c ****         {
 9391              		.loc 1 3743 9 is_stmt 1 view .LVU2490
3743:Core/Src/deca_device.c ****         {
 9392              		.loc 1 3743 12 is_stmt 0 view .LVU2491
 9393 0028 10F0080F 		tst	r0, #8
 9394 002c 51D1     		bne	.L664
3745:Core/Src/deca_device.c ****             if (sys_state == DW_SYS_STATE_TXERR)
 9395              		.loc 1 3745 13 is_stmt 1 view .LVU2492
3745:Core/Src/deca_device.c ****             if (sys_state == DW_SYS_STATE_TXERR)
ARM GAS  /tmp/cctZ3fzX.s 			page 288


 9396              		.loc 1 3745 25 is_stmt 0 view .LVU2493
 9397 002e 0021     		movs	r1, #0
 9398 0030 4148     		ldr	r0, .L672
 9399              	.LVL855:
3745:Core/Src/deca_device.c ****             if (sys_state == DW_SYS_STATE_TXERR)
 9400              		.loc 1 3745 25 view .LVU2494
 9401 0032 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 9402              	.LVL856:
3746:Core/Src/deca_device.c ****             {
 9403              		.loc 1 3746 13 is_stmt 1 view .LVU2495
3746:Core/Src/deca_device.c ****             {
 9404              		.loc 1 3746 16 is_stmt 0 view .LVU2496
 9405 0036 B0F5502F 		cmp	r0, #851968
 9406 003a 41D0     		beq	.L671
3753:Core/Src/deca_device.c ****             }
 9407              		.loc 1 3753 24 view .LVU2497
 9408 003c 0020     		movs	r0, #0
 9409              	.LVL857:
3788:Core/Src/deca_device.c **** 
 9410              		.loc 1 3788 5 is_stmt 1 view .LVU2498
 9411              	.L654:
3790:Core/Src/deca_device.c **** 
 9412              		.loc 1 3790 1 is_stmt 0 view .LVU2499
 9413 003e 08BD     		pop	{r3, pc}
 9414              	.LVL858:
 9415              	.L657:
3705:Core/Src/deca_device.c ****             }
 9416              		.loc 1 3705 17 is_stmt 1 view .LVU2500
 9417 0040 0023     		movs	r3, #0
 9418 0042 1A46     		mov	r2, r3
 9419 0044 1946     		mov	r1, r3
 9420 0046 0320     		movs	r0, #3
 9421              	.LVL859:
3705:Core/Src/deca_device.c ****             }
 9422              		.loc 1 3705 17 is_stmt 0 view .LVU2501
 9423 0048 FFF7FEFF 		bl	dwt_writetodevice
 9424              	.LVL860:
 9425 004c E8E7     		b	.L658
 9426              	.LVL861:
 9427              	.L656:
3708:Core/Src/deca_device.c ****         {
 9428              		.loc 1 3708 14 is_stmt 1 view .LVU2502
3708:Core/Src/deca_device.c ****         {
 9429              		.loc 1 3708 17 is_stmt 0 view .LVU2503
 9430 004e 10F0080F 		tst	r0, #8
 9431 0052 10D0     		beq	.L659
3710:Core/Src/deca_device.c ****             {
 9432              		.loc 1 3710 13 is_stmt 1 view .LVU2504
3710:Core/Src/deca_device.c ****             {
 9433              		.loc 1 3710 15 is_stmt 0 view .LVU2505
 9434 0054 10F0020F 		tst	r0, #2
 9435 0058 06D0     		beq	.L660
3712:Core/Src/deca_device.c ****             }
 9436              		.loc 1 3712 17 is_stmt 1 view .LVU2506
 9437 005a 0023     		movs	r3, #0
 9438 005c 1A46     		mov	r2, r3
 9439 005e 1946     		mov	r1, r3
ARM GAS  /tmp/cctZ3fzX.s 			page 289


 9440 0060 0F20     		movs	r0, #15
 9441              	.LVL862:
3712:Core/Src/deca_device.c ****             }
 9442              		.loc 1 3712 17 is_stmt 0 view .LVU2507
 9443 0062 FFF7FEFF 		bl	dwt_writetodevice
 9444              	.LVL863:
 9445 0066 DBE7     		b	.L658
 9446              	.LVL864:
 9447              	.L660:
3716:Core/Src/deca_device.c ****             }
 9448              		.loc 1 3716 17 is_stmt 1 view .LVU2508
 9449 0068 0023     		movs	r3, #0
 9450 006a 1A46     		mov	r2, r3
 9451 006c 1946     		mov	r1, r3
 9452 006e 0720     		movs	r0, #7
 9453              	.LVL865:
3716:Core/Src/deca_device.c ****             }
 9454              		.loc 1 3716 17 is_stmt 0 view .LVU2509
 9455 0070 FFF7FEFF 		bl	dwt_writetodevice
 9456              	.LVL866:
 9457 0074 D4E7     		b	.L658
 9458              	.LVL867:
 9459              	.L659:
3719:Core/Src/deca_device.c ****         {
 9460              		.loc 1 3719 14 is_stmt 1 view .LVU2510
3719:Core/Src/deca_device.c ****         {
 9461              		.loc 1 3719 17 is_stmt 0 view .LVU2511
 9462 0076 10F0100F 		tst	r0, #16
 9463 007a 10D0     		beq	.L661
3721:Core/Src/deca_device.c ****             {
 9464              		.loc 1 3721 13 is_stmt 1 view .LVU2512
3721:Core/Src/deca_device.c ****             {
 9465              		.loc 1 3721 15 is_stmt 0 view .LVU2513
 9466 007c 10F0020F 		tst	r0, #2
 9467 0080 06D0     		beq	.L662
3723:Core/Src/deca_device.c ****             }
 9468              		.loc 1 3723 17 is_stmt 1 view .LVU2514
 9469 0082 0023     		movs	r3, #0
 9470 0084 1A46     		mov	r2, r3
 9471 0086 1946     		mov	r1, r3
 9472 0088 0E20     		movs	r0, #14
 9473              	.LVL868:
3723:Core/Src/deca_device.c ****             }
 9474              		.loc 1 3723 17 is_stmt 0 view .LVU2515
 9475 008a FFF7FEFF 		bl	dwt_writetodevice
 9476              	.LVL869:
 9477 008e C7E7     		b	.L658
 9478              	.LVL870:
 9479              	.L662:
3727:Core/Src/deca_device.c ****             }
 9480              		.loc 1 3727 17 is_stmt 1 view .LVU2516
 9481 0090 0023     		movs	r3, #0
 9482 0092 1A46     		mov	r2, r3
 9483 0094 1946     		mov	r1, r3
 9484 0096 0520     		movs	r0, #5
 9485              	.LVL871:
3727:Core/Src/deca_device.c ****             }
ARM GAS  /tmp/cctZ3fzX.s 			page 290


 9486              		.loc 1 3727 17 is_stmt 0 view .LVU2517
 9487 0098 FFF7FEFF 		bl	dwt_writetodevice
 9488              	.LVL872:
 9489 009c C0E7     		b	.L658
 9490              	.LVL873:
 9491              	.L661:
3732:Core/Src/deca_device.c ****             {
 9492              		.loc 1 3732 13 is_stmt 1 view .LVU2518
3732:Core/Src/deca_device.c ****             {
 9493              		.loc 1 3732 15 is_stmt 0 view .LVU2519
 9494 009e 10F0020F 		tst	r0, #2
 9495 00a2 06D0     		beq	.L663
3734:Core/Src/deca_device.c ****             }
 9496              		.loc 1 3734 17 is_stmt 1 view .LVU2520
 9497 00a4 0023     		movs	r3, #0
 9498 00a6 1A46     		mov	r2, r3
 9499 00a8 1946     		mov	r1, r3
 9500 00aa 1020     		movs	r0, #16
 9501              	.LVL874:
3734:Core/Src/deca_device.c ****             }
 9502              		.loc 1 3734 17 is_stmt 0 view .LVU2521
 9503 00ac FFF7FEFF 		bl	dwt_writetodevice
 9504              	.LVL875:
 9505 00b0 B6E7     		b	.L658
 9506              	.LVL876:
 9507              	.L663:
3738:Core/Src/deca_device.c ****             }
 9508              		.loc 1 3738 17 is_stmt 1 view .LVU2522
 9509 00b2 0023     		movs	r3, #0
 9510 00b4 1A46     		mov	r2, r3
 9511 00b6 1946     		mov	r1, r3
 9512 00b8 0920     		movs	r0, #9
 9513              	.LVL877:
3738:Core/Src/deca_device.c ****             }
 9514              		.loc 1 3738 17 is_stmt 0 view .LVU2523
 9515 00ba FFF7FEFF 		bl	dwt_writetodevice
 9516              	.LVL878:
 9517 00be AFE7     		b	.L658
 9518              	.LVL879:
 9519              	.L671:
3748:Core/Src/deca_device.c ****                 retval = DWT_ERROR ; // Failed !
 9520              		.loc 1 3748 17 is_stmt 1 view .LVU2524
 9521 00c0 0023     		movs	r3, #0
 9522 00c2 1A46     		mov	r2, r3
 9523 00c4 1946     		mov	r1, r3
 9524 00c6 1846     		mov	r0, r3
 9525              	.LVL880:
3748:Core/Src/deca_device.c ****                 retval = DWT_ERROR ; // Failed !
 9526              		.loc 1 3748 17 is_stmt 0 view .LVU2525
 9527 00c8 FFF7FEFF 		bl	dwt_writetodevice
 9528              	.LVL881:
3749:Core/Src/deca_device.c ****             }
 9529              		.loc 1 3749 17 is_stmt 1 view .LVU2526
3749:Core/Src/deca_device.c ****             }
 9530              		.loc 1 3749 24 is_stmt 0 view .LVU2527
 9531 00cc 4FF0FF30 		mov	r0, #-1
 9532 00d0 B5E7     		b	.L654
ARM GAS  /tmp/cctZ3fzX.s 			page 291


 9533              	.LVL882:
 9534              	.L664:
3758:Core/Src/deca_device.c ****             retval = DWT_ERROR ; // Failed !
 9535              		.loc 1 3758 13 is_stmt 1 view .LVU2528
 9536 00d2 0023     		movs	r3, #0
 9537 00d4 1A46     		mov	r2, r3
 9538 00d6 1946     		mov	r1, r3
 9539 00d8 1846     		mov	r0, r3
 9540              	.LVL883:
3758:Core/Src/deca_device.c ****             retval = DWT_ERROR ; // Failed !
 9541              		.loc 1 3758 13 is_stmt 0 view .LVU2529
 9542 00da FFF7FEFF 		bl	dwt_writetodevice
 9543              	.LVL884:
3759:Core/Src/deca_device.c **** 
 9544              		.loc 1 3759 13 is_stmt 1 view .LVU2530
3759:Core/Src/deca_device.c **** 
 9545              		.loc 1 3759 20 is_stmt 0 view .LVU2531
 9546 00de 4FF0FF30 		mov	r0, #-1
 9547 00e2 ACE7     		b	.L654
 9548              	.LVL885:
 9549              	.L655:
3765:Core/Src/deca_device.c ****     {
 9550              		.loc 1 3765 10 is_stmt 1 view .LVU2532
3765:Core/Src/deca_device.c ****     {
 9551              		.loc 1 3765 12 is_stmt 0 view .LVU2533
 9552 00e4 10F0200F 		tst	r0, #32
 9553 00e8 12D0     		beq	.L666
3767:Core/Src/deca_device.c ****         {
 9554              		.loc 1 3767 9 is_stmt 1 view .LVU2534
3767:Core/Src/deca_device.c ****         {
 9555              		.loc 1 3767 11 is_stmt 0 view .LVU2535
 9556 00ea 10F0020F 		tst	r0, #2
 9557 00ee 07D0     		beq	.L667
3769:Core/Src/deca_device.c ****         }
 9558              		.loc 1 3769 13 is_stmt 1 view .LVU2536
 9559 00f0 0023     		movs	r3, #0
 9560 00f2 1A46     		mov	r2, r3
 9561 00f4 1946     		mov	r1, r3
 9562 00f6 1120     		movs	r0, #17
 9563              	.LVL886:
3769:Core/Src/deca_device.c ****         }
 9564              		.loc 1 3769 13 is_stmt 0 view .LVU2537
 9565 00f8 FFF7FEFF 		bl	dwt_writetodevice
 9566              	.LVL887:
3690:Core/Src/deca_device.c ****     uint16_t checkTxOK = 0 ;
 9567              		.loc 1 3690 9 view .LVU2538
 9568 00fc 0020     		movs	r0, #0
 9569 00fe 9EE7     		b	.L654
 9570              	.LVL888:
 9571              	.L667:
3773:Core/Src/deca_device.c ****         }
 9572              		.loc 1 3773 13 is_stmt 1 view .LVU2539
 9573 0100 0023     		movs	r3, #0
 9574 0102 1A46     		mov	r2, r3
 9575 0104 1946     		mov	r1, r3
 9576 0106 0B20     		movs	r0, #11
 9577              	.LVL889:
ARM GAS  /tmp/cctZ3fzX.s 			page 292


3773:Core/Src/deca_device.c ****         }
 9578              		.loc 1 3773 13 is_stmt 0 view .LVU2540
 9579 0108 FFF7FEFF 		bl	dwt_writetodevice
 9580              	.LVL890:
3690:Core/Src/deca_device.c ****     uint16_t checkTxOK = 0 ;
 9581              		.loc 1 3690 9 view .LVU2541
 9582 010c 0020     		movs	r0, #0
 9583 010e 96E7     		b	.L654
 9584              	.LVL891:
 9585              	.L666:
3778:Core/Src/deca_device.c ****         {
 9586              		.loc 1 3778 9 is_stmt 1 view .LVU2542
3778:Core/Src/deca_device.c ****         {
 9587              		.loc 1 3778 11 is_stmt 0 view .LVU2543
 9588 0110 10F0020F 		tst	r0, #2
 9589 0114 07D0     		beq	.L668
3780:Core/Src/deca_device.c ****         }
 9590              		.loc 1 3780 13 is_stmt 1 view .LVU2544
 9591 0116 0023     		movs	r3, #0
 9592 0118 1A46     		mov	r2, r3
 9593 011a 1946     		mov	r1, r3
 9594 011c 0C20     		movs	r0, #12
 9595              	.LVL892:
3780:Core/Src/deca_device.c ****         }
 9596              		.loc 1 3780 13 is_stmt 0 view .LVU2545
 9597 011e FFF7FEFF 		bl	dwt_writetodevice
 9598              	.LVL893:
3690:Core/Src/deca_device.c ****     uint16_t checkTxOK = 0 ;
 9599              		.loc 1 3690 9 view .LVU2546
 9600 0122 0020     		movs	r0, #0
 9601 0124 8BE7     		b	.L654
 9602              	.LVL894:
 9603              	.L668:
3784:Core/Src/deca_device.c ****         }
 9604              		.loc 1 3784 13 is_stmt 1 view .LVU2547
 9605 0126 0023     		movs	r3, #0
 9606 0128 1A46     		mov	r2, r3
 9607 012a 1946     		mov	r1, r3
 9608 012c 0120     		movs	r0, #1
 9609              	.LVL895:
3784:Core/Src/deca_device.c ****         }
 9610              		.loc 1 3784 13 is_stmt 0 view .LVU2548
 9611 012e FFF7FEFF 		bl	dwt_writetodevice
 9612              	.LVL896:
3690:Core/Src/deca_device.c ****     uint16_t checkTxOK = 0 ;
 9613              		.loc 1 3690 9 view .LVU2549
 9614 0132 0020     		movs	r0, #0
 9615 0134 83E7     		b	.L654
 9616              	.L673:
 9617 0136 00BF     		.align	2
 9618              	.L672:
 9619 0138 30000F00 		.word	983088
 9620              		.cfi_endproc
 9621              	.LFE102:
 9623              		.section	.text.dwt_forcetrxoff,"ax",%progbits
 9624              		.align	1
 9625              		.global	dwt_forcetrxoff
ARM GAS  /tmp/cctZ3fzX.s 			page 293


 9626              		.syntax unified
 9627              		.thumb
 9628              		.thumb_func
 9629              		.fpu fpv4-sp-d16
 9631              	dwt_forcetrxoff:
 9632              	.LFB103:
3802:Core/Src/deca_device.c ****     decaIrqStatus_t stat ;
 9633              		.loc 1 3802 1 is_stmt 1 view -0
 9634              		.cfi_startproc
 9635              		@ args = 0, pretend = 0, frame = 0
 9636              		@ frame_needed = 0, uses_anonymous_args = 0
 9637 0000 10B5     		push	{r4, lr}
 9638              		.cfi_def_cfa_offset 8
 9639              		.cfi_offset 4, -8
 9640              		.cfi_offset 14, -4
3803:Core/Src/deca_device.c ****     // Need to beware of interrupts occurring in the middle of following command cycle
 9641              		.loc 1 3803 5 view .LVU2551
3808:Core/Src/deca_device.c **** 
 9642              		.loc 1 3808 5 view .LVU2552
3808:Core/Src/deca_device.c **** 
 9643              		.loc 1 3808 12 is_stmt 0 view .LVU2553
 9644 0002 FFF7FEFF 		bl	decamutexon
 9645              	.LVL897:
 9646 0006 0446     		mov	r4, r0
 9647              	.LVL898:
3810:Core/Src/deca_device.c **** 
 9648              		.loc 1 3810 5 is_stmt 1 view .LVU2554
 9649 0008 0023     		movs	r3, #0
 9650 000a 1A46     		mov	r2, r3
 9651 000c 1946     		mov	r1, r3
 9652 000e 1846     		mov	r0, r3
 9653              	.LVL899:
3810:Core/Src/deca_device.c **** 
 9654              		.loc 1 3810 5 is_stmt 0 view .LVU2555
 9655 0010 FFF7FEFF 		bl	dwt_writetodevice
 9656              	.LVL900:
3813:Core/Src/deca_device.c **** } // end deviceforcetrxoff()
 9657              		.loc 1 3813 5 is_stmt 1 view .LVU2556
 9658 0014 2046     		mov	r0, r4
 9659 0016 FFF7FEFF 		bl	decamutexoff
 9660              	.LVL901:
3814:Core/Src/deca_device.c **** 
 9661              		.loc 1 3814 1 is_stmt 0 view .LVU2557
 9662 001a 10BD     		pop	{r4, pc}
3814:Core/Src/deca_device.c **** 
 9663              		.loc 1 3814 1 view .LVU2558
 9664              		.cfi_endproc
 9665              	.LFE103:
 9667              		.section	.text.dwt_setsniffmode,"ax",%progbits
 9668              		.align	1
 9669              		.global	dwt_setsniffmode
 9670              		.syntax unified
 9671              		.thumb
 9672              		.thumb_func
 9673              		.fpu fpv4-sp-d16
 9675              	dwt_setsniffmode:
 9676              	.LVL902:
ARM GAS  /tmp/cctZ3fzX.s 			page 294


 9677              	.LFB104:
3834:Core/Src/deca_device.c ****     if (enable)
 9678              		.loc 1 3834 1 is_stmt 1 view -0
 9679              		.cfi_startproc
 9680              		@ args = 0, pretend = 0, frame = 0
 9681              		@ frame_needed = 0, uses_anonymous_args = 0
3834:Core/Src/deca_device.c ****     if (enable)
 9682              		.loc 1 3834 1 is_stmt 0 view .LVU2560
 9683 0000 08B5     		push	{r3, lr}
 9684              		.cfi_def_cfa_offset 8
 9685              		.cfi_offset 3, -8
 9686              		.cfi_offset 14, -4
3835:Core/Src/deca_device.c ****     {
 9687              		.loc 1 3835 5 is_stmt 1 view .LVU2561
3835:Core/Src/deca_device.c ****     {
 9688              		.loc 1 3835 8 is_stmt 0 view .LVU2562
 9689 0002 40B1     		cbz	r0, .L677
 9690              	.LBB15:
3838:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(RX_SNIFF_ID, 0, sniff_reg);
 9691              		.loc 1 3838 9 is_stmt 1 view .LVU2563
3838:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(RX_SNIFF_ID, 0, sniff_reg);
 9692              		.loc 1 3838 56 is_stmt 0 view .LVU2564
 9693 0004 41EA0221 		orr	r1, r1, r2, lsl #8
 9694              	.LVL903:
3838:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(RX_SNIFF_ID, 0, sniff_reg);
 9695              		.loc 1 3838 18 view .LVU2565
 9696 0008 21F0F002 		bic	r2, r1, #240
 9697              	.LVL904:
3839:Core/Src/deca_device.c ****     }
 9698              		.loc 1 3839 9 is_stmt 1 view .LVU2566
 9699 000c 0021     		movs	r1, #0
 9700 000e 0548     		ldr	r0, .L680
 9701              	.LVL905:
3839:Core/Src/deca_device.c ****     }
 9702              		.loc 1 3839 9 is_stmt 0 view .LVU2567
 9703 0010 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 9704              	.LVL906:
 9705              	.L676:
3839:Core/Src/deca_device.c ****     }
 9706              		.loc 1 3839 9 view .LVU2568
 9707              	.LBE15:
3846:Core/Src/deca_device.c **** 
 9708              		.loc 1 3846 1 view .LVU2569
 9709 0014 08BD     		pop	{r3, pc}
 9710              	.LVL907:
 9711              	.L677:
3844:Core/Src/deca_device.c ****     }
 9712              		.loc 1 3844 9 is_stmt 1 view .LVU2570
 9713 0016 0022     		movs	r2, #0
 9714              	.LVL908:
3844:Core/Src/deca_device.c ****     }
 9715              		.loc 1 3844 9 is_stmt 0 view .LVU2571
 9716 0018 1146     		mov	r1, r2
 9717              	.LVL909:
3844:Core/Src/deca_device.c ****     }
 9718              		.loc 1 3844 9 view .LVU2572
 9719 001a 0248     		ldr	r0, .L680
ARM GAS  /tmp/cctZ3fzX.s 			page 295


 9720              	.LVL910:
3844:Core/Src/deca_device.c ****     }
 9721              		.loc 1 3844 9 view .LVU2573
 9722 001c FFF7FEFF 		bl	dwt_write16bitoffsetreg
 9723              	.LVL911:
3846:Core/Src/deca_device.c **** 
 9724              		.loc 1 3846 1 view .LVU2574
 9725 0020 F8E7     		b	.L676
 9726              	.L681:
 9727 0022 00BF     		.align	2
 9728              	.L680:
 9729 0024 1A001100 		.word	1114138
 9730              		.cfi_endproc
 9731              	.LFE104:
 9733              		.section	.text.dwt_rxenable,"ax",%progbits
 9734              		.align	1
 9735              		.global	dwt_rxenable
 9736              		.syntax unified
 9737              		.thumb
 9738              		.thumb_func
 9739              		.fpu fpv4-sp-d16
 9741              	dwt_rxenable:
 9742              	.LVL912:
 9743              	.LFB105:
3871:Core/Src/deca_device.c ****     uint8_t temp1 ;
 9744              		.loc 1 3871 1 is_stmt 1 view -0
 9745              		.cfi_startproc
 9746              		@ args = 0, pretend = 0, frame = 0
 9747              		@ frame_needed = 0, uses_anonymous_args = 0
3871:Core/Src/deca_device.c ****     uint8_t temp1 ;
 9748              		.loc 1 3871 1 is_stmt 0 view .LVU2576
 9749 0000 10B5     		push	{r4, lr}
 9750              		.cfi_def_cfa_offset 8
 9751              		.cfi_offset 4, -8
 9752              		.cfi_offset 14, -4
3872:Core/Src/deca_device.c **** 
 9753              		.loc 1 3872 5 is_stmt 1 view .LVU2577
3874:Core/Src/deca_device.c ****     {
 9754              		.loc 1 3874 5 view .LVU2578
3874:Core/Src/deca_device.c ****     {
 9755              		.loc 1 3874 7 is_stmt 0 view .LVU2579
 9756 0002 0446     		mov	r4, r0
 9757 0004 70B1     		cbz	r0, .L695
3880:Core/Src/deca_device.c ****         {
 9758              		.loc 1 3880 9 is_stmt 1 view .LVU2580
3880:Core/Src/deca_device.c ****         {
 9759              		.loc 1 3880 21 is_stmt 0 view .LVU2581
 9760 0006 20F00203 		bic	r3, r0, #2
3880:Core/Src/deca_device.c ****         {
 9761              		.loc 1 3880 9 view .LVU2582
 9762 000a 013B     		subs	r3, r3, #1
 9763 000c 0F2B     		cmp	r3, #15
 9764 000e 48D8     		bhi	.L692
 9765 0010 DFE803F0 		tbb	[pc, r3]
 9766              	.L686:
 9767 0014 10       		.byte	(.L689-.L686)/2
 9768 0015 47       		.byte	(.L692-.L686)/2
ARM GAS  /tmp/cctZ3fzX.s 			page 296


 9769 0016 47       		.byte	(.L692-.L686)/2
 9770 0017 1F       		.byte	(.L688-.L686)/2
 9771 0018 47       		.byte	(.L692-.L686)/2
 9772 0019 47       		.byte	(.L692-.L686)/2
 9773 001a 47       		.byte	(.L692-.L686)/2
 9774 001b 26       		.byte	(.L687-.L686)/2
 9775 001c 47       		.byte	(.L692-.L686)/2
 9776 001d 47       		.byte	(.L692-.L686)/2
 9777 001e 47       		.byte	(.L692-.L686)/2
 9778 001f 47       		.byte	(.L692-.L686)/2
 9779 0020 47       		.byte	(.L692-.L686)/2
 9780 0021 47       		.byte	(.L692-.L686)/2
 9781 0022 47       		.byte	(.L692-.L686)/2
 9782 0023 2D       		.byte	(.L685-.L686)/2
 9783              		.p2align 1
 9784              	.L695:
3876:Core/Src/deca_device.c ****     }
 9785              		.loc 1 3876 9 is_stmt 1 view .LVU2583
 9786 0024 0023     		movs	r3, #0
 9787 0026 1A46     		mov	r2, r3
 9788 0028 1946     		mov	r1, r3
 9789 002a 0220     		movs	r0, #2
 9790              	.LVL913:
3876:Core/Src/deca_device.c ****     }
 9791              		.loc 1 3876 9 is_stmt 0 view .LVU2584
 9792 002c FFF7FEFF 		bl	dwt_writetodevice
 9793              	.LVL914:
3911:Core/Src/deca_device.c **** } // end dwt_rxenable()
 9794              		.loc 1 3911 12 view .LVU2585
 9795 0030 2046     		mov	r0, r4
 9796 0032 0DE0     		b	.L682
 9797              	.LVL915:
 9798              	.L689:
3883:Core/Src/deca_device.c ****             break;
 9799              		.loc 1 3883 17 is_stmt 1 view .LVU2586
 9800 0034 0023     		movs	r3, #0
 9801 0036 1A46     		mov	r2, r3
 9802 0038 1946     		mov	r1, r3
 9803 003a 0420     		movs	r0, #4
 9804              	.LVL916:
3883:Core/Src/deca_device.c ****             break;
 9805              		.loc 1 3883 17 is_stmt 0 view .LVU2587
 9806 003c FFF7FEFF 		bl	dwt_writetodevice
 9807              	.LVL917:
3884:Core/Src/deca_device.c ****             case DWT_START_RX_DLY_REF:
 9808              		.loc 1 3884 13 is_stmt 1 view .LVU2588
 9809              	.L690:
3898:Core/Src/deca_device.c ****         if ((temp1 & (SYS_STATUS_HPDWARN_BIT_MASK >> 24)) != 0) // if delay has passed do immediate
 9810              		.loc 1 3898 9 view .LVU2589
3898:Core/Src/deca_device.c ****         if ((temp1 & (SYS_STATUS_HPDWARN_BIT_MASK >> 24)) != 0) // if delay has passed do immediate
 9811              		.loc 1 3898 17 is_stmt 0 view .LVU2590
 9812 0040 0321     		movs	r1, #3
 9813 0042 4420     		movs	r0, #68
 9814 0044 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 9815              	.LVL918:
3899:Core/Src/deca_device.c ****         {
 9816              		.loc 1 3899 9 is_stmt 1 view .LVU2591
ARM GAS  /tmp/cctZ3fzX.s 			page 297


3899:Core/Src/deca_device.c ****         {
 9817              		.loc 1 3899 12 is_stmt 0 view .LVU2592
 9818 0048 10F0080F 		tst	r0, #8
 9819 004c 16D1     		bne	.L696
3911:Core/Src/deca_device.c **** } // end dwt_rxenable()
 9820              		.loc 1 3911 12 view .LVU2593
 9821 004e 0020     		movs	r0, #0
 9822              	.LVL919:
 9823              	.L682:
3912:Core/Src/deca_device.c **** 
 9824              		.loc 1 3912 1 view .LVU2594
 9825 0050 10BD     		pop	{r4, pc}
 9826              	.LVL920:
 9827              	.L688:
3886:Core/Src/deca_device.c ****             break;
 9828              		.loc 1 3886 17 is_stmt 1 view .LVU2595
 9829 0052 0023     		movs	r3, #0
 9830 0054 1A46     		mov	r2, r3
 9831 0056 1946     		mov	r1, r3
 9832 0058 0A20     		movs	r0, #10
 9833              	.LVL921:
3886:Core/Src/deca_device.c ****             break;
 9834              		.loc 1 3886 17 is_stmt 0 view .LVU2596
 9835 005a FFF7FEFF 		bl	dwt_writetodevice
 9836              	.LVL922:
3887:Core/Src/deca_device.c ****             case DWT_START_RX_DLY_RS:
 9837              		.loc 1 3887 13 is_stmt 1 view .LVU2597
 9838 005e EFE7     		b	.L690
 9839              	.LVL923:
 9840              	.L687:
3889:Core/Src/deca_device.c ****             break;
 9841              		.loc 1 3889 17 view .LVU2598
 9842 0060 0023     		movs	r3, #0
 9843 0062 1A46     		mov	r2, r3
 9844 0064 1946     		mov	r1, r3
 9845 0066 0820     		movs	r0, #8
 9846              	.LVL924:
3889:Core/Src/deca_device.c ****             break;
 9847              		.loc 1 3889 17 is_stmt 0 view .LVU2599
 9848 0068 FFF7FEFF 		bl	dwt_writetodevice
 9849              	.LVL925:
3890:Core/Src/deca_device.c ****             case DWT_START_RX_DLY_TS:
 9850              		.loc 1 3890 13 is_stmt 1 view .LVU2600
 9851 006c E8E7     		b	.L690
 9852              	.LVL926:
 9853              	.L685:
3892:Core/Src/deca_device.c ****             break;
 9854              		.loc 1 3892 17 view .LVU2601
 9855 006e 0023     		movs	r3, #0
 9856 0070 1A46     		mov	r2, r3
 9857 0072 1946     		mov	r1, r3
 9858 0074 0620     		movs	r0, #6
 9859              	.LVL927:
3892:Core/Src/deca_device.c ****             break;
 9860              		.loc 1 3892 17 is_stmt 0 view .LVU2602
 9861 0076 FFF7FEFF 		bl	dwt_writetodevice
 9862              	.LVL928:
ARM GAS  /tmp/cctZ3fzX.s 			page 298


3893:Core/Src/deca_device.c ****             default:
 9863              		.loc 1 3893 13 is_stmt 1 view .LVU2603
 9864 007a E1E7     		b	.L690
 9865              	.LVL929:
 9866              	.L696:
3901:Core/Src/deca_device.c **** 
 9867              		.loc 1 3901 13 view .LVU2604
 9868 007c 0023     		movs	r3, #0
 9869 007e 1A46     		mov	r2, r3
 9870 0080 1946     		mov	r1, r3
 9871 0082 1846     		mov	r0, r3
 9872              	.LVL930:
3901:Core/Src/deca_device.c **** 
 9873              		.loc 1 3901 13 is_stmt 0 view .LVU2605
 9874 0084 FFF7FEFF 		bl	dwt_writetodevice
 9875              	.LVL931:
3903:Core/Src/deca_device.c ****             {
 9876              		.loc 1 3903 13 is_stmt 1 view .LVU2606
3903:Core/Src/deca_device.c ****             {
 9877              		.loc 1 3903 15 is_stmt 0 view .LVU2607
 9878 0088 14F0020F 		tst	r4, #2
 9879 008c 02D0     		beq	.L697
 9880              	.L691:
3907:Core/Src/deca_device.c ****         }
 9881              		.loc 1 3907 13 is_stmt 1 view .LVU2608
3907:Core/Src/deca_device.c ****         }
 9882              		.loc 1 3907 20 is_stmt 0 view .LVU2609
 9883 008e 4FF0FF30 		mov	r0, #-1
 9884 0092 DDE7     		b	.L682
 9885              	.L697:
3905:Core/Src/deca_device.c ****             }
 9886              		.loc 1 3905 17 is_stmt 1 view .LVU2610
 9887 0094 0023     		movs	r3, #0
 9888 0096 1A46     		mov	r2, r3
 9889 0098 1946     		mov	r1, r3
 9890 009a 0220     		movs	r0, #2
 9891 009c FFF7FEFF 		bl	dwt_writetodevice
 9892              	.LVL932:
 9893 00a0 F5E7     		b	.L691
 9894              	.LVL933:
 9895              	.L692:
3880:Core/Src/deca_device.c ****         {
 9896              		.loc 1 3880 9 is_stmt 0 view .LVU2611
 9897 00a2 4FF0FF30 		mov	r0, #-1
 9898              	.LVL934:
3880:Core/Src/deca_device.c ****         {
 9899              		.loc 1 3880 9 view .LVU2612
 9900 00a6 D3E7     		b	.L682
 9901              		.cfi_endproc
 9902              	.LFE105:
 9904              		.section	.text.dwt_setrxtimeout,"ax",%progbits
 9905              		.align	1
 9906              		.global	dwt_setrxtimeout
 9907              		.syntax unified
 9908              		.thumb
 9909              		.thumb_func
 9910              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctZ3fzX.s 			page 299


 9912              	dwt_setrxtimeout:
 9913              	.LVL935:
 9914              	.LFB106:
3927:Core/Src/deca_device.c ****     if(time > 0)
 9915              		.loc 1 3927 1 is_stmt 1 view -0
 9916              		.cfi_startproc
 9917              		@ args = 0, pretend = 0, frame = 0
 9918              		@ frame_needed = 0, uses_anonymous_args = 0
3927:Core/Src/deca_device.c ****     if(time > 0)
 9919              		.loc 1 3927 1 is_stmt 0 view .LVU2614
 9920 0000 08B5     		push	{r3, lr}
 9921              		.cfi_def_cfa_offset 8
 9922              		.cfi_offset 3, -8
 9923              		.cfi_offset 14, -4
3928:Core/Src/deca_device.c ****     {
 9924              		.loc 1 3928 5 is_stmt 1 view .LVU2615
3928:Core/Src/deca_device.c ****     {
 9925              		.loc 1 3928 7 is_stmt 0 view .LVU2616
 9926 0002 68B1     		cbz	r0, .L699
 9927 0004 0246     		mov	r2, r0
3930:Core/Src/deca_device.c **** 
 9928              		.loc 1 3930 9 is_stmt 1 view .LVU2617
 9929 0006 0021     		movs	r1, #0
 9930 0008 3420     		movs	r0, #52
 9931              	.LVL936:
3930:Core/Src/deca_device.c **** 
 9932              		.loc 1 3930 9 is_stmt 0 view .LVU2618
 9933 000a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 9934              	.LVL937:
3932:Core/Src/deca_device.c ****     }
 9935              		.loc 1 3932 9 is_stmt 1 view .LVU2619
 9936 000e 4FF40073 		mov	r3, #512
 9937 0012 4FF6FF72 		movw	r2, #65535
 9938 0016 0021     		movs	r1, #0
 9939 0018 1020     		movs	r0, #16
 9940 001a FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 9941              	.LVL938:
 9942              	.L698:
3938:Core/Src/deca_device.c **** 
 9943              		.loc 1 3938 1 is_stmt 0 view .LVU2620
 9944 001e 08BD     		pop	{r3, pc}
 9945              	.LVL939:
 9946              	.L699:
3936:Core/Src/deca_device.c ****     }
 9947              		.loc 1 3936 9 is_stmt 1 view .LVU2621
 9948 0020 0023     		movs	r3, #0
 9949 0022 4FF6FF52 		movw	r2, #65023
 9950 0026 1946     		mov	r1, r3
 9951 0028 1020     		movs	r0, #16
 9952              	.LVL940:
3936:Core/Src/deca_device.c ****     }
 9953              		.loc 1 3936 9 is_stmt 0 view .LVU2622
 9954 002a FFF7FEFF 		bl	dwt_modify16bitoffsetreg
 9955              	.LVL941:
3938:Core/Src/deca_device.c **** 
 9956              		.loc 1 3938 1 view .LVU2623
 9957 002e F6E7     		b	.L698
ARM GAS  /tmp/cctZ3fzX.s 			page 300


 9958              		.cfi_endproc
 9959              	.LFE106:
 9961              		.section	.text.dwt_setpreambledetecttimeout,"ax",%progbits
 9962              		.align	1
 9963              		.global	dwt_setpreambledetecttimeout
 9964              		.syntax unified
 9965              		.thumb
 9966              		.thumb_func
 9967              		.fpu fpv4-sp-d16
 9969              	dwt_setpreambledetecttimeout:
 9970              	.LVL942:
 9971              	.LFB107:
3952:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(DTUNE1_ID, 0, timeout);
 9972              		.loc 1 3952 1 is_stmt 1 view -0
 9973              		.cfi_startproc
 9974              		@ args = 0, pretend = 0, frame = 0
 9975              		@ frame_needed = 0, uses_anonymous_args = 0
3952:Core/Src/deca_device.c ****     dwt_write16bitoffsetreg(DTUNE1_ID, 0, timeout);
 9976              		.loc 1 3952 1 is_stmt 0 view .LVU2625
 9977 0000 08B5     		push	{r3, lr}
 9978              		.cfi_def_cfa_offset 8
 9979              		.cfi_offset 3, -8
 9980              		.cfi_offset 14, -4
 9981 0002 0246     		mov	r2, r0
3953:Core/Src/deca_device.c **** }
 9982              		.loc 1 3953 5 is_stmt 1 view .LVU2626
 9983 0004 0021     		movs	r1, #0
 9984 0006 0248     		ldr	r0, .L704
 9985              	.LVL943:
3953:Core/Src/deca_device.c **** }
 9986              		.loc 1 3953 5 is_stmt 0 view .LVU2627
 9987 0008 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 9988              	.LVL944:
3954:Core/Src/deca_device.c **** 
 9989              		.loc 1 3954 1 view .LVU2628
 9990 000c 08BD     		pop	{r3, pc}
 9991              	.L705:
 9992 000e 00BF     		.align	2
 9993              	.L704:
 9994 0010 04000600 		.word	393220
 9995              		.cfi_endproc
 9996              	.LFE107:
 9998              		.section	.text.dwt_setinterrupt,"ax",%progbits
 9999              		.align	1
 10000              		.global	dwt_setinterrupt
 10001              		.syntax unified
 10002              		.thumb
 10003              		.thumb_func
 10004              		.fpu fpv4-sp-d16
 10006              	dwt_setinterrupt:
 10007              	.LVL945:
 10008              	.LFB108:
3973:Core/Src/deca_device.c ****     decaIrqStatus_t stat ;
 10009              		.loc 1 3973 1 is_stmt 1 view -0
 10010              		.cfi_startproc
 10011              		@ args = 0, pretend = 0, frame = 0
 10012              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 301


3973:Core/Src/deca_device.c ****     decaIrqStatus_t stat ;
 10013              		.loc 1 3973 1 is_stmt 0 view .LVU2630
 10014 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10015              		.cfi_def_cfa_offset 24
 10016              		.cfi_offset 3, -24
 10017              		.cfi_offset 4, -20
 10018              		.cfi_offset 5, -16
 10019              		.cfi_offset 6, -12
 10020              		.cfi_offset 7, -8
 10021              		.cfi_offset 14, -4
 10022 0002 0746     		mov	r7, r0
 10023 0004 0E46     		mov	r6, r1
 10024 0006 1446     		mov	r4, r2
3974:Core/Src/deca_device.c **** 
 10025              		.loc 1 3974 5 is_stmt 1 view .LVU2631
3977:Core/Src/deca_device.c **** 
 10026              		.loc 1 3977 5 view .LVU2632
3977:Core/Src/deca_device.c **** 
 10027              		.loc 1 3977 12 is_stmt 0 view .LVU2633
 10028 0008 FFF7FEFF 		bl	decamutexon
 10029              	.LVL946:
3977:Core/Src/deca_device.c **** 
 10030              		.loc 1 3977 12 view .LVU2634
 10031 000c 0546     		mov	r5, r0
 10032              	.LVL947:
3979:Core/Src/deca_device.c ****     {
 10033              		.loc 1 3979 5 is_stmt 1 view .LVU2635
3979:Core/Src/deca_device.c ****     {
 10034              		.loc 1 3979 7 is_stmt 0 view .LVU2636
 10035 000e 022C     		cmp	r4, #2
 10036 0010 11D0     		beq	.L711
3986:Core/Src/deca_device.c ****         {
 10037              		.loc 1 3986 9 is_stmt 1 view .LVU2637
3986:Core/Src/deca_device.c ****         {
 10038              		.loc 1 3986 11 is_stmt 0 view .LVU2638
 10039 0012 012C     		cmp	r4, #1
 10040 0014 1AD0     		beq	.L712
3993:Core/Src/deca_device.c ****             dwt_and32bitoffsetreg(SYS_ENABLE_HI_ID, 0, (uint32_t)(~bitmask_hi)); // Clear the bits
 10041              		.loc 1 3993 13 is_stmt 1 view .LVU2639
 10042 0016 0023     		movs	r3, #0
 10043 0018 FA43     		mvns	r2, r7
 10044 001a 1946     		mov	r1, r3
 10045 001c 3C20     		movs	r0, #60
 10046              	.LVL948:
3993:Core/Src/deca_device.c ****             dwt_and32bitoffsetreg(SYS_ENABLE_HI_ID, 0, (uint32_t)(~bitmask_hi)); // Clear the bits
 10047              		.loc 1 3993 13 is_stmt 0 view .LVU2640
 10048 001e FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 10049              	.LVL949:
3994:Core/Src/deca_device.c ****         }
 10050              		.loc 1 3994 13 is_stmt 1 view .LVU2641
 10051 0022 0023     		movs	r3, #0
 10052 0024 F243     		mvns	r2, r6
 10053 0026 1946     		mov	r1, r3
 10054 0028 4020     		movs	r0, #64
 10055 002a FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 10056              	.LVL950:
 10057              	.L708:
ARM GAS  /tmp/cctZ3fzX.s 			page 302


3998:Core/Src/deca_device.c **** }
 10058              		.loc 1 3998 5 view .LVU2642
 10059 002e 2846     		mov	r0, r5
 10060 0030 FFF7FEFF 		bl	decamutexoff
 10061              	.LVL951:
3999:Core/Src/deca_device.c **** 
 10062              		.loc 1 3999 1 is_stmt 0 view .LVU2643
 10063 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10064              	.LVL952:
 10065              	.L711:
3981:Core/Src/deca_device.c ****         dwt_write32bitreg(SYS_ENABLE_HI_ID, bitmask_hi); // New value
 10066              		.loc 1 3981 9 is_stmt 1 view .LVU2644
 10067 0036 3A46     		mov	r2, r7
 10068 0038 0021     		movs	r1, #0
 10069 003a 3C20     		movs	r0, #60
 10070              	.LVL953:
3981:Core/Src/deca_device.c ****         dwt_write32bitreg(SYS_ENABLE_HI_ID, bitmask_hi); // New value
 10071              		.loc 1 3981 9 is_stmt 0 view .LVU2645
 10072 003c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 10073              	.LVL954:
3982:Core/Src/deca_device.c ****     }
 10074              		.loc 1 3982 9 is_stmt 1 view .LVU2646
 10075 0040 3246     		mov	r2, r6
 10076 0042 0021     		movs	r1, #0
 10077 0044 4020     		movs	r0, #64
 10078 0046 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 10079              	.LVL955:
 10080 004a F0E7     		b	.L708
 10081              	.LVL956:
 10082              	.L712:
3988:Core/Src/deca_device.c ****             dwt_or32bitoffsetreg(SYS_ENABLE_HI_ID, 0, bitmask_hi); //Set the bits
 10083              		.loc 1 3988 13 view .LVU2647
 10084 004c 3B46     		mov	r3, r7
 10085 004e 4FF0FF32 		mov	r2, #-1
 10086 0052 0021     		movs	r1, #0
 10087 0054 3C20     		movs	r0, #60
 10088              	.LVL957:
3988:Core/Src/deca_device.c ****             dwt_or32bitoffsetreg(SYS_ENABLE_HI_ID, 0, bitmask_hi); //Set the bits
 10089              		.loc 1 3988 13 is_stmt 0 view .LVU2648
 10090 0056 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 10091              	.LVL958:
3989:Core/Src/deca_device.c ****         }
 10092              		.loc 1 3989 13 is_stmt 1 view .LVU2649
 10093 005a 3346     		mov	r3, r6
 10094 005c 4FF0FF32 		mov	r2, #-1
 10095 0060 0021     		movs	r1, #0
 10096 0062 4020     		movs	r0, #64
 10097 0064 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 10098              	.LVL959:
 10099 0068 E1E7     		b	.L708
 10100              		.cfi_endproc
 10101              	.LFE108:
 10103              		.section	.text.dwt_configeventcounters,"ax",%progbits
 10104              		.align	1
 10105              		.global	dwt_configeventcounters
 10106              		.syntax unified
 10107              		.thumb
ARM GAS  /tmp/cctZ3fzX.s 			page 303


 10108              		.thumb_func
 10109              		.fpu fpv4-sp-d16
 10111              	dwt_configeventcounters:
 10112              	.LVL960:
 10113              	.LFB109:
4011:Core/Src/deca_device.c ****     // Need to clear and disable, can't just clear
 10114              		.loc 1 4011 1 view -0
 10115              		.cfi_startproc
 10116              		@ args = 0, pretend = 0, frame = 0
 10117              		@ frame_needed = 0, uses_anonymous_args = 0
4011:Core/Src/deca_device.c ****     // Need to clear and disable, can't just clear
 10118              		.loc 1 4011 1 is_stmt 0 view .LVU2651
 10119 0000 10B5     		push	{r4, lr}
 10120              		.cfi_def_cfa_offset 8
 10121              		.cfi_offset 4, -8
 10122              		.cfi_offset 14, -4
 10123 0002 0446     		mov	r4, r0
4013:Core/Src/deca_device.c **** 
 10124              		.loc 1 4013 5 is_stmt 1 view .LVU2652
 10125 0004 0222     		movs	r2, #2
 10126 0006 0021     		movs	r1, #0
 10127 0008 4FF47020 		mov	r0, #983040
 10128              	.LVL961:
4013:Core/Src/deca_device.c **** 
 10129              		.loc 1 4013 5 is_stmt 0 view .LVU2653
 10130 000c FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10131              	.LVL962:
4015:Core/Src/deca_device.c ****     {
 10132              		.loc 1 4015 5 is_stmt 1 view .LVU2654
4015:Core/Src/deca_device.c ****     {
 10133              		.loc 1 4015 7 is_stmt 0 view .LVU2655
 10134 0010 04B9     		cbnz	r4, .L716
 10135              	.L713:
4019:Core/Src/deca_device.c **** 
 10136              		.loc 1 4019 1 view .LVU2656
 10137 0012 10BD     		pop	{r4, pc}
 10138              	.LVL963:
 10139              	.L716:
4017:Core/Src/deca_device.c ****     }
 10140              		.loc 1 4017 10 is_stmt 1 view .LVU2657
 10141 0014 0122     		movs	r2, #1
 10142 0016 0021     		movs	r1, #0
 10143 0018 4FF47020 		mov	r0, #983040
 10144 001c FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10145              	.LVL964:
4019:Core/Src/deca_device.c **** 
 10146              		.loc 1 4019 1 is_stmt 0 view .LVU2658
 10147 0020 F7E7     		b	.L713
 10148              		.cfi_endproc
 10149              	.LFE109:
 10151              		.section	.text.dwt_readeventcounters,"ax",%progbits
 10152              		.align	1
 10153              		.global	dwt_readeventcounters
 10154              		.syntax unified
 10155              		.thumb
 10156              		.thumb_func
 10157              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctZ3fzX.s 			page 304


 10159              	dwt_readeventcounters:
 10160              	.LVL965:
 10161              	.LFB110:
4032:Core/Src/deca_device.c ****     uint32_t temp;
 10162              		.loc 1 4032 1 is_stmt 1 view -0
 10163              		.cfi_startproc
 10164              		@ args = 0, pretend = 0, frame = 0
 10165              		@ frame_needed = 0, uses_anonymous_args = 0
4032:Core/Src/deca_device.c ****     uint32_t temp;
 10166              		.loc 1 4032 1 is_stmt 0 view .LVU2660
 10167 0000 10B5     		push	{r4, lr}
 10168              		.cfi_def_cfa_offset 8
 10169              		.cfi_offset 4, -8
 10170              		.cfi_offset 14, -4
 10171 0002 0446     		mov	r4, r0
4033:Core/Src/deca_device.c **** 
 10172              		.loc 1 4033 5 is_stmt 1 view .LVU2661
4035:Core/Src/deca_device.c ****     counters->PHE = temp & 0xFFF;
 10173              		.loc 1 4035 5 view .LVU2662
4035:Core/Src/deca_device.c ****     counters->PHE = temp & 0xFFF;
 10174              		.loc 1 4035 11 is_stmt 0 view .LVU2663
 10175 0004 0021     		movs	r1, #0
 10176 0006 1E48     		ldr	r0, .L719
 10177              	.LVL966:
4035:Core/Src/deca_device.c ****     counters->PHE = temp & 0xFFF;
 10178              		.loc 1 4035 11 view .LVU2664
 10179 0008 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10180              	.LVL967:
4036:Core/Src/deca_device.c ****     counters->RSL = (temp >> 16) & 0xFFF;
 10181              		.loc 1 4036 5 is_stmt 1 view .LVU2665
4036:Core/Src/deca_device.c ****     counters->RSL = (temp >> 16) & 0xFFF;
 10182              		.loc 1 4036 26 is_stmt 0 view .LVU2666
 10183 000c C0F30B03 		ubfx	r3, r0, #0, #12
4036:Core/Src/deca_device.c ****     counters->RSL = (temp >> 16) & 0xFFF;
 10184              		.loc 1 4036 19 view .LVU2667
 10185 0010 2380     		strh	r3, [r4]	@ movhi
4037:Core/Src/deca_device.c **** 
 10186              		.loc 1 4037 5 is_stmt 1 view .LVU2668
4037:Core/Src/deca_device.c **** 
 10187              		.loc 1 4037 34 is_stmt 0 view .LVU2669
 10188 0012 C0F30B40 		ubfx	r0, r0, #16, #12
 10189              	.LVL968:
4037:Core/Src/deca_device.c **** 
 10190              		.loc 1 4037 19 view .LVU2670
 10191 0016 6080     		strh	r0, [r4, #2]	@ movhi
4039:Core/Src/deca_device.c ****     counters->CRCG = temp & 0xFFF;
 10192              		.loc 1 4039 5 is_stmt 1 view .LVU2671
4039:Core/Src/deca_device.c ****     counters->CRCG = temp & 0xFFF;
 10193              		.loc 1 4039 12 is_stmt 0 view .LVU2672
 10194 0018 0021     		movs	r1, #0
 10195 001a 1A48     		ldr	r0, .L719+4
 10196 001c FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10197              	.LVL969:
4040:Core/Src/deca_device.c ****     counters->CRCB = (temp >> 16) & 0xFFF;
 10198              		.loc 1 4040 5 is_stmt 1 view .LVU2673
4040:Core/Src/deca_device.c ****     counters->CRCB = (temp >> 16) & 0xFFF;
 10199              		.loc 1 4040 27 is_stmt 0 view .LVU2674
ARM GAS  /tmp/cctZ3fzX.s 			page 305


 10200 0020 C0F30B03 		ubfx	r3, r0, #0, #12
4040:Core/Src/deca_device.c ****     counters->CRCB = (temp >> 16) & 0xFFF;
 10201              		.loc 1 4040 20 view .LVU2675
 10202 0024 A380     		strh	r3, [r4, #4]	@ movhi
4041:Core/Src/deca_device.c **** 
 10203              		.loc 1 4041 5 is_stmt 1 view .LVU2676
4041:Core/Src/deca_device.c **** 
 10204              		.loc 1 4041 35 is_stmt 0 view .LVU2677
 10205 0026 C0F30B40 		ubfx	r0, r0, #16, #12
 10206              	.LVL970:
4041:Core/Src/deca_device.c **** 
 10207              		.loc 1 4041 20 view .LVU2678
 10208 002a E080     		strh	r0, [r4, #6]	@ movhi
4043:Core/Src/deca_device.c ****     counters->ARFE = (uint8_t)temp;
 10209              		.loc 1 4043 5 is_stmt 1 view .LVU2679
4043:Core/Src/deca_device.c ****     counters->ARFE = (uint8_t)temp;
 10210              		.loc 1 4043 12 is_stmt 0 view .LVU2680
 10211 002c 0021     		movs	r1, #0
 10212 002e 1648     		ldr	r0, .L719+8
 10213 0030 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10214              	.LVL971:
4044:Core/Src/deca_device.c ****     counters->OVER = (uint8_t)(temp >> 16);
 10215              		.loc 1 4044 5 is_stmt 1 view .LVU2681
4044:Core/Src/deca_device.c ****     counters->OVER = (uint8_t)(temp >> 16);
 10216              		.loc 1 4044 20 is_stmt 0 view .LVU2682
 10217 0034 2072     		strb	r0, [r4, #8]
4045:Core/Src/deca_device.c **** 
 10218              		.loc 1 4045 5 is_stmt 1 view .LVU2683
4045:Core/Src/deca_device.c **** 
 10219              		.loc 1 4045 22 is_stmt 0 view .LVU2684
 10220 0036 C0F30740 		ubfx	r0, r0, #16, #8
 10221              	.LVL972:
4045:Core/Src/deca_device.c **** 
 10222              		.loc 1 4045 20 view .LVU2685
 10223 003a 6072     		strb	r0, [r4, #9]
4047:Core/Src/deca_device.c ****     counters->PTO = (temp >> 16) & 0xFFF;
 10224              		.loc 1 4047 5 is_stmt 1 view .LVU2686
4047:Core/Src/deca_device.c ****     counters->PTO = (temp >> 16) & 0xFFF;
 10225              		.loc 1 4047 12 is_stmt 0 view .LVU2687
 10226 003c 0021     		movs	r1, #0
 10227 003e 1348     		ldr	r0, .L719+12
 10228 0040 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10229              	.LVL973:
4048:Core/Src/deca_device.c ****     counters->SFDTO = temp & 0xFFF;
 10230              		.loc 1 4048 5 is_stmt 1 view .LVU2688
4048:Core/Src/deca_device.c ****     counters->SFDTO = temp & 0xFFF;
 10231              		.loc 1 4048 34 is_stmt 0 view .LVU2689
 10232 0044 C0F30B43 		ubfx	r3, r0, #16, #12
4048:Core/Src/deca_device.c ****     counters->SFDTO = temp & 0xFFF;
 10233              		.loc 1 4048 19 view .LVU2690
 10234 0048 A381     		strh	r3, [r4, #12]	@ movhi
4049:Core/Src/deca_device.c **** 
 10235              		.loc 1 4049 5 is_stmt 1 view .LVU2691
4049:Core/Src/deca_device.c **** 
 10236              		.loc 1 4049 28 is_stmt 0 view .LVU2692
 10237 004a C0F30B00 		ubfx	r0, r0, #0, #12
 10238              	.LVL974:
ARM GAS  /tmp/cctZ3fzX.s 			page 306


4049:Core/Src/deca_device.c **** 
 10239              		.loc 1 4049 21 view .LVU2693
 10240 004e 6081     		strh	r0, [r4, #10]	@ movhi
4051:Core/Src/deca_device.c ****     counters->TXF = (temp >> 16) & 0xFFF;
 10241              		.loc 1 4051 5 is_stmt 1 view .LVU2694
4051:Core/Src/deca_device.c ****     counters->TXF = (temp >> 16) & 0xFFF;
 10242              		.loc 1 4051 12 is_stmt 0 view .LVU2695
 10243 0050 0021     		movs	r1, #0
 10244 0052 0F48     		ldr	r0, .L719+16
 10245 0054 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10246              	.LVL975:
4052:Core/Src/deca_device.c ****     counters->RTO = (uint8_t)temp;
 10247              		.loc 1 4052 5 is_stmt 1 view .LVU2696
4052:Core/Src/deca_device.c ****     counters->RTO = (uint8_t)temp;
 10248              		.loc 1 4052 34 is_stmt 0 view .LVU2697
 10249 0058 C0F30B43 		ubfx	r3, r0, #16, #12
4052:Core/Src/deca_device.c ****     counters->RTO = (uint8_t)temp;
 10250              		.loc 1 4052 19 view .LVU2698
 10251 005c 2382     		strh	r3, [r4, #16]	@ movhi
4053:Core/Src/deca_device.c **** 
 10252              		.loc 1 4053 5 is_stmt 1 view .LVU2699
4053:Core/Src/deca_device.c **** 
 10253              		.loc 1 4053 19 is_stmt 0 view .LVU2700
 10254 005e A073     		strb	r0, [r4, #14]
4055:Core/Src/deca_device.c ****     counters->HPW = (uint8_t)temp;
 10255              		.loc 1 4055 5 is_stmt 1 view .LVU2701
4055:Core/Src/deca_device.c ****     counters->HPW = (uint8_t)temp;
 10256              		.loc 1 4055 12 is_stmt 0 view .LVU2702
 10257 0060 0021     		movs	r1, #0
 10258 0062 0C48     		ldr	r0, .L719+20
 10259              	.LVL976:
4055:Core/Src/deca_device.c ****     counters->HPW = (uint8_t)temp;
 10260              		.loc 1 4055 12 view .LVU2703
 10261 0064 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10262              	.LVL977:
4056:Core/Src/deca_device.c ****     counters->CRCE = (uint8_t)(temp >> 16);     // SPI CRC errors (23-16) warning events
 10263              		.loc 1 4056 5 is_stmt 1 view .LVU2704
4056:Core/Src/deca_device.c ****     counters->CRCE = (uint8_t)(temp >> 16);     // SPI CRC errors (23-16) warning events
 10264              		.loc 1 4056 19 is_stmt 0 view .LVU2705
 10265 0068 A074     		strb	r0, [r4, #18]
4057:Core/Src/deca_device.c **** 
 10266              		.loc 1 4057 5 is_stmt 1 view .LVU2706
4057:Core/Src/deca_device.c **** 
 10267              		.loc 1 4057 22 is_stmt 0 view .LVU2707
 10268 006a C0F30740 		ubfx	r0, r0, #16, #8
 10269              	.LVL978:
4057:Core/Src/deca_device.c **** 
 10270              		.loc 1 4057 20 view .LVU2708
 10271 006e E074     		strb	r0, [r4, #19]
4059:Core/Src/deca_device.c ****     counters->PREJ = temp & 0xFFF;
 10272              		.loc 1 4059 5 is_stmt 1 view .LVU2709
4059:Core/Src/deca_device.c ****     counters->PREJ = temp & 0xFFF;
 10273              		.loc 1 4059 12 is_stmt 0 view .LVU2710
 10274 0070 0021     		movs	r1, #0
 10275 0072 0948     		ldr	r0, .L719+24
 10276 0074 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10277              	.LVL979:
ARM GAS  /tmp/cctZ3fzX.s 			page 307


4060:Core/Src/deca_device.c **** 
 10278              		.loc 1 4060 5 is_stmt 1 view .LVU2711
4060:Core/Src/deca_device.c **** 
 10279              		.loc 1 4060 27 is_stmt 0 view .LVU2712
 10280 0078 C0F30B00 		ubfx	r0, r0, #0, #12
 10281              	.LVL980:
4060:Core/Src/deca_device.c **** 
 10282              		.loc 1 4060 20 view .LVU2713
 10283 007c A082     		strh	r0, [r4, #20]	@ movhi
4063:Core/Src/deca_device.c **** 
 10284              		.loc 1 4063 1 view .LVU2714
 10285 007e 10BD     		pop	{r4, pc}
 10286              	.LVL981:
 10287              	.L720:
4063:Core/Src/deca_device.c **** 
 10288              		.loc 1 4063 1 view .LVU2715
 10289              		.align	2
 10290              	.L719:
 10291 0080 04000F00 		.word	983044
 10292 0084 08000F00 		.word	983048
 10293 0088 0C000F00 		.word	983052
 10294 008c 10000F00 		.word	983056
 10295 0090 14000F00 		.word	983060
 10296 0094 18000F00 		.word	983064
 10297 0098 1C000F00 		.word	983068
 10298              		.cfi_endproc
 10299              	.LFE110:
 10301              		.section	.text.dwt_softreset,"ax",%progbits
 10302              		.align	1
 10303              		.global	dwt_softreset
 10304              		.syntax unified
 10305              		.thumb
 10306              		.thumb_func
 10307              		.fpu fpv4-sp-d16
 10309              	dwt_softreset:
 10310              	.LFB111:
4077:Core/Src/deca_device.c ****     //clear any AON configurations (this will leave the device at FOSC/4, thus we need low SPI rate
 10311              		.loc 1 4077 1 is_stmt 1 view -0
 10312              		.cfi_startproc
 10313              		@ args = 0, pretend = 0, frame = 0
 10314              		@ frame_needed = 0, uses_anonymous_args = 0
 10315 0000 08B5     		push	{r3, lr}
 10316              		.cfi_def_cfa_offset 8
 10317              		.cfi_offset 3, -8
 10318              		.cfi_offset 14, -4
4079:Core/Src/deca_device.c **** 
 10319              		.loc 1 4079 5 view .LVU2717
 10320 0002 FFF7FEFF 		bl	dwt_clearaonconfig
 10321              	.LVL982:
4082:Core/Src/deca_device.c **** 
 10322              		.loc 1 4082 5 view .LVU2718
 10323 0006 0120     		movs	r0, #1
 10324 0008 FFF7FEFF 		bl	deca_sleep
 10325              	.LVL983:
4085:Core/Src/deca_device.c **** 
 10326              		.loc 1 4085 5 view .LVU2719
 10327 000c 0323     		movs	r3, #3
ARM GAS  /tmp/cctZ3fzX.s 			page 308


 10328 000e FF22     		movs	r2, #255
 10329 0010 0021     		movs	r1, #0
 10330 0012 0948     		ldr	r0, .L723
 10331 0014 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 10332              	.LVL984:
4088:Core/Src/deca_device.c **** 
 10333              		.loc 1 4088 5 view .LVU2720
 10334 0018 0022     		movs	r2, #0
 10335 001a 1146     		mov	r1, r2
 10336 001c 4FF48810 		mov	r0, #1114112
 10337 0020 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10338              	.LVL985:
4092:Core/Src/deca_device.c **** 
 10339              		.loc 1 4092 5 view .LVU2721
 10340 0024 0120     		movs	r0, #1
 10341 0026 FFF7FEFF 		bl	deca_sleep
 10342              	.LVL986:
4095:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = 0;
 10343              		.loc 1 4095 5 view .LVU2722
4095:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = 0;
 10344              		.loc 1 4095 17 is_stmt 0 view .LVU2723
 10345 002a 044B     		ldr	r3, .L723+4
 10346 002c 1B68     		ldr	r3, [r3]
4095:Core/Src/deca_device.c ****     pdw3000local->sleep_mode = 0;
 10347              		.loc 1 4095 29 view .LVU2724
 10348 002e 0122     		movs	r2, #1
 10349 0030 DA73     		strb	r2, [r3, #15]
4096:Core/Src/deca_device.c **** }
 10350              		.loc 1 4096 5 is_stmt 1 view .LVU2725
4096:Core/Src/deca_device.c **** }
 10351              		.loc 1 4096 30 is_stmt 0 view .LVU2726
 10352 0032 0022     		movs	r2, #0
 10353 0034 1A82     		strh	r2, [r3, #16]	@ movhi
4097:Core/Src/deca_device.c **** 
 10354              		.loc 1 4097 1 view .LVU2727
 10355 0036 08BD     		pop	{r3, pc}
 10356              	.L724:
 10357              		.align	2
 10358              	.L723:
 10359 0038 04001100 		.word	1114116
 10360 003c 00000000 		.word	.LANCHOR2
 10361              		.cfi_endproc
 10362              	.LFE111:
 10364              		.section	.text.dwt_setxtaltrim,"ax",%progbits
 10365              		.align	1
 10366              		.global	dwt_setxtaltrim
 10367              		.syntax unified
 10368              		.thumb
 10369              		.thumb_func
 10370              		.fpu fpv4-sp-d16
 10372              	dwt_setxtaltrim:
 10373              	.LVL987:
 10374              	.LFB112:
4110:Core/Src/deca_device.c ****     uint8_t reg_val = ((value & XTAL_TRIM_BIT_MASK) >> XTAL_XTAL_TRIM_BIT_OFFSET);
 10375              		.loc 1 4110 1 is_stmt 1 view -0
 10376              		.cfi_startproc
 10377              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 309


 10378              		@ frame_needed = 0, uses_anonymous_args = 0
4110:Core/Src/deca_device.c ****     uint8_t reg_val = ((value & XTAL_TRIM_BIT_MASK) >> XTAL_XTAL_TRIM_BIT_OFFSET);
 10379              		.loc 1 4110 1 is_stmt 0 view .LVU2729
 10380 0000 08B5     		push	{r3, lr}
 10381              		.cfi_def_cfa_offset 8
 10382              		.cfi_offset 3, -8
 10383              		.cfi_offset 14, -4
4111:Core/Src/deca_device.c ****     pdw3000local->init_xtrim = reg_val;
 10384              		.loc 1 4111 5 is_stmt 1 view .LVU2730
4111:Core/Src/deca_device.c ****     pdw3000local->init_xtrim = reg_val;
 10385              		.loc 1 4111 13 is_stmt 0 view .LVU2731
 10386 0002 00F03F02 		and	r2, r0, #63
 10387              	.LVL988:
4112:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(XTAL_ID, 0, reg_val);
 10388              		.loc 1 4112 5 is_stmt 1 view .LVU2732
4112:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(XTAL_ID, 0, reg_val);
 10389              		.loc 1 4112 17 is_stmt 0 view .LVU2733
 10390 0006 044B     		ldr	r3, .L727
 10391 0008 1B68     		ldr	r3, [r3]
4112:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(XTAL_ID, 0, reg_val);
 10392              		.loc 1 4112 30 view .LVU2734
 10393 000a 9A73     		strb	r2, [r3, #14]
4113:Core/Src/deca_device.c **** }
 10394              		.loc 1 4113 5 is_stmt 1 view .LVU2735
 10395 000c 0021     		movs	r1, #0
 10396 000e 0348     		ldr	r0, .L727+4
 10397              	.LVL989:
4113:Core/Src/deca_device.c **** }
 10398              		.loc 1 4113 5 is_stmt 0 view .LVU2736
 10399 0010 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10400              	.LVL990:
4114:Core/Src/deca_device.c **** 
 10401              		.loc 1 4114 1 view .LVU2737
 10402 0014 08BD     		pop	{r3, pc}
 10403              	.L728:
 10404 0016 00BF     		.align	2
 10405              	.L727:
 10406 0018 00000000 		.word	.LANCHOR2
 10407 001c 14000900 		.word	589844
 10408              		.cfi_endproc
 10409              	.LFE112:
 10411              		.section	.text.dwt_getxtaltrim,"ax",%progbits
 10412              		.align	1
 10413              		.global	dwt_getxtaltrim
 10414              		.syntax unified
 10415              		.thumb
 10416              		.thumb_func
 10417              		.fpu fpv4-sp-d16
 10419              	dwt_getxtaltrim:
 10420              	.LFB113:
4128:Core/Src/deca_device.c ****     return pdw3000local->init_xtrim;
 10421              		.loc 1 4128 1 is_stmt 1 view -0
 10422              		.cfi_startproc
 10423              		@ args = 0, pretend = 0, frame = 0
 10424              		@ frame_needed = 0, uses_anonymous_args = 0
 10425              		@ link register save eliminated.
4129:Core/Src/deca_device.c **** }
ARM GAS  /tmp/cctZ3fzX.s 			page 310


 10426              		.loc 1 4129 5 view .LVU2739
4129:Core/Src/deca_device.c **** }
 10427              		.loc 1 4129 24 is_stmt 0 view .LVU2740
 10428 0000 014B     		ldr	r3, .L730
 10429 0002 1B68     		ldr	r3, [r3]
4130:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 10430              		.loc 1 4130 1 view .LVU2741
 10431 0004 987B     		ldrb	r0, [r3, #14]	@ zero_extendqisi2
 10432 0006 7047     		bx	lr
 10433              	.L731:
 10434              		.align	2
 10435              	.L730:
 10436 0008 00000000 		.word	.LANCHOR2
 10437              		.cfi_endproc
 10438              	.LFE113:
 10440              		.section	.text.dwt_get_dgcdecision,"ax",%progbits
 10441              		.align	1
 10442              		.global	dwt_get_dgcdecision
 10443              		.syntax unified
 10444              		.thumb
 10445              		.thumb_func
 10446              		.fpu fpv4-sp-d16
 10448              	dwt_get_dgcdecision:
 10449              	.LFB114:
4143:Core/Src/deca_device.c **** 	// 0x30060 is DGC_DGB
 10450              		.loc 1 4143 1 is_stmt 1 view -0
 10451              		.cfi_startproc
 10452              		@ args = 0, pretend = 0, frame = 0
 10453              		@ frame_needed = 0, uses_anonymous_args = 0
 10454 0000 08B5     		push	{r3, lr}
 10455              		.cfi_def_cfa_offset 8
 10456              		.cfi_offset 3, -8
 10457              		.cfi_offset 14, -4
4145:Core/Src/deca_device.c **** 	dgcDecision = (dwt_read32bitoffsetreg(0x30060, 0) >> 28) & 0b0111;
 10458              		.loc 1 4145 2 view .LVU2743
4146:Core/Src/deca_device.c **** 	return dgcDecision;
 10459              		.loc 1 4146 2 view .LVU2744
4146:Core/Src/deca_device.c **** 	return dgcDecision;
 10460              		.loc 1 4146 17 is_stmt 0 view .LVU2745
 10461 0002 0021     		movs	r1, #0
 10462 0004 0248     		ldr	r0, .L734
 10463 0006 FFF7FEFF 		bl	dwt_read32bitoffsetreg
 10464              	.LVL991:
4147:Core/Src/deca_device.c **** }
 10465              		.loc 1 4147 2 is_stmt 1 view .LVU2746
4148:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 10466              		.loc 1 4148 1 is_stmt 0 view .LVU2747
 10467 000a C0F30270 		ubfx	r0, r0, #28, #3
 10468              	.LVL992:
4148:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
 10469              		.loc 1 4148 1 view .LVU2748
 10470 000e 08BD     		pop	{r3, pc}
 10471              	.L735:
 10472              		.align	2
 10473              	.L734:
 10474 0010 60000300 		.word	196704
 10475              		.cfi_endproc
ARM GAS  /tmp/cctZ3fzX.s 			page 311


 10476              	.LFE114:
 10478              		.section	.text.dwt_repeated_cw,"ax",%progbits
 10479              		.align	1
 10480              		.global	dwt_repeated_cw
 10481              		.syntax unified
 10482              		.thumb
 10483              		.thumb_func
 10484              		.fpu fpv4-sp-d16
 10486              	dwt_repeated_cw:
 10487              	.LVL993:
 10488              	.LFB117:
4229:Core/Src/deca_device.c **** 
 10489              		.loc 1 4229 1 is_stmt 1 view -0
 10490              		.cfi_startproc
 10491              		@ args = 0, pretend = 0, frame = 0
 10492              		@ frame_needed = 0, uses_anonymous_args = 0
4229:Core/Src/deca_device.c **** 
 10493              		.loc 1 4229 1 is_stmt 0 view .LVU2750
 10494 0000 38B5     		push	{r3, r4, r5, lr}
 10495              		.cfi_def_cfa_offset 16
 10496              		.cfi_offset 3, -16
 10497              		.cfi_offset 4, -12
 10498              		.cfi_offset 5, -8
 10499              		.cfi_offset 14, -4
 10500 0002 0446     		mov	r4, r0
 10501 0004 0D46     		mov	r5, r1
4232:Core/Src/deca_device.c **** 
 10502              		.loc 1 4232 5 is_stmt 1 view .LVU2751
 10503 0006 0020     		movs	r0, #0
 10504              	.LVL994:
4232:Core/Src/deca_device.c **** 
 10505              		.loc 1 4232 5 is_stmt 0 view .LVU2752
 10506 0008 FFF7FEFF 		bl	dwt_setfinegraintxseq
 10507              	.LVL995:
4234:Core/Src/deca_device.c ****     if ((cw_enable > 3) || (cw_enable < 1)) cw_enable = 4;
 10508              		.loc 1 4234 5 is_stmt 1 view .LVU2753
4234:Core/Src/deca_device.c ****     if ((cw_enable > 3) || (cw_enable < 1)) cw_enable = 4;
 10509              		.loc 1 4234 8 is_stmt 0 view .LVU2754
 10510 000c 0F2D     		cmp	r5, #15
 10511 000e 00DD     		ble	.L737
4234:Core/Src/deca_device.c ****     if ((cw_enable > 3) || (cw_enable < 1)) cw_enable = 4;
 10512              		.loc 1 4234 47 view .LVU2755
 10513 0010 0F25     		movs	r5, #15
 10514              	.LVL996:
 10515              	.L737:
4235:Core/Src/deca_device.c **** 
 10516              		.loc 1 4235 5 is_stmt 1 view .LVU2756
4235:Core/Src/deca_device.c **** 
 10517              		.loc 1 4235 25 is_stmt 0 view .LVU2757
 10518 0012 631E     		subs	r3, r4, #1
4235:Core/Src/deca_device.c **** 
 10519              		.loc 1 4235 8 view .LVU2758
 10520 0014 022B     		cmp	r3, #2
 10521 0016 00D9     		bls	.L738
4235:Core/Src/deca_device.c **** 
 10522              		.loc 1 4235 55 view .LVU2759
 10523 0018 0424     		movs	r4, #4
ARM GAS  /tmp/cctZ3fzX.s 			page 312


 10524              	.LVL997:
 10525              	.L738:
4238:Core/Src/deca_device.c ****     dwt_write32bitoffsetreg(PG_TEST_ID, 0x0, cw_mode_config << ((cw_enable - 1) * 4));
 10526              		.loc 1 4238 5 is_stmt 1 view .LVU2760
 10527 001a 1022     		movs	r2, #16
 10528 001c 2241     		asrs	r2, r2, r4
 10529 001e 0021     		movs	r1, #0
 10530 0020 0548     		ldr	r0, .L742
 10531 0022 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 10532              	.LVL998:
4239:Core/Src/deca_device.c **** }
 10533              		.loc 1 4239 5 view .LVU2761
4239:Core/Src/deca_device.c **** }
 10534              		.loc 1 4239 76 is_stmt 0 view .LVU2762
 10535 0026 621E     		subs	r2, r4, #1
4239:Core/Src/deca_device.c **** }
 10536              		.loc 1 4239 81 view .LVU2763
 10537 0028 9200     		lsls	r2, r2, #2
4239:Core/Src/deca_device.c **** }
 10538              		.loc 1 4239 5 view .LVU2764
 10539 002a 05FA02F2 		lsl	r2, r5, r2
 10540 002e 0021     		movs	r1, #0
 10541 0030 0248     		ldr	r0, .L742+4
 10542 0032 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 10543              	.LVL999:
4240:Core/Src/deca_device.c **** 
 10544              		.loc 1 4240 1 view .LVU2765
 10545 0036 38BD     		pop	{r3, r4, r5, pc}
 10546              	.LVL1000:
 10547              	.L743:
4240:Core/Src/deca_device.c **** 
 10548              		.loc 1 4240 1 view .LVU2766
 10549              		.align	2
 10550              	.L742:
 10551 0038 28000700 		.word	458792
 10552 003c 18000800 		.word	524312
 10553              		.cfi_endproc
 10554              	.LFE117:
 10556              		.section	.text.dwt_repeated_frames,"ax",%progbits
 10557              		.align	1
 10558              		.global	dwt_repeated_frames
 10559              		.syntax unified
 10560              		.thumb
 10561              		.thumb_func
 10562              		.fpu fpv4-sp-d16
 10564              	dwt_repeated_frames:
 10565              	.LVL1001:
 10566              	.LFB118:
4256:Core/Src/deca_device.c ****     //Enable repeated frames
 10567              		.loc 1 4256 1 is_stmt 1 view -0
 10568              		.cfi_startproc
 10569              		@ args = 0, pretend = 0, frame = 0
 10570              		@ frame_needed = 0, uses_anonymous_args = 0
4256:Core/Src/deca_device.c ****     //Enable repeated frames
 10571              		.loc 1 4256 1 is_stmt 0 view .LVU2768
 10572 0000 10B5     		push	{r4, lr}
 10573              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cctZ3fzX.s 			page 313


 10574              		.cfi_offset 4, -8
 10575              		.cfi_offset 14, -4
 10576 0002 0446     		mov	r4, r0
4258:Core/Src/deca_device.c **** 
 10577              		.loc 1 4258 5 is_stmt 1 view .LVU2769
 10578 0004 1023     		movs	r3, #16
 10579 0006 FF22     		movs	r2, #255
 10580 0008 0021     		movs	r1, #0
 10581 000a 0648     		ldr	r0, .L748
 10582              	.LVL1002:
4258:Core/Src/deca_device.c **** 
 10583              		.loc 1 4258 5 is_stmt 0 view .LVU2770
 10584 000c FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 10585              	.LVL1003:
4260:Core/Src/deca_device.c ****     {
 10586              		.loc 1 4260 5 is_stmt 1 view .LVU2771
4260:Core/Src/deca_device.c ****     {
 10587              		.loc 1 4260 8 is_stmt 0 view .LVU2772
 10588 0010 032C     		cmp	r4, #3
 10589 0012 00D8     		bhi	.L745
4262:Core/Src/deca_device.c ****     }
 10590              		.loc 1 4262 29 view .LVU2773
 10591 0014 0424     		movs	r4, #4
 10592              	.LVL1004:
 10593              	.L745:
4264:Core/Src/deca_device.c **** }
 10594              		.loc 1 4264 5 is_stmt 1 view .LVU2774
 10595 0016 2246     		mov	r2, r4
 10596 0018 0021     		movs	r1, #0
 10597 001a 2C20     		movs	r0, #44
 10598 001c FFF7FEFF 		bl	dwt_write32bitoffsetreg
 10599              	.LVL1005:
4265:Core/Src/deca_device.c **** 
 10600              		.loc 1 4265 1 is_stmt 0 view .LVU2775
 10601 0020 10BD     		pop	{r4, pc}
 10602              	.LVL1006:
 10603              	.L749:
4265:Core/Src/deca_device.c **** 
 10604              		.loc 1 4265 1 view .LVU2776
 10605 0022 00BF     		.align	2
 10606              	.L748:
 10607 0024 24000F00 		.word	983076
 10608              		.cfi_endproc
 10609              	.LFE118:
 10611              		.section	.text.dwt_configcwmode,"ax",%progbits
 10612              		.align	1
 10613              		.global	dwt_configcwmode
 10614              		.syntax unified
 10615              		.thumb
 10616              		.thumb_func
 10617              		.fpu fpv4-sp-d16
 10619              	dwt_configcwmode:
 10620              	.LVL1007:
 10621              	.LFB121:
4323:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 1);
 10622              		.loc 1 4323 1 is_stmt 1 view -0
 10623              		.cfi_startproc
ARM GAS  /tmp/cctZ3fzX.s 			page 314


 10624              		@ args = 0, pretend = 0, frame = 0
 10625              		@ frame_needed = 0, uses_anonymous_args = 0
4323:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 1);
 10626              		.loc 1 4323 1 is_stmt 0 view .LVU2778
 10627 0000 10B5     		push	{r4, lr}
 10628              		.cfi_def_cfa_offset 8
 10629              		.cfi_offset 4, -8
 10630              		.cfi_offset 14, -4
 10631 0002 0446     		mov	r4, r0
4324:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
 10632              		.loc 1 4324 5 is_stmt 1 view .LVU2779
 10633 0004 0121     		movs	r1, #1
 10634 0006 FFF7FEFF 		bl	dwt_enable_rf_tx
 10635              	.LVL1008:
4325:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_SYS_TX);
 10636              		.loc 1 4325 5 view .LVU2780
 10637 000a 2046     		mov	r0, r4
 10638 000c FFF7FEFF 		bl	dwt_enable_rftx_blocks
 10639              	.LVL1009:
4326:Core/Src/deca_device.c ****     dwt_repeated_cw(1, 0xF);    //PulseGen Channel 1, full power
 10640              		.loc 1 4326 5 view .LVU2781
 10641 0010 0120     		movs	r0, #1
 10642 0012 FFF7FEFF 		bl	dwt_force_clocks
 10643              	.LVL1010:
4327:Core/Src/deca_device.c **** }
 10644              		.loc 1 4327 5 view .LVU2782
 10645 0016 0F21     		movs	r1, #15
 10646 0018 0120     		movs	r0, #1
 10647 001a FFF7FEFF 		bl	dwt_repeated_cw
 10648              	.LVL1011:
4328:Core/Src/deca_device.c **** 
 10649              		.loc 1 4328 1 is_stmt 0 view .LVU2783
 10650 001e 10BD     		pop	{r4, pc}
 10651              		.cfi_endproc
 10652              	.LFE121:
 10654              		.section	.text.dwt_configcontinuousframemode,"ax",%progbits
 10655              		.align	1
 10656              		.global	dwt_configcontinuousframemode
 10657              		.syntax unified
 10658              		.thumb
 10659              		.thumb_func
 10660              		.fpu fpv4-sp-d16
 10662              	dwt_configcontinuousframemode:
 10663              	.LVL1012:
 10664              	.LFB122:
4343:Core/Src/deca_device.c ****     //NOTE: dwt_configure and dwt_configuretxrf must be called before a call to this API
 10665              		.loc 1 4343 1 is_stmt 1 view -0
 10666              		.cfi_startproc
 10667              		@ args = 0, pretend = 0, frame = 0
 10668              		@ frame_needed = 0, uses_anonymous_args = 0
4343:Core/Src/deca_device.c ****     //NOTE: dwt_configure and dwt_configuretxrf must be called before a call to this API
 10669              		.loc 1 4343 1 is_stmt 0 view .LVU2785
 10670 0000 38B5     		push	{r3, r4, r5, lr}
 10671              		.cfi_def_cfa_offset 16
 10672              		.cfi_offset 3, -16
 10673              		.cfi_offset 4, -12
 10674              		.cfi_offset 5, -8
ARM GAS  /tmp/cctZ3fzX.s 			page 315


 10675              		.cfi_offset 14, -4
 10676 0002 0546     		mov	r5, r0
 10677 0004 0C46     		mov	r4, r1
4345:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
 10678              		.loc 1 4345 5 is_stmt 1 view .LVU2786
 10679 0006 0121     		movs	r1, #1
 10680              	.LVL1013:
4345:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
 10681              		.loc 1 4345 5 is_stmt 0 view .LVU2787
 10682 0008 2046     		mov	r0, r4
 10683              	.LVL1014:
4345:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
 10684              		.loc 1 4345 5 view .LVU2788
 10685 000a FFF7FEFF 		bl	dwt_enable_rf_tx
 10686              	.LVL1015:
4346:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_SYS_TX);
 10687              		.loc 1 4346 5 is_stmt 1 view .LVU2789
 10688 000e 2046     		mov	r0, r4
 10689 0010 FFF7FEFF 		bl	dwt_enable_rftx_blocks
 10690              	.LVL1016:
4347:Core/Src/deca_device.c ****     dwt_repeated_frames(framerepetitionrate);
 10691              		.loc 1 4347 5 view .LVU2790
 10692 0014 0120     		movs	r0, #1
 10693 0016 FFF7FEFF 		bl	dwt_force_clocks
 10694              	.LVL1017:
4348:Core/Src/deca_device.c **** }
 10695              		.loc 1 4348 5 view .LVU2791
 10696 001a 2846     		mov	r0, r5
 10697 001c FFF7FEFF 		bl	dwt_repeated_frames
 10698              	.LVL1018:
4349:Core/Src/deca_device.c **** 
 10699              		.loc 1 4349 1 is_stmt 0 view .LVU2792
 10700 0020 38BD     		pop	{r3, r4, r5, pc}
4349:Core/Src/deca_device.c **** 
 10701              		.loc 1 4349 1 view .LVU2793
 10702              		.cfi_endproc
 10703              	.LFE122:
 10705              		.section	.text.dwt_disablecontinuousframemode,"ax",%progbits
 10706              		.align	1
 10707              		.global	dwt_disablecontinuousframemode
 10708              		.syntax unified
 10709              		.thumb
 10710              		.thumb_func
 10711              		.fpu fpv4-sp-d16
 10713              	dwt_disablecontinuousframemode:
 10714              	.LFB123:
4352:Core/Src/deca_device.c **** 	 dwt_and8bitoffsetreg(TEST_CTRL0_ID, 0x0, TEST_CTRL0_TX_PSTM_BIT_OFFMASK);
 10715              		.loc 1 4352 1 is_stmt 1 view -0
 10716              		.cfi_startproc
 10717              		@ args = 0, pretend = 0, frame = 0
 10718              		@ frame_needed = 0, uses_anonymous_args = 0
 10719 0000 08B5     		push	{r3, lr}
 10720              		.cfi_def_cfa_offset 8
 10721              		.cfi_offset 3, -8
 10722              		.cfi_offset 14, -4
4353:Core/Src/deca_device.c **** }
 10723              		.loc 1 4353 3 view .LVU2795
ARM GAS  /tmp/cctZ3fzX.s 			page 316


 10724 0002 0023     		movs	r3, #0
 10725 0004 EF22     		movs	r2, #239
 10726 0006 1946     		mov	r1, r3
 10727 0008 0148     		ldr	r0, .L756
 10728 000a FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 10729              	.LVL1019:
4354:Core/Src/deca_device.c **** 
 10730              		.loc 1 4354 1 is_stmt 0 view .LVU2796
 10731 000e 08BD     		pop	{r3, pc}
 10732              	.L757:
 10733              		.align	2
 10734              	.L756:
 10735 0010 24000F00 		.word	983076
 10736              		.cfi_endproc
 10737              	.LFE123:
 10739              		.section	.text.dwt_readtempvbat,"ax",%progbits
 10740              		.align	1
 10741              		.global	dwt_readtempvbat
 10742              		.syntax unified
 10743              		.thumb
 10744              		.thumb_func
 10745              		.fpu fpv4-sp-d16
 10747              	dwt_readtempvbat:
 10748              	.LFB124:
4368:Core/Src/deca_device.c ****     uint8_t vbat_raw = 0;
 10749              		.loc 1 4368 1 is_stmt 1 view -0
 10750              		.cfi_startproc
 10751              		@ args = 0, pretend = 0, frame = 0
 10752              		@ frame_needed = 0, uses_anonymous_args = 0
 10753 0000 70B5     		push	{r4, r5, r6, lr}
 10754              		.cfi_def_cfa_offset 16
 10755              		.cfi_offset 4, -16
 10756              		.cfi_offset 5, -12
 10757              		.cfi_offset 6, -8
 10758              		.cfi_offset 14, -4
4369:Core/Src/deca_device.c ****     uint8_t temp_raw = 0;
 10759              		.loc 1 4369 5 view .LVU2798
 10760              	.LVL1020:
4370:Core/Src/deca_device.c ****     uint8_t ldo_ctrl;
 10761              		.loc 1 4370 5 view .LVU2799
4371:Core/Src/deca_device.c ****     uint16_t wr_buf;
 10762              		.loc 1 4371 5 view .LVU2800
4372:Core/Src/deca_device.c **** 
 10763              		.loc 1 4372 5 view .LVU2801
4375:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(LDO_CTRL_ID, 0, LDO_CTRL_LDO_VDDMS2_EN_BIT_MASK);
 10764              		.loc 1 4375 5 view .LVU2802
4375:Core/Src/deca_device.c ****     dwt_or8bitoffsetreg(LDO_CTRL_ID, 0, LDO_CTRL_LDO_VDDMS2_EN_BIT_MASK);
 10765              		.loc 1 4375 16 is_stmt 0 view .LVU2803
 10766 0002 1D4C     		ldr	r4, .L761
 10767 0004 0021     		movs	r1, #0
 10768 0006 2046     		mov	r0, r4
 10769 0008 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 10770              	.LVL1021:
 10771 000c 0546     		mov	r5, r0
 10772              	.LVL1022:
4376:Core/Src/deca_device.c **** 
 10773              		.loc 1 4376 5 is_stmt 1 view .LVU2804
ARM GAS  /tmp/cctZ3fzX.s 			page 317


 10774 000e 0223     		movs	r3, #2
 10775 0010 FF22     		movs	r2, #255
 10776 0012 0021     		movs	r1, #0
 10777 0014 2046     		mov	r0, r4
 10778 0016 FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 10779              	.LVL1023:
4384:Core/Src/deca_device.c **** 
 10780              		.loc 1 4384 5 view .LVU2805
 10781 001a 0422     		movs	r2, #4
 10782 001c 0021     		movs	r1, #0
 10783 001e 1748     		ldr	r0, .L761+4
 10784 0020 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10785              	.LVL1024:
4387:Core/Src/deca_device.c **** 
 10786              		.loc 1 4387 5 view .LVU2806
 10787 0024 0122     		movs	r2, #1
 10788 0026 0021     		movs	r1, #0
 10789 0028 4FF40020 		mov	r0, #524288
 10790 002c FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10791              	.LVL1025:
4390:Core/Src/deca_device.c **** 
 10792              		.loc 1 4390 5 view .LVU2807
 10793              	.L759:
4390:Core/Src/deca_device.c **** 
 10794              		.loc 1 4390 115 discriminator 1 view .LVU2808
4390:Core/Src/deca_device.c **** 
 10795              		.loc 1 4390 11 discriminator 1 view .LVU2809
4390:Core/Src/deca_device.c **** 
 10796              		.loc 1 4390 14 is_stmt 0 discriminator 1 view .LVU2810
 10797 0030 0021     		movs	r1, #0
 10798 0032 1348     		ldr	r0, .L761+8
 10799 0034 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 10800              	.LVL1026:
4390:Core/Src/deca_device.c **** 
 10801              		.loc 1 4390 11 discriminator 1 view .LVU2811
 10802 0038 10F0010F 		tst	r0, #1
 10803 003c F8D0     		beq	.L759
4393:Core/Src/deca_device.c **** 
 10804              		.loc 1 4393 5 is_stmt 1 view .LVU2812
4393:Core/Src/deca_device.c **** 
 10805              		.loc 1 4393 14 is_stmt 0 view .LVU2813
 10806 003e 0021     		movs	r1, #0
 10807 0040 4FF00810 		mov	r0, #524296
 10808 0044 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 10809              	.LVL1027:
 10810 0048 0446     		mov	r4, r0
 10811              	.LVL1028:
4395:Core/Src/deca_device.c ****     temp_raw = (uint8_t)(wr_buf >> 8);
 10812              		.loc 1 4395 5 is_stmt 1 view .LVU2814
4396:Core/Src/deca_device.c **** 
 10813              		.loc 1 4396 5 view .LVU2815
4396:Core/Src/deca_device.c **** 
 10814              		.loc 1 4396 14 is_stmt 0 view .LVU2816
 10815 004a C0F30726 		ubfx	r6, r0, #8, #8
 10816              	.LVL1029:
4399:Core/Src/deca_device.c **** 
 10817              		.loc 1 4399 5 is_stmt 1 view .LVU2817
ARM GAS  /tmp/cctZ3fzX.s 			page 318


 10818 004e 0022     		movs	r2, #0
 10819 0050 1146     		mov	r1, r2
 10820 0052 4FF40020 		mov	r0, #524288
 10821              	.LVL1030:
4399:Core/Src/deca_device.c **** 
 10822              		.loc 1 4399 5 is_stmt 0 view .LVU2818
 10823 0056 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10824              	.LVL1031:
4402:Core/Src/deca_device.c **** 
 10825              		.loc 1 4402 5 is_stmt 1 view .LVU2819
 10826 005a 0022     		movs	r2, #0
 10827 005c 1146     		mov	r1, r2
 10828 005e 0748     		ldr	r0, .L761+4
 10829 0060 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10830              	.LVL1032:
4405:Core/Src/deca_device.c **** 
 10831              		.loc 1 4405 5 view .LVU2820
 10832 0064 2A46     		mov	r2, r5
 10833 0066 0021     		movs	r1, #0
 10834 0068 0348     		ldr	r0, .L761
 10835 006a FFF7FEFF 		bl	dwt_write8bitoffsetreg
 10836              	.LVL1033:
4407:Core/Src/deca_device.c **** }
 10837              		.loc 1 4407 5 view .LVU2821
4407:Core/Src/deca_device.c **** }
 10838              		.loc 1 4407 39 is_stmt 0 view .LVU2822
 10839 006e E0B2     		uxtb	r0, r4
4408:Core/Src/deca_device.c **** 
 10840              		.loc 1 4408 1 view .LVU2823
 10841 0070 40EA0620 		orr	r0, r0, r6, lsl #8
 10842 0074 70BD     		pop	{r4, r5, r6, pc}
 10843              	.LVL1034:
 10844              	.L762:
4408:Core/Src/deca_device.c **** 
 10845              		.loc 1 4408 1 view .LVU2824
 10846 0076 00BF     		.align	2
 10847              	.L761:
 10848 0078 48000700 		.word	458824
 10849 007c 34000700 		.word	458804
 10850 0080 04000800 		.word	524292
 10851              		.cfi_endproc
 10852              	.LFE124:
 10854              		.section	.text.dwt_convertrawtemperature,"ax",%progbits
 10855              		.align	1
 10856              		.global	dwt_convertrawtemperature
 10857              		.syntax unified
 10858              		.thumb
 10859              		.thumb_func
 10860              		.fpu fpv4-sp-d16
 10862              	dwt_convertrawtemperature:
 10863              	.LVL1035:
 10864              	.LFB125:
4423:Core/Src/deca_device.c ****     float realtemp;
 10865              		.loc 1 4423 1 is_stmt 1 view -0
 10866              		.cfi_startproc
 10867              		@ args = 0, pretend = 0, frame = 0
 10868              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 319


 10869              		@ link register save eliminated.
4424:Core/Src/deca_device.c **** 
 10870              		.loc 1 4424 5 view .LVU2826
4427:Core/Src/deca_device.c ****     return realtemp;
 10871              		.loc 1 4427 5 view .LVU2827
4427:Core/Src/deca_device.c ****     return realtemp;
 10872              		.loc 1 4427 48 is_stmt 0 view .LVU2828
 10873 0000 084B     		ldr	r3, .L764
 10874 0002 1B68     		ldr	r3, [r3]
 10875 0004 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
4427:Core/Src/deca_device.c ****     return realtemp;
 10876              		.loc 1 4427 34 view .LVU2829
 10877 0006 C31A     		subs	r3, r0, r3
 10878 0008 07EE903A 		vmov	s15, r3	@ int
4427:Core/Src/deca_device.c ****     return realtemp;
 10879              		.loc 1 4427 16 view .LVU2830
 10880 000c F8EEE77A 		vcvt.f32.s32	s15, s15
 10881 0010 9FED050A 		vldr.32	s0, .L764+4
 10882 0014 67EE807A 		vmul.f32	s15, s15, s0
 10883              	.LVL1036:
4428:Core/Src/deca_device.c **** }
 10884              		.loc 1 4428 5 is_stmt 1 view .LVU2831
4429:Core/Src/deca_device.c **** 
 10885              		.loc 1 4429 1 is_stmt 0 view .LVU2832
 10886 0018 B3EE040A 		vmov.f32	s0, #2.0e+1
 10887 001c 37EE800A 		vadd.f32	s0, s15, s0
 10888              	.LVL1037:
4429:Core/Src/deca_device.c **** 
 10889              		.loc 1 4429 1 view .LVU2833
 10890 0020 7047     		bx	lr
 10891              	.L765:
 10892 0022 00BF     		.align	2
 10893              	.L764:
 10894 0024 00000000 		.word	.LANCHOR2
 10895 0028 6666863F 		.word	1065772646
 10896              		.cfi_endproc
 10897              	.LFE125:
 10899              		.section	.text.dwt_convertrawvoltage,"ax",%progbits
 10900              		.align	1
 10901              		.global	dwt_convertrawvoltage
 10902              		.syntax unified
 10903              		.thumb
 10904              		.thumb_func
 10905              		.fpu fpv4-sp-d16
 10907              	dwt_convertrawvoltage:
 10908              	.LVL1038:
 10909              	.LFB126:
4444:Core/Src/deca_device.c ****     float realvolt;
 10910              		.loc 1 4444 1 is_stmt 1 view -0
 10911              		.cfi_startproc
 10912              		@ args = 0, pretend = 0, frame = 0
 10913              		@ frame_needed = 0, uses_anonymous_args = 0
 10914              		@ link register save eliminated.
4445:Core/Src/deca_device.c **** 
 10915              		.loc 1 4445 5 view .LVU2835
4448:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
 10916              		.loc 1 4448 5 view .LVU2836
ARM GAS  /tmp/cctZ3fzX.s 			page 320


4448:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
 10917              		.loc 1 4448 58 is_stmt 0 view .LVU2837
 10918 0000 0C4B     		ldr	r3, .L767
 10919 0002 1B68     		ldr	r3, [r3]
 10920 0004 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
4448:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
 10921              		.loc 1 4448 44 view .LVU2838
 10922 0006 C31A     		subs	r3, r0, r3
 10923 0008 07EE903A 		vmov	s15, r3	@ int
4448:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
 10924              		.loc 1 4448 24 view .LVU2839
 10925 000c F8EEE77A 		vcvt.f32.s32	s15, s15
4448:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
 10926              		.loc 1 4448 67 view .LVU2840
 10927 0010 9FED097A 		vldr.32	s14, .L767+4
 10928 0014 67EE877A 		vmul.f32	s15, s15, s14
4448:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
 10929              		.loc 1 4448 74 view .LVU2841
 10930 0018 B3EE007A 		vmov.f32	s14, #1.6e+1
 10931 001c 67EE877A 		vmul.f32	s15, s15, s14
4448:Core/Src/deca_device.c ****     //realvolt = ((float)raw_voltage * 0.4f / 255) * 16;
 10932              		.loc 1 4448 16 view .LVU2842
 10933 0020 9FED067A 		vldr.32	s14, .L767+8
 10934 0024 87EE870A 		vdiv.f32	s0, s15, s14
 10935              	.LVL1039:
4450:Core/Src/deca_device.c **** }
 10936              		.loc 1 4450 5 is_stmt 1 view .LVU2843
4451:Core/Src/deca_device.c **** 
 10937              		.loc 1 4451 1 is_stmt 0 view .LVU2844
 10938 0028 F0EE087A 		vmov.f32	s15, #3.0e+0
 10939 002c 30EE270A 		vadd.f32	s0, s0, s15
 10940              	.LVL1040:
4451:Core/Src/deca_device.c **** 
 10941              		.loc 1 4451 1 view .LVU2845
 10942 0030 7047     		bx	lr
 10943              	.L768:
 10944 0032 00BF     		.align	2
 10945              	.L767:
 10946 0034 00000000 		.word	.LANCHOR2
 10947 0038 CDCCCC3E 		.word	1053609165
 10948 003c 00007F43 		.word	1132396544
 10949              		.cfi_endproc
 10950              	.LFE126:
 10952              		.section	.text.dwt_readwakeuptemp,"ax",%progbits
 10953              		.align	1
 10954              		.global	dwt_readwakeuptemp
 10955              		.syntax unified
 10956              		.thumb
 10957              		.thumb_func
 10958              		.fpu fpv4-sp-d16
 10960              	dwt_readwakeuptemp:
 10961              	.LFB127:
4465:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(SAR_READING_ID, 1);
 10962              		.loc 1 4465 1 is_stmt 1 view -0
 10963              		.cfi_startproc
 10964              		@ args = 0, pretend = 0, frame = 0
 10965              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctZ3fzX.s 			page 321


 10966 0000 08B5     		push	{r3, lr}
 10967              		.cfi_def_cfa_offset 8
 10968              		.cfi_offset 3, -8
 10969              		.cfi_offset 14, -4
4466:Core/Src/deca_device.c **** }
 10970              		.loc 1 4466 5 view .LVU2847
4466:Core/Src/deca_device.c **** }
 10971              		.loc 1 4466 12 is_stmt 0 view .LVU2848
 10972 0002 0121     		movs	r1, #1
 10973 0004 4FF00810 		mov	r0, #524296
 10974 0008 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 10975              	.LVL1041:
4467:Core/Src/deca_device.c **** 
 10976              		.loc 1 4467 1 view .LVU2849
 10977 000c 08BD     		pop	{r3, pc}
 10978              		.cfi_endproc
 10979              	.LFE127:
 10981              		.section	.text.dwt_readwakeupvbat,"ax",%progbits
 10982              		.align	1
 10983              		.global	dwt_readwakeupvbat
 10984              		.syntax unified
 10985              		.thumb
 10986              		.thumb_func
 10987              		.fpu fpv4-sp-d16
 10989              	dwt_readwakeupvbat:
 10990              	.LFB128:
4481:Core/Src/deca_device.c ****     return dwt_read8bitoffsetreg(SAR_READING_ID, 0);
 10991              		.loc 1 4481 1 is_stmt 1 view -0
 10992              		.cfi_startproc
 10993              		@ args = 0, pretend = 0, frame = 0
 10994              		@ frame_needed = 0, uses_anonymous_args = 0
 10995 0000 08B5     		push	{r3, lr}
 10996              		.cfi_def_cfa_offset 8
 10997              		.cfi_offset 3, -8
 10998              		.cfi_offset 14, -4
4482:Core/Src/deca_device.c **** }
 10999              		.loc 1 4482 5 view .LVU2851
4482:Core/Src/deca_device.c **** }
 11000              		.loc 1 4482 12 is_stmt 0 view .LVU2852
 11001 0002 0021     		movs	r1, #0
 11002 0004 4FF00810 		mov	r0, #524296
 11003 0008 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 11004              	.LVL1042:
4483:Core/Src/deca_device.c **** 
 11005              		.loc 1 4483 1 view .LVU2853
 11006 000c 08BD     		pop	{r3, pc}
 11007              		.cfi_endproc
 11008              	.LFE128:
 11010              		.section	.text.dwt_calcbandwidthadj,"ax",%progbits
 11011              		.align	1
 11012              		.global	dwt_calcbandwidthadj
 11013              		.syntax unified
 11014              		.thumb
 11015              		.thumb_func
 11016              		.fpu fpv4-sp-d16
 11018              	dwt_calcbandwidthadj:
 11019              	.LVL1043:
ARM GAS  /tmp/cctZ3fzX.s 			page 322


 11020              	.LFB129:
4501:Core/Src/deca_device.c ****     // Force system clock to FOSC/4 and TX clocks on and enable RF blocks
 11021              		.loc 1 4501 1 is_stmt 1 view -0
 11022              		.cfi_startproc
 11023              		@ args = 0, pretend = 0, frame = 0
 11024              		@ frame_needed = 0, uses_anonymous_args = 0
4501:Core/Src/deca_device.c ****     // Force system clock to FOSC/4 and TX clocks on and enable RF blocks
 11025              		.loc 1 4501 1 is_stmt 0 view .LVU2855
 11026 0000 38B5     		push	{r3, r4, r5, lr}
 11027              		.cfi_def_cfa_offset 16
 11028              		.cfi_offset 3, -16
 11029              		.cfi_offset 4, -12
 11030              		.cfi_offset 5, -8
 11031              		.cfi_offset 14, -4
 11032 0002 0546     		mov	r5, r0
 11033 0004 0C46     		mov	r4, r1
4503:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 0);
 11034              		.loc 1 4503 5 is_stmt 1 view .LVU2856
 11035 0006 0120     		movs	r0, #1
 11036              	.LVL1044:
4503:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 0);
 11037              		.loc 1 4503 5 is_stmt 0 view .LVU2857
 11038 0008 FFF7FEFF 		bl	dwt_force_clocks
 11039              	.LVL1045:
4504:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
 11040              		.loc 1 4504 5 is_stmt 1 view .LVU2858
 11041 000c 0021     		movs	r1, #0
 11042 000e 2046     		mov	r0, r4
 11043 0010 FFF7FEFF 		bl	dwt_enable_rf_tx
 11044              	.LVL1046:
4505:Core/Src/deca_device.c **** 
 11045              		.loc 1 4505 5 view .LVU2859
 11046 0014 2046     		mov	r0, r4
 11047 0016 FFF7FEFF 		bl	dwt_enable_rftx_blocks
 11048              	.LVL1047:
4508:Core/Src/deca_device.c ****     // Run PG count cal
 11049              		.loc 1 4508 5 view .LVU2860
 11050 001a C5F30B02 		ubfx	r2, r5, #0, #12
 11051 001e 0021     		movs	r1, #0
 11052 0020 0F48     		ldr	r0, .L776
 11053 0022 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 11054              	.LVL1048:
4510:Core/Src/deca_device.c ****     // Wait for calibration to complete
 11055              		.loc 1 4510 5 view .LVU2861
 11056 0026 0323     		movs	r3, #3
 11057 0028 FF22     		movs	r2, #255
 11058 002a 0021     		movs	r1, #0
 11059 002c 0D48     		ldr	r0, .L776+4
 11060 002e FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 11061              	.LVL1049:
4512:Core/Src/deca_device.c **** 
 11062              		.loc 1 4512 5 view .LVU2862
 11063              	.L774:
4512:Core/Src/deca_device.c **** 
 11064              		.loc 1 4512 80 discriminator 1 view .LVU2863
4512:Core/Src/deca_device.c **** 
 11065              		.loc 1 4512 11 discriminator 1 view .LVU2864
ARM GAS  /tmp/cctZ3fzX.s 			page 323


4512:Core/Src/deca_device.c **** 
 11066              		.loc 1 4512 12 is_stmt 0 discriminator 1 view .LVU2865
 11067 0032 0021     		movs	r1, #0
 11068 0034 0B48     		ldr	r0, .L776+4
 11069 0036 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 11070              	.LVL1050:
4512:Core/Src/deca_device.c **** 
 11071              		.loc 1 4512 11 discriminator 1 view .LVU2866
 11072 003a 10F0010F 		tst	r0, #1
 11073 003e F8D1     		bne	.L774
4515:Core/Src/deca_device.c ****     dwt_disable_rf_tx(0);
 11074              		.loc 1 4515 5 is_stmt 1 view .LVU2867
 11075 0040 FFF7FEFF 		bl	dwt_disable_rftx_blocks
 11076              	.LVL1051:
4516:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_AUTO);
 11077              		.loc 1 4516 5 view .LVU2868
 11078 0044 0020     		movs	r0, #0
 11079 0046 FFF7FEFF 		bl	dwt_disable_rf_tx
 11080              	.LVL1052:
4517:Core/Src/deca_device.c **** 
 11081              		.loc 1 4517 5 view .LVU2869
 11082 004a 0520     		movs	r0, #5
 11083 004c FFF7FEFF 		bl	dwt_force_clocks
 11084              	.LVL1053:
4519:Core/Src/deca_device.c **** }
 11085              		.loc 1 4519 5 view .LVU2870
4519:Core/Src/deca_device.c **** }
 11086              		.loc 1 4519 14 is_stmt 0 view .LVU2871
 11087 0050 0021     		movs	r1, #0
 11088 0052 0548     		ldr	r0, .L776+8
 11089 0054 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 11090              	.LVL1054:
4520:Core/Src/deca_device.c **** 
 11091              		.loc 1 4520 1 view .LVU2872
 11092 0058 00F03F00 		and	r0, r0, #63
 11093 005c 38BD     		pop	{r3, r4, r5, pc}
 11094              	.LVL1055:
 11095              	.L777:
4520:Core/Src/deca_device.c **** 
 11096              		.loc 1 4520 1 view .LVU2873
 11097 005e 00BF     		.align	2
 11098              	.L776:
 11099 0060 1C000800 		.word	524316
 11100 0064 10000800 		.word	524304
 11101 0068 1C000700 		.word	458780
 11102              		.cfi_endproc
 11103              	.LFE129:
 11105              		.section	.text.dwt_configuretxrf,"ax",%progbits
 11106              		.align	1
 11107              		.global	dwt_configuretxrf
 11108              		.syntax unified
 11109              		.thumb
 11110              		.thumb_func
 11111              		.fpu fpv4-sp-d16
 11113              	dwt_configuretxrf:
 11114              	.LVL1056:
 11115              	.LFB33:
ARM GAS  /tmp/cctZ3fzX.s 			page 324


1088:Core/Src/deca_device.c ****     if (config->PGcount == 0) {
 11116              		.loc 1 1088 1 is_stmt 1 view -0
 11117              		.cfi_startproc
 11118              		@ args = 0, pretend = 0, frame = 0
 11119              		@ frame_needed = 0, uses_anonymous_args = 0
1088:Core/Src/deca_device.c ****     if (config->PGcount == 0) {
 11120              		.loc 1 1088 1 is_stmt 0 view .LVU2875
 11121 0000 10B5     		push	{r4, lr}
 11122              		.cfi_def_cfa_offset 8
 11123              		.cfi_offset 4, -8
 11124              		.cfi_offset 14, -4
 11125 0002 0446     		mov	r4, r0
1089:Core/Src/deca_device.c ****         // Configure RF TX PG_DELAY
 11126              		.loc 1 1089 5 is_stmt 1 view .LVU2876
1089:Core/Src/deca_device.c ****         // Configure RF TX PG_DELAY
 11127              		.loc 1 1089 15 is_stmt 0 view .LVU2877
 11128 0004 0389     		ldrh	r3, [r0, #8]
1089:Core/Src/deca_device.c ****         // Configure RF TX PG_DELAY
 11129              		.loc 1 1089 8 view .LVU2878
 11130 0006 53B9     		cbnz	r3, .L779
1091:Core/Src/deca_device.c ****     }
 11131              		.loc 1 1091 9 is_stmt 1 view .LVU2879
 11132 0008 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 11133 000a 0021     		movs	r1, #0
 11134 000c 0B48     		ldr	r0, .L784
 11135              	.LVL1057:
1091:Core/Src/deca_device.c ****     }
 11136              		.loc 1 1091 9 is_stmt 0 view .LVU2880
 11137 000e FFF7FEFF 		bl	dwt_write8bitoffsetreg
 11138              	.LVL1058:
 11139              	.L780:
1104:Core/Src/deca_device.c **** }
 11140              		.loc 1 1104 5 is_stmt 1 view .LVU2881
 11141 0012 6268     		ldr	r2, [r4, #4]
 11142 0014 0021     		movs	r1, #0
 11143 0016 0A48     		ldr	r0, .L784+4
 11144 0018 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 11145              	.LVL1059:
1105:Core/Src/deca_device.c **** 
 11146              		.loc 1 1105 1 is_stmt 0 view .LVU2882
 11147 001c 10BD     		pop	{r4, pc}
 11148              	.LVL1060:
 11149              	.L779:
 11150              	.LBB16:
1095:Core/Src/deca_device.c ****         if (dwt_read8bitoffsetreg(CHAN_CTRL_ID, 0) & 0x1)
 11151              		.loc 1 1095 9 is_stmt 1 view .LVU2883
1096:Core/Src/deca_device.c ****         {
 11152              		.loc 1 1096 9 view .LVU2884
1096:Core/Src/deca_device.c ****         {
 11153              		.loc 1 1096 13 is_stmt 0 view .LVU2885
 11154 001e 0021     		movs	r1, #0
 11155 0020 0848     		ldr	r0, .L784+8
 11156              	.LVL1061:
1096:Core/Src/deca_device.c ****         {
 11157              		.loc 1 1096 13 view .LVU2886
 11158 0022 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 11159              	.LVL1062:
ARM GAS  /tmp/cctZ3fzX.s 			page 325


1096:Core/Src/deca_device.c ****         {
 11160              		.loc 1 1096 12 view .LVU2887
 11161 0026 10F0010F 		tst	r0, #1
 11162 002a 04D1     		bne	.L782
1095:Core/Src/deca_device.c ****         if (dwt_read8bitoffsetreg(CHAN_CTRL_ID, 0) & 0x1)
 11163              		.loc 1 1095 17 view .LVU2888
 11164 002c 0521     		movs	r1, #5
 11165              	.L781:
 11166              	.LVL1063:
1100:Core/Src/deca_device.c ****     }
 11167              		.loc 1 1100 9 is_stmt 1 view .LVU2889
 11168 002e 2089     		ldrh	r0, [r4, #8]
 11169 0030 FFF7FEFF 		bl	dwt_calcbandwidthadj
 11170              	.LVL1064:
1100:Core/Src/deca_device.c ****     }
 11171              		.loc 1 1100 9 is_stmt 0 view .LVU2890
 11172 0034 EDE7     		b	.L780
 11173              	.LVL1065:
 11174              	.L782:
1098:Core/Src/deca_device.c ****         }
 11175              		.loc 1 1098 21 view .LVU2891
 11176 0036 0921     		movs	r1, #9
 11177 0038 F9E7     		b	.L781
 11178              	.L785:
 11179 003a 00BF     		.align	2
 11180              	.L784:
 11181 003c 1C000700 		.word	458780
 11182 0040 0C000100 		.word	65548
 11183 0044 14000100 		.word	65556
 11184              	.LBE16:
 11185              		.cfi_endproc
 11186              	.LFE33:
 11188              		.section	.text.dwt_calcpgcount,"ax",%progbits
 11189              		.align	1
 11190              		.global	dwt_calcpgcount
 11191              		.syntax unified
 11192              		.thumb
 11193              		.thumb_func
 11194              		.fpu fpv4-sp-d16
 11196              	dwt_calcpgcount:
 11197              	.LVL1066:
 11198              	.LFB130:
4537:Core/Src/deca_device.c ****     uint16_t count = 0;
 11199              		.loc 1 4537 1 is_stmt 1 view -0
 11200              		.cfi_startproc
 11201              		@ args = 0, pretend = 0, frame = 0
 11202              		@ frame_needed = 0, uses_anonymous_args = 0
4537:Core/Src/deca_device.c ****     uint16_t count = 0;
 11203              		.loc 1 4537 1 is_stmt 0 view .LVU2893
 11204 0000 38B5     		push	{r3, r4, r5, lr}
 11205              		.cfi_def_cfa_offset 16
 11206              		.cfi_offset 3, -16
 11207              		.cfi_offset 4, -12
 11208              		.cfi_offset 5, -8
 11209              		.cfi_offset 14, -4
 11210 0002 0546     		mov	r5, r0
 11211 0004 0C46     		mov	r4, r1
ARM GAS  /tmp/cctZ3fzX.s 			page 326


4538:Core/Src/deca_device.c **** 
 11212              		.loc 1 4538 5 is_stmt 1 view .LVU2894
 11213              	.LVL1067:
4541:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 0);
 11214              		.loc 1 4541 5 view .LVU2895
 11215 0006 0120     		movs	r0, #1
 11216              	.LVL1068:
4541:Core/Src/deca_device.c ****     dwt_enable_rf_tx(channel, 0);
 11217              		.loc 1 4541 5 is_stmt 0 view .LVU2896
 11218 0008 FFF7FEFF 		bl	dwt_force_clocks
 11219              	.LVL1069:
4542:Core/Src/deca_device.c ****     dwt_enable_rftx_blocks(channel);
 11220              		.loc 1 4542 5 is_stmt 1 view .LVU2897
 11221 000c 0021     		movs	r1, #0
 11222 000e 2046     		mov	r0, r4
 11223 0010 FFF7FEFF 		bl	dwt_enable_rf_tx
 11224              	.LVL1070:
4543:Core/Src/deca_device.c ****     
 11225              		.loc 1 4543 5 view .LVU2898
 11226 0014 2046     		mov	r0, r4
 11227 0016 FFF7FEFF 		bl	dwt_enable_rftx_blocks
 11228              	.LVL1071:
4545:Core/Src/deca_device.c **** 
 11229              		.loc 1 4545 5 view .LVU2899
 11230 001a 05F03F02 		and	r2, r5, #63
 11231 001e 0021     		movs	r1, #0
 11232 0020 0F48     		ldr	r0, .L789
 11233 0022 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 11234              	.LVL1072:
4548:Core/Src/deca_device.c ****     // Wait for calibration to complete
 11235              		.loc 1 4548 5 view .LVU2900
 11236 0026 0123     		movs	r3, #1
 11237 0028 FF22     		movs	r2, #255
 11238 002a 0021     		movs	r1, #0
 11239 002c 0D48     		ldr	r0, .L789+4
 11240 002e FFF7FEFF 		bl	dwt_modify8bitoffsetreg
 11241              	.LVL1073:
4550:Core/Src/deca_device.c ****     count = dwt_read16bitoffsetreg(PGC_STATUS_ID, PGC_STATUS_PG_DELAY_COUNT_BIT_OFFSET) & PGC_STATU
 11242              		.loc 1 4550 5 view .LVU2901
 11243              	.L787:
4550:Core/Src/deca_device.c ****     count = dwt_read16bitoffsetreg(PGC_STATUS_ID, PGC_STATUS_PG_DELAY_COUNT_BIT_OFFSET) & PGC_STATU
 11244              		.loc 1 4550 80 discriminator 1 view .LVU2902
4550:Core/Src/deca_device.c ****     count = dwt_read16bitoffsetreg(PGC_STATUS_ID, PGC_STATUS_PG_DELAY_COUNT_BIT_OFFSET) & PGC_STATU
 11245              		.loc 1 4550 11 discriminator 1 view .LVU2903
4550:Core/Src/deca_device.c ****     count = dwt_read16bitoffsetreg(PGC_STATUS_ID, PGC_STATUS_PG_DELAY_COUNT_BIT_OFFSET) & PGC_STATU
 11246              		.loc 1 4550 12 is_stmt 0 discriminator 1 view .LVU2904
 11247 0032 0021     		movs	r1, #0
 11248 0034 0B48     		ldr	r0, .L789+4
 11249 0036 FFF7FEFF 		bl	dwt_read8bitoffsetreg
 11250              	.LVL1074:
4550:Core/Src/deca_device.c ****     count = dwt_read16bitoffsetreg(PGC_STATUS_ID, PGC_STATUS_PG_DELAY_COUNT_BIT_OFFSET) & PGC_STATU
 11251              		.loc 1 4550 11 discriminator 1 view .LVU2905
 11252 003a 10F0010F 		tst	r0, #1
 11253 003e F8D1     		bne	.L787
4551:Core/Src/deca_device.c **** 
 11254              		.loc 1 4551 5 is_stmt 1 view .LVU2906
4551:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 327


 11255              		.loc 1 4551 13 is_stmt 0 view .LVU2907
 11256 0040 0021     		movs	r1, #0
 11257 0042 0948     		ldr	r0, .L789+8
 11258 0044 FFF7FEFF 		bl	dwt_read16bitoffsetreg
 11259              	.LVL1075:
4551:Core/Src/deca_device.c **** 
 11260              		.loc 1 4551 11 view .LVU2908
 11261 0048 C0F30B04 		ubfx	r4, r0, #0, #12
 11262              	.LVL1076:
4553:Core/Src/deca_device.c ****     dwt_disable_rf_tx(0);
 11263              		.loc 1 4553 5 is_stmt 1 view .LVU2909
 11264 004c FFF7FEFF 		bl	dwt_disable_rftx_blocks
 11265              	.LVL1077:
4554:Core/Src/deca_device.c ****     dwt_force_clocks(FORCE_CLK_AUTO);
 11266              		.loc 1 4554 5 view .LVU2910
 11267 0050 0020     		movs	r0, #0
 11268 0052 FFF7FEFF 		bl	dwt_disable_rf_tx
 11269              	.LVL1078:
4555:Core/Src/deca_device.c **** 
 11270              		.loc 1 4555 5 view .LVU2911
 11271 0056 0520     		movs	r0, #5
 11272 0058 FFF7FEFF 		bl	dwt_force_clocks
 11273              	.LVL1079:
4557:Core/Src/deca_device.c **** }
 11274              		.loc 1 4557 5 view .LVU2912
4558:Core/Src/deca_device.c **** 
 11275              		.loc 1 4558 1 is_stmt 0 view .LVU2913
 11276 005c 2046     		mov	r0, r4
 11277 005e 38BD     		pop	{r3, r4, r5, pc}
 11278              	.LVL1080:
 11279              	.L790:
4558:Core/Src/deca_device.c **** 
 11280              		.loc 1 4558 1 view .LVU2914
 11281              		.align	2
 11282              	.L789:
 11283 0060 1C000700 		.word	458780
 11284 0064 10000800 		.word	524304
 11285 0068 14000800 		.word	524308
 11286              		.cfi_endproc
 11287              	.LFE130:
 11289              		.section	.text.dwt_configure_aes,"ax",%progbits
 11290              		.align	1
 11291              		.global	dwt_configure_aes
 11292              		.syntax unified
 11293              		.thumb
 11294              		.thumb_func
 11295              		.fpu fpv4-sp-d16
 11297              	dwt_configure_aes:
 11298              	.LVL1081:
 11299              	.LFB131:
4571:Core/Src/deca_device.c ****     uint16_t tmp;
 11300              		.loc 1 4571 1 is_stmt 1 view -0
 11301              		.cfi_startproc
 11302              		@ args = 0, pretend = 0, frame = 0
 11303              		@ frame_needed = 0, uses_anonymous_args = 0
4571:Core/Src/deca_device.c ****     uint16_t tmp;
 11304              		.loc 1 4571 1 is_stmt 0 view .LVU2916
ARM GAS  /tmp/cctZ3fzX.s 			page 328


 11305 0000 08B5     		push	{r3, lr}
 11306              		.cfi_def_cfa_offset 8
 11307              		.cfi_offset 3, -8
 11308              		.cfi_offset 14, -4
4572:Core/Src/deca_device.c **** 
 11309              		.loc 1 4572 5 is_stmt 1 view .LVU2917
4574:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_size) << AES_CFG_KEY_SIZE_BIT_OFFSET;
 11310              		.loc 1 4574 5 view .LVU2918
4574:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_size) << AES_CFG_KEY_SIZE_BIT_OFFSET;
 11311              		.loc 1 4574 10 is_stmt 0 view .LVU2919
 11312 0002 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 11313              	.LVL1082:
4575:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_addr) << AES_CFG_KEY_ADDR_BIT_OFFSET;
 11314              		.loc 1 4575 5 is_stmt 1 view .LVU2920
4575:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_addr) << AES_CFG_KEY_ADDR_BIT_OFFSET;
 11315              		.loc 1 4575 27 is_stmt 0 view .LVU2921
 11316 0004 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
4575:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_addr) << AES_CFG_KEY_ADDR_BIT_OFFSET;
 11317              		.loc 1 4575 9 view .LVU2922
 11318 0006 42EA4302 		orr	r2, r2, r3, lsl #1
 11319              	.LVL1083:
4576:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_load) << AES_CFG_KEY_LOAD_BIT_OFFSET;
 11320              		.loc 1 4576 5 is_stmt 1 view .LVU2923
4576:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_load) << AES_CFG_KEY_LOAD_BIT_OFFSET;
 11321              		.loc 1 4576 27 is_stmt 0 view .LVU2924
 11322 000a 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
4576:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_load) << AES_CFG_KEY_LOAD_BIT_OFFSET;
 11323              		.loc 1 4576 9 view .LVU2925
 11324 000c 42EAC302 		orr	r2, r2, r3, lsl #3
 11325              	.LVL1084:
4577:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_src)  << AES_CFG_KEY_SRC_BIT_OFFSET;
 11326              		.loc 1 4577 5 is_stmt 1 view .LVU2926
4577:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_src)  << AES_CFG_KEY_SRC_BIT_OFFSET;
 11327              		.loc 1 4577 27 is_stmt 0 view .LVU2927
 11328 0010 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
4577:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->key_src)  << AES_CFG_KEY_SRC_BIT_OFFSET;
 11329              		.loc 1 4577 9 view .LVU2928
 11330 0012 42EA8312 		orr	r2, r2, r3, lsl #6
 11331              	.LVL1085:
4578:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->mic)      << AES_CFG_TAG_SIZE_BIT_OFFSET;
 11332              		.loc 1 4578 5 is_stmt 1 view .LVU2929
4578:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->mic)      << AES_CFG_TAG_SIZE_BIT_OFFSET;
 11333              		.loc 1 4578 27 is_stmt 0 view .LVU2930
 11334 0016 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
4578:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->mic)      << AES_CFG_TAG_SIZE_BIT_OFFSET;
 11335              		.loc 1 4578 9 view .LVU2931
 11336 0018 42EAC312 		orr	r2, r2, r3, lsl #7
 11337              	.LVL1086:
4579:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_core_type)    << AES_CFG_CORE_SEL_BIT_OFFSET;
 11338              		.loc 1 4579 5 is_stmt 1 view .LVU2932
4579:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_core_type)    << AES_CFG_CORE_SEL_BIT_OFFSET;
 11339              		.loc 1 4579 27 is_stmt 0 view .LVU2933
 11340 001c 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
4579:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_core_type)    << AES_CFG_CORE_SEL_BIT_OFFSET;
 11341              		.loc 1 4579 9 view .LVU2934
 11342 001e 42EA0322 		orr	r2, r2, r3, lsl #8
 11343              	.LVL1087:
ARM GAS  /tmp/cctZ3fzX.s 			page 329


4580:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_key_otp_type) << AES_CFG_KEY_OTP_BIT_OFFSET;
 11344              		.loc 1 4580 5 is_stmt 1 view .LVU2935
4580:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_key_otp_type) << AES_CFG_KEY_OTP_BIT_OFFSET;
 11345              		.loc 1 4580 27 is_stmt 0 view .LVU2936
 11346 0022 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
4580:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_key_otp_type) << AES_CFG_KEY_OTP_BIT_OFFSET;
 11347              		.loc 1 4580 47 view .LVU2937
 11348 0024 DB02     		lsls	r3, r3, #11
 11349 0026 9BB2     		uxth	r3, r3
4580:Core/Src/deca_device.c ****     tmp |= ((uint32_t)pCfg->aes_key_otp_type) << AES_CFG_KEY_OTP_BIT_OFFSET;
 11350              		.loc 1 4580 9 view .LVU2938
 11351 0028 1A43     		orrs	r2, r2, r3
 11352              	.LVL1088:
4581:Core/Src/deca_device.c **** 
 11353              		.loc 1 4581 5 is_stmt 1 view .LVU2939
4581:Core/Src/deca_device.c **** 
 11354              		.loc 1 4581 27 is_stmt 0 view .LVU2940
 11355 002a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
4581:Core/Src/deca_device.c **** 
 11356              		.loc 1 4581 47 view .LVU2941
 11357 002c 1B03     		lsls	r3, r3, #12
 11358 002e 9BB2     		uxth	r3, r3
 11359              	.LVL1089:
4583:Core/Src/deca_device.c **** }
 11360              		.loc 1 4583 5 is_stmt 1 view .LVU2942
 11361 0030 1A43     		orrs	r2, r2, r3
 11362              	.LVL1090:
4583:Core/Src/deca_device.c **** }
 11363              		.loc 1 4583 5 is_stmt 0 view .LVU2943
 11364 0032 0021     		movs	r1, #0
 11365 0034 0148     		ldr	r0, .L793
 11366              	.LVL1091:
4583:Core/Src/deca_device.c **** }
 11367              		.loc 1 4583 5 view .LVU2944
 11368 0036 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 11369              	.LVL1092:
4584:Core/Src/deca_device.c **** 
 11370              		.loc 1 4584 1 view .LVU2945
 11371 003a 08BD     		pop	{r3, pc}
 11372              	.L794:
 11373              		.align	2
 11374              	.L793:
 11375 003c 30000100 		.word	65584
 11376              		.cfi_endproc
 11377              	.LFE131:
 11379              		.section	.text.dwt_mic_size_from_bytes,"ax",%progbits
 11380              		.align	1
 11381              		.global	dwt_mic_size_from_bytes
 11382              		.syntax unified
 11383              		.thumb
 11384              		.thumb_func
 11385              		.fpu fpv4-sp-d16
 11387              	dwt_mic_size_from_bytes:
 11388              	.LVL1093:
 11389              	.LFB132:
4593:Core/Src/deca_device.c ****     dwt_mic_size_e  mic_size=MIC_0;
 11390              		.loc 1 4593 1 is_stmt 1 view -0
ARM GAS  /tmp/cctZ3fzX.s 			page 330


 11391              		.cfi_startproc
 11392              		@ args = 0, pretend = 0, frame = 0
 11393              		@ frame_needed = 0, uses_anonymous_args = 0
 11394              		@ link register save eliminated.
4594:Core/Src/deca_device.c **** 
 11395              		.loc 1 4594 5 view .LVU2947
4596:Core/Src/deca_device.c ****     {
 11396              		.loc 1 4596 5 view .LVU2948
4596:Core/Src/deca_device.c ****     {
 11397              		.loc 1 4596 8 is_stmt 0 view .LVU2949
 11398 0000 0346     		mov	r3, r0
 11399 0002 10B1     		cbz	r0, .L796
4598:Core/Src/deca_device.c ****     }
 11400              		.loc 1 4598 9 is_stmt 1 view .LVU2950
4598:Core/Src/deca_device.c ****     }
 11401              		.loc 1 4598 18 is_stmt 0 view .LVU2951
 11402 0004 4308     		lsrs	r3, r0, #1
4598:Core/Src/deca_device.c ****     }
 11403              		.loc 1 4598 17 view .LVU2952
 11404 0006 013B     		subs	r3, r3, #1
 11405 0008 DBB2     		uxtb	r3, r3
 11406              	.LVL1094:
 11407              	.L796:
4600:Core/Src/deca_device.c **** }
 11408              		.loc 1 4600 5 is_stmt 1 view .LVU2953
4601:Core/Src/deca_device.c **** 
 11409              		.loc 1 4601 1 is_stmt 0 view .LVU2954
 11410 000a 1846     		mov	r0, r3
 11411              	.LVL1095:
4601:Core/Src/deca_device.c **** 
 11412              		.loc 1 4601 1 view .LVU2955
 11413 000c 7047     		bx	lr
 11414              		.cfi_endproc
 11415              	.LFE132:
 11417              		.section	.text.dwt_set_keyreg_128,"ax",%progbits
 11418              		.align	1
 11419              		.global	dwt_set_keyreg_128
 11420              		.syntax unified
 11421              		.thumb
 11422              		.thumb_func
 11423              		.fpu fpv4-sp-d16
 11425              	dwt_set_keyreg_128:
 11426              	.LVL1096:
 11427              	.LFB133:
4613:Core/Src/deca_device.c ****     /* program Key to the register : only 128 bit key can be used */
 11428              		.loc 1 4613 1 is_stmt 1 view -0
 11429              		.cfi_startproc
 11430              		@ args = 0, pretend = 0, frame = 0
 11431              		@ frame_needed = 0, uses_anonymous_args = 0
4613:Core/Src/deca_device.c ****     /* program Key to the register : only 128 bit key can be used */
 11432              		.loc 1 4613 1 is_stmt 0 view .LVU2957
 11433 0000 10B5     		push	{r4, lr}
 11434              		.cfi_def_cfa_offset 8
 11435              		.cfi_offset 4, -8
 11436              		.cfi_offset 14, -4
 11437 0002 0446     		mov	r4, r0
4615:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY1_ID, (uint32_t)key->key1);
ARM GAS  /tmp/cctZ3fzX.s 			page 331


 11438              		.loc 1 4615 5 is_stmt 1 view .LVU2958
 11439 0004 0268     		ldr	r2, [r0]
 11440 0006 0021     		movs	r1, #0
 11441 0008 0948     		ldr	r0, .L799
 11442              	.LVL1097:
4615:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY1_ID, (uint32_t)key->key1);
 11443              		.loc 1 4615 5 is_stmt 0 view .LVU2959
 11444 000a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 11445              	.LVL1098:
4616:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY2_ID, (uint32_t)key->key2);
 11446              		.loc 1 4616 5 is_stmt 1 view .LVU2960
 11447 000e 6268     		ldr	r2, [r4, #4]
 11448 0010 0021     		movs	r1, #0
 11449 0012 0848     		ldr	r0, .L799+4
 11450 0014 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 11451              	.LVL1099:
4617:Core/Src/deca_device.c ****     dwt_write32bitreg(AES_KEY3_ID, (uint32_t)key->key3);
 11452              		.loc 1 4617 5 view .LVU2961
 11453 0018 A268     		ldr	r2, [r4, #8]
 11454 001a 0021     		movs	r1, #0
 11455 001c 0648     		ldr	r0, .L799+8
 11456 001e FFF7FEFF 		bl	dwt_write32bitoffsetreg
 11457              	.LVL1100:
4618:Core/Src/deca_device.c **** }
 11458              		.loc 1 4618 5 view .LVU2962
 11459 0022 E268     		ldr	r2, [r4, #12]
 11460 0024 0021     		movs	r1, #0
 11461 0026 0548     		ldr	r0, .L799+12
 11462 0028 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 11463              	.LVL1101:
4619:Core/Src/deca_device.c **** 
 11464              		.loc 1 4619 1 is_stmt 0 view .LVU2963
 11465 002c 10BD     		pop	{r4, pc}
 11466              	.LVL1102:
 11467              	.L800:
4619:Core/Src/deca_device.c **** 
 11468              		.loc 1 4619 1 view .LVU2964
 11469 002e 00BF     		.align	2
 11470              	.L799:
 11471 0030 54000100 		.word	65620
 11472 0034 58000100 		.word	65624
 11473 0038 5C000100 		.word	65628
 11474 003c 60000100 		.word	65632
 11475              		.cfi_endproc
 11476              	.LFE133:
 11478              		.section	.text.dwt_do_aes,"ax",%progbits
 11479              		.align	1
 11480              		.global	dwt_do_aes
 11481              		.syntax unified
 11482              		.thumb
 11483              		.thumb_func
 11484              		.fpu fpv4-sp-d16
 11486              	dwt_do_aes:
 11487              	.LVL1103:
 11488              	.LFB137:
4705:Core/Src/deca_device.c **** 
4706:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
ARM GAS  /tmp/cctZ3fzX.s 			page 332


4707:Core/Src/deca_device.c ****  * @brief   This function provides the API for the job of encrypt/decrypt the data block
4708:Core/Src/deca_device.c ****  *
4709:Core/Src/deca_device.c ****  *          128 bit key shall be pre-loaded with dwt_set_aes_key()
4710:Core/Src/deca_device.c ****  *          dwt_configure_aes
4711:Core/Src/deca_device.c ****  *
4712:Core/Src/deca_device.c ****  *          supports AES_KEY_Src_Register mode only
4713:Core/Src/deca_device.c ****  *          packet sizes < 127
4714:Core/Src/deca_device.c ****  *          note, the "nonce" shall be unique for every transaction
4715:Core/Src/deca_device.c ****  * @param job - pointer to AES job, contains data info and encryption info.
4716:Core/Src/deca_device.c ****  * @param core_type - Core type
4717:Core/Src/deca_device.c ****  *
4718:Core/Src/deca_device.c ****  * @return  AES_STS_ID status bits
4719:Core/Src/deca_device.c ****  *
4720:Core/Src/deca_device.c ****  *
4721:Core/Src/deca_device.c ****  */
4722:Core/Src/deca_device.c **** int8_t dwt_do_aes(dwt_aes_job_t *job, dwt_aes_core_type_e core_type)
4723:Core/Src/deca_device.c **** {
 11489              		.loc 1 4723 1 is_stmt 1 view -0
 11490              		.cfi_startproc
 11491              		@ args = 0, pretend = 0, frame = 0
 11492              		@ frame_needed = 0, uses_anonymous_args = 0
4724:Core/Src/deca_device.c ****     uint32_t      tmp,dest_reg;
 11493              		.loc 1 4724 5 view .LVU2966
4725:Core/Src/deca_device.c ****     uint16_t    allow_size;
 11494              		.loc 1 4725 5 view .LVU2967
4726:Core/Src/deca_device.c ****     uint8_t     ret;
 11495              		.loc 1 4726 5 view .LVU2968
4727:Core/Src/deca_device.c ****     dwt_aes_src_port_e src_port;
 11496              		.loc 1 4727 5 view .LVU2969
4728:Core/Src/deca_device.c ****     dwt_aes_dst_port_e dst_port;
 11497              		.loc 1 4728 5 view .LVU2970
4729:Core/Src/deca_device.c **** 
4730:Core/Src/deca_device.c ****     if(job->mic_size == MIC_ERROR)
 11498              		.loc 1 4730 5 view .LVU2971
 11499              		.loc 1 4730 11 is_stmt 0 view .LVU2972
 11500 0000 C37C     		ldrb	r3, [r0, #19]	@ zero_extendqisi2
 11501              		.loc 1 4730 7 view .LVU2973
 11502 0002 FF2B     		cmp	r3, #255
 11503 0004 00F0AE80 		beq	.L815
4723:Core/Src/deca_device.c ****     uint32_t      tmp,dest_reg;
 11504              		.loc 1 4723 1 view .LVU2974
 11505 0008 70B5     		push	{r4, r5, r6, lr}
 11506              		.cfi_def_cfa_offset 16
 11507              		.cfi_offset 4, -16
 11508              		.cfi_offset 5, -12
 11509              		.cfi_offset 6, -8
 11510              		.cfi_offset 14, -4
 11511 000a 0446     		mov	r4, r0
4731:Core/Src/deca_device.c ****     {
4732:Core/Src/deca_device.c ****         return ERROR_WRONG_MIC_SIZE;
4733:Core/Src/deca_device.c ****     }
4734:Core/Src/deca_device.c **** 
4735:Core/Src/deca_device.c ****     /* program Initialization Vector
4736:Core/Src/deca_device.c ****      * */
4737:Core/Src/deca_device.c ****     if(core_type==AES_core_type_GCM)
 11512              		.loc 1 4737 5 is_stmt 1 view .LVU2975
 11513              		.loc 1 4737 7 is_stmt 0 view .LVU2976
ARM GAS  /tmp/cctZ3fzX.s 			page 333


 11514 000c 0029     		cmp	r1, #0
 11515 000e 44D1     		bne	.L803
4738:Core/Src/deca_device.c ****     {
4739:Core/Src/deca_device.c ****         dwt_update_nonce_GCM(job->nonce);
 11516              		.loc 1 4739 9 is_stmt 1 view .LVU2977
 11517 0010 0068     		ldr	r0, [r0]
 11518              	.LVL1104:
 11519              		.loc 1 4739 9 is_stmt 0 view .LVU2978
 11520 0012 FFF7FEFF 		bl	dwt_update_nonce_GCM
 11521              	.LVL1105:
 11522              	.L804:
4740:Core/Src/deca_device.c ****     }
4741:Core/Src/deca_device.c ****     else
4742:Core/Src/deca_device.c ****     {
4743:Core/Src/deca_device.c ****         dwt_update_nonce_CCM(job->nonce, job->payload_len);
4744:Core/Src/deca_device.c ****     }
4745:Core/Src/deca_device.c **** 
4746:Core/Src/deca_device.c ****     /* write data to be encrypted.
4747:Core/Src/deca_device.c ****      * for decryption data should be present in the src buffer
4748:Core/Src/deca_device.c ****      * */
4749:Core/Src/deca_device.c ****     tmp=job->header_len + job->payload_len;
 11523              		.loc 1 4749 5 is_stmt 1 view .LVU2979
 11524              		.loc 1 4749 12 is_stmt 0 view .LVU2980
 11525 0016 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 11526              		.loc 1 4749 30 view .LVU2981
 11527 0018 E389     		ldrh	r3, [r4, #14]
 11528              		.loc 1 4749 25 view .LVU2982
 11529 001a D118     		adds	r1, r2, r3
 11530              	.LVL1106:
4750:Core/Src/deca_device.c **** 
4751:Core/Src/deca_device.c ****     if (job->mode == AES_Encrypt)
 11531              		.loc 1 4751 5 is_stmt 1 view .LVU2983
 11532              		.loc 1 4751 12 is_stmt 0 view .LVU2984
 11533 001c A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 11534              		.loc 1 4751 8 view .LVU2985
 11535 001e 0028     		cmp	r0, #0
 11536 0020 40D1     		bne	.L805
4752:Core/Src/deca_device.c ****     {
4753:Core/Src/deca_device.c ****         if (job->src_port==AES_Src_Scratch)
 11537              		.loc 1 4753 9 is_stmt 1 view .LVU2986
 11538              		.loc 1 4753 16 is_stmt 0 view .LVU2987
 11539 0022 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 11540              		.loc 1 4753 12 view .LVU2988
 11541 0024 002B     		cmp	r3, #0
 11542 0026 43D1     		bne	.L816
4754:Core/Src/deca_device.c ****         {
4755:Core/Src/deca_device.c ****             allow_size=SCRATCH_BUFFER_MAX_LEN;
 11543              		.loc 1 4755 23 view .LVU2989
 11544 0028 7F23     		movs	r3, #127
4756:Core/Src/deca_device.c ****             dest_reg=SCRATCH_RAM_ID;
 11545              		.loc 1 4756 21 view .LVU2990
 11546 002a 4FF4B015 		mov	r5, #1441792
 11547              	.L806:
 11548              	.LVL1107:
4757:Core/Src/deca_device.c ****         }
4758:Core/Src/deca_device.c ****         else
4759:Core/Src/deca_device.c ****         {
ARM GAS  /tmp/cctZ3fzX.s 			page 334


4760:Core/Src/deca_device.c ****             allow_size=TX_BUFFER_MAX_LEN;
4761:Core/Src/deca_device.c ****             dest_reg=TX_BUFFER_ID;
4762:Core/Src/deca_device.c ****         }
4763:Core/Src/deca_device.c ****     }
4764:Core/Src/deca_device.c ****     else if (job->mode == AES_Decrypt)
4765:Core/Src/deca_device.c ****     {
4766:Core/Src/deca_device.c ****         if (job->dst_port==AES_Dst_Scratch)
4767:Core/Src/deca_device.c ****         {
4768:Core/Src/deca_device.c ****             allow_size=SCRATCH_BUFFER_MAX_LEN;
4769:Core/Src/deca_device.c ****         }
4770:Core/Src/deca_device.c ****         else
4771:Core/Src/deca_device.c ****         {
4772:Core/Src/deca_device.c ****             allow_size=RX_BUFFER_MAX_LEN;
4773:Core/Src/deca_device.c ****         }
4774:Core/Src/deca_device.c ****     }
4775:Core/Src/deca_device.c ****     else
4776:Core/Src/deca_device.c ****     {
4777:Core/Src/deca_device.c ****         return ERROR_WRONG_MODE;
4778:Core/Src/deca_device.c ****     }
4779:Core/Src/deca_device.c **** 
4780:Core/Src/deca_device.c ****     if (tmp > (allow_size - job->mic_size - (unsigned int)FCS_LEN))
 11549              		.loc 1 4780 5 is_stmt 1 view .LVU2991
 11550              		.loc 1 4780 32 is_stmt 0 view .LVU2992
 11551 002e 94F813C0 		ldrb	ip, [r4, #19]	@ zero_extendqisi2
 11552              		.loc 1 4780 27 view .LVU2993
 11553 0032 A3EB0C03 		sub	r3, r3, ip
 11554              	.LVL1108:
 11555              		.loc 1 4780 43 view .LVU2994
 11556 0036 023B     		subs	r3, r3, #2
 11557              		.loc 1 4780 8 view .LVU2995
 11558 0038 8B42     		cmp	r3, r1
 11559 003a C0F09980 		bcc	.L819
4781:Core/Src/deca_device.c ****     {
4782:Core/Src/deca_device.c ****         return ERROR_DATA_SIZE;
4783:Core/Src/deca_device.c ****     }
4784:Core/Src/deca_device.c **** 
4785:Core/Src/deca_device.c ****     if (job->mode == AES_Encrypt)
 11560              		.loc 1 4785 5 is_stmt 1 view .LVU2996
 11561              		.loc 1 4785 8 is_stmt 0 view .LVU2997
 11562 003e 0028     		cmp	r0, #0
 11563 0040 3ED0     		beq	.L829
 11564              	.LVL1109:
 11565              	.L807:
4786:Core/Src/deca_device.c ****     {
4787:Core/Src/deca_device.c ****         dwt_writetodevice(dest_reg, 0, job->header_len, job->header);                   /*!< non-en
4788:Core/Src/deca_device.c ****         dwt_writetodevice(dest_reg, job->header_len, job->payload_len, job->payload);   /*!< data t
4789:Core/Src/deca_device.c ****     }
4790:Core/Src/deca_device.c **** 
4791:Core/Src/deca_device.c ****     /* Set SRC and DST ports in memory.
4792:Core/Src/deca_device.c ****      * Current implementation uses frames started from start of the desired port
4793:Core/Src/deca_device.c ****      * */
4794:Core/Src/deca_device.c ****     src_port = job->src_port ;
 11566              		.loc 1 4794 5 is_stmt 1 view .LVU2998
 11567              		.loc 1 4794 14 is_stmt 0 view .LVU2999
 11568 0042 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 11569              	.LVL1110:
4795:Core/Src/deca_device.c ****     if ((job->src_port == AES_Src_Rx_buf_0) || (job->src_port == AES_Src_Rx_buf_1))
ARM GAS  /tmp/cctZ3fzX.s 			page 335


 11570              		.loc 1 4795 5 is_stmt 1 view .LVU3000
 11571              		.loc 1 4795 45 is_stmt 0 view .LVU3001
 11572 0044 4B1E     		subs	r3, r1, #1
 11573 0046 DBB2     		uxtb	r3, r3
 11574              		.loc 1 4795 8 view .LVU3002
 11575 0048 012B     		cmp	r3, #1
 11576 004a 45D9     		bls	.L830
 11577              	.LVL1111:
 11578              	.L808:
4796:Core/Src/deca_device.c ****     {
4797:Core/Src/deca_device.c ****         if (pdw3000local->dblbuffon == DBL_BUFF_ACCESS_BUFFER_1)  //if the flag is 0x3 we are readi
4798:Core/Src/deca_device.c ****         {
4799:Core/Src/deca_device.c ****             src_port = AES_Src_Rx_buf_1;
4800:Core/Src/deca_device.c ****         }
4801:Core/Src/deca_device.c ****         else
4802:Core/Src/deca_device.c ****         {
4803:Core/Src/deca_device.c ****             src_port = AES_Src_Rx_buf_0;
4804:Core/Src/deca_device.c ****         }
4805:Core/Src/deca_device.c ****     }
4806:Core/Src/deca_device.c **** 
4807:Core/Src/deca_device.c ****     dst_port = job->dst_port ;
 11579              		.loc 1 4807 5 is_stmt 1 view .LVU3003
 11580              		.loc 1 4807 14 is_stmt 0 view .LVU3004
 11581 004c 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
 11582              	.LVL1112:
4808:Core/Src/deca_device.c ****     if ((job->dst_port == AES_Dst_Rx_buf_0) || (job->dst_port == AES_Dst_Rx_buf_1))
 11583              		.loc 1 4808 5 is_stmt 1 view .LVU3005
 11584              		.loc 1 4808 45 is_stmt 0 view .LVU3006
 11585 004e 531E     		subs	r3, r2, #1
 11586 0050 DBB2     		uxtb	r3, r3
 11587              		.loc 1 4808 8 view .LVU3007
 11588 0052 012B     		cmp	r3, #1
 11589 0054 49D9     		bls	.L831
4809:Core/Src/deca_device.c ****     {
4810:Core/Src/deca_device.c ****         if (pdw3000local->dblbuffon == DBL_BUFF_ACCESS_BUFFER_1)  //if the flag is 0x3 we are readi
4811:Core/Src/deca_device.c ****         {
4812:Core/Src/deca_device.c ****             dst_port = AES_Dst_Rx_buf_1;
4813:Core/Src/deca_device.c ****         }
4814:Core/Src/deca_device.c ****         else
4815:Core/Src/deca_device.c ****         {
4816:Core/Src/deca_device.c ****             dst_port = AES_Dst_Rx_buf_0;
4817:Core/Src/deca_device.c ****         }
4818:Core/Src/deca_device.c ****     }
4819:Core/Src/deca_device.c ****     else if(job->dst_port == AES_Dst_STS_key)
 11590              		.loc 1 4819 10 is_stmt 1 view .LVU3008
 11591              		.loc 1 4819 12 is_stmt 0 view .LVU3009
 11592 0056 042A     		cmp	r2, #4
 11593 0058 50D0     		beq	.L832
 11594              	.LVL1113:
 11595              	.L810:
4820:Core/Src/deca_device.c ****     {
4821:Core/Src/deca_device.c ****         if(job->payload_len > STS_LEN_128BIT) //when writing to STS registers (destination port) pa
4822:Core/Src/deca_device.c ****         {
4823:Core/Src/deca_device.c ****             return ERROR_PAYLOAD_SIZE;
4824:Core/Src/deca_device.c ****         }
4825:Core/Src/deca_device.c ****     }
4826:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 336


4827:Core/Src/deca_device.c ****     tmp = (((uint32_t)src_port) << DMA_CFG0_SRC_PORT_BIT_OFFSET) |\
 11596              		.loc 1 4827 5 is_stmt 1 view .LVU3010
4828:Core/Src/deca_device.c ****           (((uint32_t)dst_port) << DMA_CFG0_DST_PORT_BIT_OFFSET);
4829:Core/Src/deca_device.c **** 
4830:Core/Src/deca_device.c ****     dwt_write32bitreg(DMA_CFG0_ID, tmp);
 11597              		.loc 1 4830 5 view .LVU3011
 11598 005a 41EA4232 		orr	r2, r1, r2, lsl #13
 11599              	.LVL1114:
 11600              		.loc 1 4830 5 is_stmt 0 view .LVU3012
 11601 005e 0021     		movs	r1, #0
 11602              	.LVL1115:
 11603              		.loc 1 4830 5 view .LVU3013
 11604 0060 4548     		ldr	r0, .L840
 11605 0062 FFF7FEFF 		bl	dwt_write32bitoffsetreg
 11606              	.LVL1116:
4831:Core/Src/deca_device.c **** 
4832:Core/Src/deca_device.c ****     /* fill header length and payload length - the only known information of the frame.
4833:Core/Src/deca_device.c ****      * Note, the payload length does not include MIC and FCS lengths.
4834:Core/Src/deca_device.c ****      * So, if overall rx_frame length is 100 and header length is 10, MIC is 16 and FCS is 2,
4835:Core/Src/deca_device.c ****      * then payload length is 100-10-16-2 = 72 bytes.
4836:Core/Src/deca_device.c ****      * */
4837:Core/Src/deca_device.c ****     tmp = (DMA_CFG1_HDR_SIZE_BIT_MASK  & (((uint32_t)job->header_len)  << DMA_CFG1_HDR_SIZE_BIT_OFF
 11607              		.loc 1 4837 5 is_stmt 1 view .LVU3014
 11608              		.loc 1 4837 57 is_stmt 0 view .LVU3015
 11609 0066 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 11610              		.loc 1 4837 40 view .LVU3016
 11611 0068 02F07F02 		and	r2, r2, #127
4838:Core/Src/deca_device.c ****           (DMA_CFG1_PYLD_SIZE_BIT_MASK & (((uint32_t)job->payload_len) << DMA_CFG1_PYLD_SIZE_BIT_OF
 11612              		.loc 1 4838 57 view .LVU3017
 11613 006c E189     		ldrh	r1, [r4, #14]
 11614              		.loc 1 4838 40 view .LVU3018
 11615 006e 434B     		ldr	r3, .L840+4
 11616 0070 03EAC113 		and	r3, r3, r1, lsl #7
 11617              	.LVL1117:
4839:Core/Src/deca_device.c **** 
4840:Core/Src/deca_device.c ****     dwt_write32bitreg(DMA_CFG1_ID, tmp);
 11618              		.loc 1 4840 5 is_stmt 1 view .LVU3019
 11619 0074 1A43     		orrs	r2, r2, r3
 11620              	.LVL1118:
 11621              		.loc 1 4840 5 is_stmt 0 view .LVU3020
 11622 0076 0021     		movs	r1, #0
 11623 0078 4148     		ldr	r0, .L840+8
 11624 007a FFF7FEFF 		bl	dwt_write32bitoffsetreg
 11625              	.LVL1119:
4841:Core/Src/deca_device.c **** 
4842:Core/Src/deca_device.c ****     /* start AES action encrypt/decrypt */
4843:Core/Src/deca_device.c ****     dwt_write8bitoffsetreg(AES_START_ID, 0, AES_START_AES_START_BIT_MASK);
 11626              		.loc 1 4843 5 is_stmt 1 view .LVU3021
 11627 007e 0122     		movs	r2, #1
 11628 0080 0021     		movs	r1, #0
 11629 0082 4048     		ldr	r0, .L840+12
 11630 0084 FFF7FEFF 		bl	dwt_write8bitoffsetreg
 11631              	.LVL1120:
4844:Core/Src/deca_device.c ****     ret = dwt_wait_aes_poll();
 11632              		.loc 1 4844 5 view .LVU3022
 11633              		.loc 1 4844 11 is_stmt 0 view .LVU3023
 11634 0088 FFF7FEFF 		bl	dwt_wait_aes_poll
ARM GAS  /tmp/cctZ3fzX.s 			page 337


 11635              	.LVL1121:
 11636 008c 0546     		mov	r5, r0
 11637              	.LVL1122:
4845:Core/Src/deca_device.c **** 
4846:Core/Src/deca_device.c ****     /* Read plain header and decrypted payload on correct AES decryption
4847:Core/Src/deca_device.c ****      * and if instructed to do so, i.e. if job->mode == AES_Decrypt and
4848:Core/Src/deca_device.c ****      * job->header or job->payload addresses are exist
4849:Core/Src/deca_device.c ****      * */
4850:Core/Src/deca_device.c **** 
4851:Core/Src/deca_device.c ****     if(((ret & ~(AES_STS_RAM_EMPTY_BIT_MASK|AES_STS_RAM_FULL_BIT_MASK)) == AES_STS_AES_DONE_BIT_MAS
 11638              		.loc 1 4851 5 is_stmt 1 view .LVU3024
 11639              		.loc 1 4851 14 is_stmt 0 view .LVU3025
 11640 008e 20F03003 		bic	r3, r0, #48
 11641              		.loc 1 4851 7 view .LVU3026
 11642 0092 012B     		cmp	r3, #1
 11643 0094 38D0     		beq	.L833
 11644              	.LVL1123:
 11645              	.L811:
4852:Core/Src/deca_device.c ****             && (job->mode == AES_Decrypt))
4853:Core/Src/deca_device.c ****     {
4854:Core/Src/deca_device.c ****         uint32_t    read_addr;
4855:Core/Src/deca_device.c **** 
4856:Core/Src/deca_device.c ****         if ((job->dst_port == AES_Dst_Rx_buf_0) || (job->dst_port == AES_Dst_Rx_buf_1))
4857:Core/Src/deca_device.c ****         {
4858:Core/Src/deca_device.c ****             if (pdw3000local->dblbuffon == DBL_BUFF_ACCESS_BUFFER_1)  //if the flag is 0x3 we are r
4859:Core/Src/deca_device.c ****             {
4860:Core/Src/deca_device.c ****                 read_addr = RX_BUFFER_1_ID;
4861:Core/Src/deca_device.c ****             }
4862:Core/Src/deca_device.c ****             else
4863:Core/Src/deca_device.c ****             {
4864:Core/Src/deca_device.c ****                 read_addr = RX_BUFFER_0_ID;
4865:Core/Src/deca_device.c ****             }
4866:Core/Src/deca_device.c ****         }
4867:Core/Src/deca_device.c ****         else if (job->dst_port == AES_Dst_Tx_buf)
4868:Core/Src/deca_device.c ****         {
4869:Core/Src/deca_device.c ****             read_addr = TX_BUFFER_ID;
4870:Core/Src/deca_device.c ****         }
4871:Core/Src/deca_device.c ****         else
4872:Core/Src/deca_device.c ****         {
4873:Core/Src/deca_device.c ****             read_addr = SCRATCH_RAM_ID;
4874:Core/Src/deca_device.c ****         }
4875:Core/Src/deca_device.c **** 
4876:Core/Src/deca_device.c ****         if(job->header != NULL)
4877:Core/Src/deca_device.c ****         {
4878:Core/Src/deca_device.c ****             if (job->header_len)
4879:Core/Src/deca_device.c ****             {
4880:Core/Src/deca_device.c ****                 dwt_readfromdevice(read_addr, 0, job->header_len, job->header);
4881:Core/Src/deca_device.c ****             }
4882:Core/Src/deca_device.c ****         }
4883:Core/Src/deca_device.c **** 
4884:Core/Src/deca_device.c ****         if(job->payload != NULL)
4885:Core/Src/deca_device.c ****         {
4886:Core/Src/deca_device.c ****             if (job->payload_len)
4887:Core/Src/deca_device.c ****             {
4888:Core/Src/deca_device.c ****                 dwt_readfromdevice(read_addr, job->header_len, job->payload_len, job->payload);
4889:Core/Src/deca_device.c ****             }
4890:Core/Src/deca_device.c ****         }
ARM GAS  /tmp/cctZ3fzX.s 			page 338


4891:Core/Src/deca_device.c ****     }
4892:Core/Src/deca_device.c ****     return (ret);
 11646              		.loc 1 4892 5 is_stmt 1 view .LVU3027
 11647              		.loc 1 4892 12 is_stmt 0 view .LVU3028
 11648 0096 68B2     		sxtb	r0, r5
 11649              	.L802:
4893:Core/Src/deca_device.c **** }
 11650              		.loc 1 4893 1 view .LVU3029
 11651 0098 70BD     		pop	{r4, r5, r6, pc}
 11652              	.LVL1124:
 11653              	.L803:
4743:Core/Src/deca_device.c ****     }
 11654              		.loc 1 4743 9 is_stmt 1 view .LVU3030
 11655 009a C189     		ldrh	r1, [r0, #14]
 11656              	.LVL1125:
4743:Core/Src/deca_device.c ****     }
 11657              		.loc 1 4743 9 is_stmt 0 view .LVU3031
 11658 009c 0068     		ldr	r0, [r0]
 11659              	.LVL1126:
4743:Core/Src/deca_device.c ****     }
 11660              		.loc 1 4743 9 view .LVU3032
 11661 009e FFF7FEFF 		bl	dwt_update_nonce_CCM
 11662              	.LVL1127:
 11663 00a2 B8E7     		b	.L804
 11664              	.LVL1128:
 11665              	.L805:
4764:Core/Src/deca_device.c ****     {
 11666              		.loc 1 4764 10 is_stmt 1 view .LVU3033
4764:Core/Src/deca_device.c ****     {
 11667              		.loc 1 4764 13 is_stmt 0 view .LVU3034
 11668 00a4 0128     		cmp	r0, #1
 11669 00a6 60D1     		bne	.L817
4766:Core/Src/deca_device.c ****         {
 11670              		.loc 1 4766 9 is_stmt 1 view .LVU3035
4766:Core/Src/deca_device.c ****         {
 11671              		.loc 1 4766 16 is_stmt 0 view .LVU3036
 11672 00a8 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
4766:Core/Src/deca_device.c ****         {
 11673              		.loc 1 4766 12 view .LVU3037
 11674 00aa 33B9     		cbnz	r3, .L818
4768:Core/Src/deca_device.c ****         }
 11675              		.loc 1 4768 23 view .LVU3038
 11676 00ac 7F23     		movs	r3, #127
 11677 00ae BEE7     		b	.L806
 11678              	.L816:
4760:Core/Src/deca_device.c ****             dest_reg=TX_BUFFER_ID;
 11679              		.loc 1 4760 23 view .LVU3039
 11680 00b0 4FF48063 		mov	r3, #1024
4761:Core/Src/deca_device.c ****         }
 11681              		.loc 1 4761 21 view .LVU3040
 11682 00b4 4FF4A015 		mov	r5, #1310720
 11683 00b8 B9E7     		b	.L806
 11684              	.L818:
4772:Core/Src/deca_device.c ****         }
 11685              		.loc 1 4772 23 view .LVU3041
 11686 00ba 40F2FF33 		movw	r3, #1023
 11687 00be B6E7     		b	.L806
ARM GAS  /tmp/cctZ3fzX.s 			page 339


 11688              	.LVL1129:
 11689              	.L829:
4787:Core/Src/deca_device.c ****         dwt_writetodevice(dest_reg, job->header_len, job->payload_len, job->payload);   /*!< data t
 11690              		.loc 1 4787 9 is_stmt 1 view .LVU3042
 11691 00c0 6368     		ldr	r3, [r4, #4]
 11692 00c2 0021     		movs	r1, #0
 11693              	.LVL1130:
4787:Core/Src/deca_device.c ****         dwt_writetodevice(dest_reg, job->header_len, job->payload_len, job->payload);   /*!< data t
 11694              		.loc 1 4787 9 is_stmt 0 view .LVU3043
 11695 00c4 2846     		mov	r0, r5
 11696 00c6 FFF7FEFF 		bl	dwt_writetodevice
 11697              	.LVL1131:
4788:Core/Src/deca_device.c ****     }
 11698              		.loc 1 4788 9 is_stmt 1 view .LVU3044
 11699 00ca A368     		ldr	r3, [r4, #8]
 11700 00cc E289     		ldrh	r2, [r4, #14]
 11701 00ce 217B     		ldrb	r1, [r4, #12]	@ zero_extendqisi2
 11702 00d0 2846     		mov	r0, r5
 11703 00d2 FFF7FEFF 		bl	dwt_writetodevice
 11704              	.LVL1132:
 11705 00d6 B4E7     		b	.L807
 11706              	.LVL1133:
 11707              	.L830:
4797:Core/Src/deca_device.c ****         {
 11708              		.loc 1 4797 9 view .LVU3045
4797:Core/Src/deca_device.c ****         {
 11709              		.loc 1 4797 25 is_stmt 0 view .LVU3046
 11710 00d8 2B4B     		ldr	r3, .L840+16
 11711 00da 1B68     		ldr	r3, [r3]
 11712 00dc DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
4797:Core/Src/deca_device.c ****         {
 11713              		.loc 1 4797 12 view .LVU3047
 11714 00de 032B     		cmp	r3, #3
 11715 00e0 01D0     		beq	.L834
4803:Core/Src/deca_device.c ****         }
 11716              		.loc 1 4803 22 view .LVU3048
 11717 00e2 0121     		movs	r1, #1
 11718              	.LVL1134:
4803:Core/Src/deca_device.c ****         }
 11719              		.loc 1 4803 22 view .LVU3049
 11720 00e4 B2E7     		b	.L808
 11721              	.LVL1135:
 11722              	.L834:
4799:Core/Src/deca_device.c ****         }
 11723              		.loc 1 4799 22 view .LVU3050
 11724 00e6 0221     		movs	r1, #2
 11725              	.LVL1136:
4799:Core/Src/deca_device.c ****         }
 11726              		.loc 1 4799 22 view .LVU3051
 11727 00e8 B0E7     		b	.L808
 11728              	.LVL1137:
 11729              	.L831:
4810:Core/Src/deca_device.c ****         {
 11730              		.loc 1 4810 9 is_stmt 1 view .LVU3052
4810:Core/Src/deca_device.c ****         {
 11731              		.loc 1 4810 25 is_stmt 0 view .LVU3053
 11732 00ea 274B     		ldr	r3, .L840+16
ARM GAS  /tmp/cctZ3fzX.s 			page 340


 11733 00ec 1B68     		ldr	r3, [r3]
 11734 00ee DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
4810:Core/Src/deca_device.c ****         {
 11735              		.loc 1 4810 12 view .LVU3054
 11736 00f0 032B     		cmp	r3, #3
 11737 00f2 01D0     		beq	.L835
4816:Core/Src/deca_device.c ****         }
 11738              		.loc 1 4816 22 view .LVU3055
 11739 00f4 0122     		movs	r2, #1
 11740              	.LVL1138:
4816:Core/Src/deca_device.c ****         }
 11741              		.loc 1 4816 22 view .LVU3056
 11742 00f6 B0E7     		b	.L810
 11743              	.LVL1139:
 11744              	.L835:
4812:Core/Src/deca_device.c ****         }
 11745              		.loc 1 4812 22 view .LVU3057
 11746 00f8 0222     		movs	r2, #2
 11747              	.LVL1140:
4812:Core/Src/deca_device.c ****         }
 11748              		.loc 1 4812 22 view .LVU3058
 11749 00fa AEE7     		b	.L810
 11750              	.LVL1141:
 11751              	.L832:
4821:Core/Src/deca_device.c ****         {
 11752              		.loc 1 4821 9 is_stmt 1 view .LVU3059
4821:Core/Src/deca_device.c ****         {
 11753              		.loc 1 4821 15 is_stmt 0 view .LVU3060
 11754 00fc E389     		ldrh	r3, [r4, #14]
4821:Core/Src/deca_device.c ****         {
 11755              		.loc 1 4821 11 view .LVU3061
 11756 00fe 102B     		cmp	r3, #16
 11757 0100 ABD9     		bls	.L810
4823:Core/Src/deca_device.c ****         }
 11758              		.loc 1 4823 20 view .LVU3062
 11759 0102 6FF00300 		mvn	r0, #3
 11760 0106 C7E7     		b	.L802
 11761              	.LVL1142:
 11762              	.L833:
4852:Core/Src/deca_device.c ****     {
 11763              		.loc 1 4852 20 view .LVU3063
 11764 0108 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
4852:Core/Src/deca_device.c ****     {
 11765              		.loc 1 4852 13 view .LVU3064
 11766 010a 012B     		cmp	r3, #1
 11767 010c C3D1     		bne	.L811
 11768              	.LBB17:
4854:Core/Src/deca_device.c **** 
 11769              		.loc 1 4854 9 is_stmt 1 view .LVU3065
4856:Core/Src/deca_device.c ****         {
 11770              		.loc 1 4856 9 view .LVU3066
4856:Core/Src/deca_device.c ****         {
 11771              		.loc 1 4856 17 is_stmt 0 view .LVU3067
 11772 010e 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
4856:Core/Src/deca_device.c ****         {
 11773              		.loc 1 4856 49 view .LVU3068
 11774 0110 531E     		subs	r3, r2, #1
ARM GAS  /tmp/cctZ3fzX.s 			page 341


 11775 0112 DBB2     		uxtb	r3, r3
4856:Core/Src/deca_device.c ****         {
 11776              		.loc 1 4856 12 view .LVU3069
 11777 0114 012B     		cmp	r3, #1
 11778 0116 12D9     		bls	.L836
4867:Core/Src/deca_device.c ****         {
 11779              		.loc 1 4867 14 is_stmt 1 view .LVU3070
4867:Core/Src/deca_device.c ****         {
 11780              		.loc 1 4867 17 is_stmt 0 view .LVU3071
 11781 0118 032A     		cmp	r2, #3
 11782 011a 1BD0     		beq	.L837
4873:Core/Src/deca_device.c ****         }
 11783              		.loc 1 4873 23 view .LVU3072
 11784 011c 4FF4B016 		mov	r6, #1441792
 11785              	.L813:
 11786              	.LVL1143:
4876:Core/Src/deca_device.c ****         {
 11787              		.loc 1 4876 9 is_stmt 1 view .LVU3073
4876:Core/Src/deca_device.c ****         {
 11788              		.loc 1 4876 15 is_stmt 0 view .LVU3074
 11789 0120 6368     		ldr	r3, [r4, #4]
4876:Core/Src/deca_device.c ****         {
 11790              		.loc 1 4876 11 view .LVU3075
 11791 0122 0BB1     		cbz	r3, .L814
4878:Core/Src/deca_device.c ****             {
 11792              		.loc 1 4878 13 is_stmt 1 view .LVU3076
4878:Core/Src/deca_device.c ****             {
 11793              		.loc 1 4878 20 is_stmt 0 view .LVU3077
 11794 0124 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
4878:Core/Src/deca_device.c ****             {
 11795              		.loc 1 4878 16 view .LVU3078
 11796 0126 C2B9     		cbnz	r2, .L838
 11797              	.LVL1144:
 11798              	.L814:
4884:Core/Src/deca_device.c ****         {
 11799              		.loc 1 4884 9 is_stmt 1 view .LVU3079
4884:Core/Src/deca_device.c ****         {
 11800              		.loc 1 4884 15 is_stmt 0 view .LVU3080
 11801 0128 A368     		ldr	r3, [r4, #8]
4884:Core/Src/deca_device.c ****         {
 11802              		.loc 1 4884 11 view .LVU3081
 11803 012a 002B     		cmp	r3, #0
 11804 012c B3D0     		beq	.L811
4886:Core/Src/deca_device.c ****             {
 11805              		.loc 1 4886 13 is_stmt 1 view .LVU3082
4886:Core/Src/deca_device.c ****             {
 11806              		.loc 1 4886 20 is_stmt 0 view .LVU3083
 11807 012e E289     		ldrh	r2, [r4, #14]
4886:Core/Src/deca_device.c ****             {
 11808              		.loc 1 4886 16 view .LVU3084
 11809 0130 002A     		cmp	r2, #0
 11810 0132 B0D0     		beq	.L811
4888:Core/Src/deca_device.c ****             }
 11811              		.loc 1 4888 17 is_stmt 1 view .LVU3085
 11812 0134 217B     		ldrb	r1, [r4, #12]	@ zero_extendqisi2
 11813 0136 3046     		mov	r0, r6
 11814 0138 FFF7FEFF 		bl	dwt_readfromdevice
ARM GAS  /tmp/cctZ3fzX.s 			page 342


 11815              	.LVL1145:
 11816 013c ABE7     		b	.L811
 11817              	.LVL1146:
 11818              	.L836:
4858:Core/Src/deca_device.c ****             {
 11819              		.loc 1 4858 13 view .LVU3086
4858:Core/Src/deca_device.c ****             {
 11820              		.loc 1 4858 29 is_stmt 0 view .LVU3087
 11821 013e 124B     		ldr	r3, .L840+16
 11822 0140 1B68     		ldr	r3, [r3]
 11823 0142 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
4858:Core/Src/deca_device.c ****             {
 11824              		.loc 1 4858 16 view .LVU3088
 11825 0144 032B     		cmp	r3, #3
 11826 0146 02D0     		beq	.L839
4864:Core/Src/deca_device.c ****             }
 11827              		.loc 1 4864 27 view .LVU3089
 11828 0148 4FF49016 		mov	r6, #1179648
 11829 014c E8E7     		b	.L813
 11830              	.L839:
4860:Core/Src/deca_device.c ****             }
 11831              		.loc 1 4860 27 view .LVU3090
 11832 014e 4FF49816 		mov	r6, #1245184
 11833 0152 E5E7     		b	.L813
 11834              	.L837:
4869:Core/Src/deca_device.c ****         }
 11835              		.loc 1 4869 23 view .LVU3091
 11836 0154 4FF4A016 		mov	r6, #1310720
 11837 0158 E2E7     		b	.L813
 11838              	.LVL1147:
 11839              	.L838:
4880:Core/Src/deca_device.c ****             }
 11840              		.loc 1 4880 17 is_stmt 1 view .LVU3092
 11841 015a 0021     		movs	r1, #0
 11842 015c 3046     		mov	r0, r6
 11843              	.LVL1148:
4880:Core/Src/deca_device.c ****             }
 11844              		.loc 1 4880 17 is_stmt 0 view .LVU3093
 11845 015e FFF7FEFF 		bl	dwt_readfromdevice
 11846              	.LVL1149:
 11847 0162 E1E7     		b	.L814
 11848              	.LVL1150:
 11849              	.L815:
 11850              		.cfi_def_cfa_offset 0
 11851              		.cfi_restore 4
 11852              		.cfi_restore 5
 11853              		.cfi_restore 6
 11854              		.cfi_restore 14
4880:Core/Src/deca_device.c ****             }
 11855              		.loc 1 4880 17 view .LVU3094
 11856              	.LBE17:
4732:Core/Src/deca_device.c ****     }
 11857              		.loc 1 4732 16 view .LVU3095
 11858 0164 6FF00200 		mvn	r0, #2
 11859              	.LVL1151:
 11860              		.loc 1 4893 1 view .LVU3096
 11861 0168 7047     		bx	lr
ARM GAS  /tmp/cctZ3fzX.s 			page 343


 11862              	.LVL1152:
 11863              	.L817:
 11864              		.cfi_def_cfa_offset 16
 11865              		.cfi_offset 4, -16
 11866              		.cfi_offset 5, -12
 11867              		.cfi_offset 6, -8
 11868              		.cfi_offset 14, -4
4777:Core/Src/deca_device.c ****     }
 11869              		.loc 1 4777 16 view .LVU3097
 11870 016a 6FF00100 		mvn	r0, #1
 11871 016e 93E7     		b	.L802
 11872              	.LVL1153:
 11873              	.L819:
4782:Core/Src/deca_device.c ****     }
 11874              		.loc 1 4782 16 view .LVU3098
 11875 0170 4FF0FF30 		mov	r0, #-1
 11876 0174 90E7     		b	.L802
 11877              	.L841:
 11878 0176 00BF     		.align	2
 11879              	.L840:
 11880 0178 44000100 		.word	65604
 11881 017c 80FF0100 		.word	130944
 11882 0180 48000100 		.word	65608
 11883 0184 4C000100 		.word	65612
 11884 0188 00000000 		.word	.LANCHOR2
 11885              		.cfi_endproc
 11886              	.LFE137:
 11888              		.section	.text.dwt_configure_le_address,"ax",%progbits
 11889              		.align	1
 11890              		.global	dwt_configure_le_address
 11891              		.syntax unified
 11892              		.thumb
 11893              		.thumb_func
 11894              		.fpu fpv4-sp-d16
 11896              	dwt_configure_le_address:
 11897              	.LVL1154:
 11898              	.LFB138:
4894:Core/Src/deca_device.c **** 
4895:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4896:Core/Src/deca_device.c **** *
4897:Core/Src/deca_device.c **** * @brief   This function is used to write a 16 bit address to a desired Low-Energy device (LE) addr
4898:Core/Src/deca_device.c **** * the correct bits are set in the frame filtering configuration via the dwt_configureframefilter. S
4899:Core/Src/deca_device.c **** *
4900:Core/Src/deca_device.c **** * @param addr - the address value to be written to the selected LE register
4901:Core/Src/deca_device.c **** * @param leIndex - Low-Energy device (LE) address to write to
4902:Core/Src/deca_device.c **** *
4903:Core/Src/deca_device.c **** * no return value
4904:Core/Src/deca_device.c **** *
4905:Core/Src/deca_device.c **** */
4906:Core/Src/deca_device.c **** void dwt_configure_le_address(uint16_t addr, int leIndex) 
4907:Core/Src/deca_device.c **** {
 11899              		.loc 1 4907 1 is_stmt 1 view -0
 11900              		.cfi_startproc
 11901              		@ args = 0, pretend = 0, frame = 0
 11902              		@ frame_needed = 0, uses_anonymous_args = 0
 11903              		.loc 1 4907 1 is_stmt 0 view .LVU3100
 11904 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cctZ3fzX.s 			page 344


 11905              		.cfi_def_cfa_offset 8
 11906              		.cfi_offset 3, -8
 11907              		.cfi_offset 14, -4
 11908 0002 0246     		mov	r2, r0
4908:Core/Src/deca_device.c ****     switch (leIndex)
 11909              		.loc 1 4908 5 is_stmt 1 view .LVU3101
 11910 0004 0329     		cmp	r1, #3
 11911 0006 07D8     		bhi	.L842
 11912 0008 DFE801F0 		tbb	[pc, r1]
 11913              	.L845:
 11914 000c 02       		.byte	(.L848-.L845)/2
 11915 000d 07       		.byte	(.L847-.L845)/2
 11916 000e 0C       		.byte	(.L846-.L845)/2
 11917 000f 11       		.byte	(.L844-.L845)/2
 11918              		.p2align 1
 11919              	.L848:
4909:Core/Src/deca_device.c ****     {
4910:Core/Src/deca_device.c ****     case 0:
4911:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(LE_PEND_01_ID, 0, addr);
 11920              		.loc 1 4911 9 view .LVU3102
 11921 0010 0021     		movs	r1, #0
 11922              	.LVL1155:
 11923              		.loc 1 4911 9 is_stmt 0 view .LVU3103
 11924 0012 0948     		ldr	r0, .L850
 11925              	.LVL1156:
 11926              		.loc 1 4911 9 view .LVU3104
 11927 0014 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 11928              	.LVL1157:
4912:Core/Src/deca_device.c ****         break;
 11929              		.loc 1 4912 9 is_stmt 1 view .LVU3105
 11930              	.L842:
4913:Core/Src/deca_device.c ****     case 1:
4914:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(LE_PEND_01_ID, 2, addr);
4915:Core/Src/deca_device.c ****         break;
4916:Core/Src/deca_device.c ****     case 2:
4917:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(LE_PEND_23_ID, 0, addr);
4918:Core/Src/deca_device.c ****         break;
4919:Core/Src/deca_device.c ****     case 3:
4920:Core/Src/deca_device.c ****         dwt_write16bitoffsetreg(LE_PEND_23_ID, 2, addr);
4921:Core/Src/deca_device.c ****         break;
4922:Core/Src/deca_device.c ****     }
4923:Core/Src/deca_device.c **** }
 11931              		.loc 1 4923 1 is_stmt 0 view .LVU3106
 11932 0018 08BD     		pop	{r3, pc}
 11933              	.LVL1158:
 11934              	.L847:
4914:Core/Src/deca_device.c ****         break;
 11935              		.loc 1 4914 9 is_stmt 1 view .LVU3107
 11936 001a 0221     		movs	r1, #2
 11937              	.LVL1159:
4914:Core/Src/deca_device.c ****         break;
 11938              		.loc 1 4914 9 is_stmt 0 view .LVU3108
 11939 001c 0648     		ldr	r0, .L850
 11940              	.LVL1160:
4914:Core/Src/deca_device.c ****         break;
 11941              		.loc 1 4914 9 view .LVU3109
 11942 001e FFF7FEFF 		bl	dwt_write16bitoffsetreg
ARM GAS  /tmp/cctZ3fzX.s 			page 345


 11943              	.LVL1161:
4915:Core/Src/deca_device.c ****     case 2:
 11944              		.loc 1 4915 9 is_stmt 1 view .LVU3110
 11945 0022 F9E7     		b	.L842
 11946              	.LVL1162:
 11947              	.L846:
4917:Core/Src/deca_device.c ****         break;
 11948              		.loc 1 4917 9 view .LVU3111
 11949 0024 0021     		movs	r1, #0
 11950              	.LVL1163:
4917:Core/Src/deca_device.c ****         break;
 11951              		.loc 1 4917 9 is_stmt 0 view .LVU3112
 11952 0026 0548     		ldr	r0, .L850+4
 11953              	.LVL1164:
4917:Core/Src/deca_device.c ****         break;
 11954              		.loc 1 4917 9 view .LVU3113
 11955 0028 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 11956              	.LVL1165:
4918:Core/Src/deca_device.c ****     case 3:
 11957              		.loc 1 4918 9 is_stmt 1 view .LVU3114
 11958 002c F4E7     		b	.L842
 11959              	.LVL1166:
 11960              	.L844:
4920:Core/Src/deca_device.c ****         break;
 11961              		.loc 1 4920 9 view .LVU3115
 11962 002e 0221     		movs	r1, #2
 11963              	.LVL1167:
4920:Core/Src/deca_device.c ****         break;
 11964              		.loc 1 4920 9 is_stmt 0 view .LVU3116
 11965 0030 0248     		ldr	r0, .L850+4
 11966              	.LVL1168:
4920:Core/Src/deca_device.c ****         break;
 11967              		.loc 1 4920 9 view .LVU3117
 11968 0032 FFF7FEFF 		bl	dwt_write16bitoffsetreg
 11969              	.LVL1169:
4921:Core/Src/deca_device.c ****     }
 11970              		.loc 1 4921 9 is_stmt 1 view .LVU3118
 11971              		.loc 1 4923 1 is_stmt 0 view .LVU3119
 11972 0036 EFE7     		b	.L842
 11973              	.L851:
 11974              		.align	2
 11975              	.L850:
 11976 0038 18000100 		.word	65560
 11977 003c 1C000100 		.word	65564
 11978              		.cfi_endproc
 11979              	.LFE138:
 11981              		.section	.text.dwt_configuresfdtype,"ax",%progbits
 11982              		.align	1
 11983              		.global	dwt_configuresfdtype
 11984              		.syntax unified
 11985              		.thumb
 11986              		.thumb_func
 11987              		.fpu fpv4-sp-d16
 11989              	dwt_configuresfdtype:
 11990              	.LVL1170:
 11991              	.LFB139:
4924:Core/Src/deca_device.c **** 
ARM GAS  /tmp/cctZ3fzX.s 			page 346


4925:Core/Src/deca_device.c **** /*! -----------------------------------------------------------------------------------------------
4926:Core/Src/deca_device.c ****  * @brief This function configures SFD type only: e.g. IEEE 4a - 8, DW-8, DW-16, or IEEE 4z -8 (bin
4927:Core/Src/deca_device.c ****  * The dwt_configure should be called prior to this to configure other parameters
4928:Core/Src/deca_device.c ****  *
4929:Core/Src/deca_device.c ****  * input parameters
4930:Core/Src/deca_device.c ****  * @param sfdType    -   e.g. DWT_SFD_IEEE_4A, DWT_SFD_DW_8, DWT_SFD_DW_16, DWT_SFD_IEEE_4Z
4931:Core/Src/deca_device.c ****  *
4932:Core/Src/deca_device.c ****  * return none
4933:Core/Src/deca_device.c ****  *
4934:Core/Src/deca_device.c ****  */
4935:Core/Src/deca_device.c **** void dwt_configuresfdtype(uint8_t sfdType)
4936:Core/Src/deca_device.c **** {
 11992              		.loc 1 4936 1 is_stmt 1 view -0
 11993              		.cfi_startproc
 11994              		@ args = 0, pretend = 0, frame = 0
 11995              		@ frame_needed = 0, uses_anonymous_args = 0
 11996              		.loc 1 4936 1 is_stmt 0 view .LVU3121
 11997 0000 08B5     		push	{r3, lr}
 11998              		.cfi_def_cfa_offset 8
 11999              		.cfi_offset 3, -8
 12000              		.cfi_offset 14, -4
4937:Core/Src/deca_device.c ****     dwt_modify32bitoffsetreg(CHAN_CTRL_ID, 0, (uint32_t)(~CHAN_CTRL_SFD_TYPE_BIT_MASK), (CHAN_CTRL_
 12001              		.loc 1 4937 5 is_stmt 1 view .LVU3122
 12002              		.loc 1 4937 139 is_stmt 0 view .LVU3123
 12003 0002 4300     		lsls	r3, r0, #1
 12004              		.loc 1 4937 5 view .LVU3124
 12005 0004 03F00603 		and	r3, r3, #6
 12006 0008 6FF00602 		mvn	r2, #6
 12007 000c 0021     		movs	r1, #0
 12008 000e 0248     		ldr	r0, .L854
 12009              	.LVL1171:
 12010              		.loc 1 4937 5 view .LVU3125
 12011 0010 FFF7FEFF 		bl	dwt_modify32bitoffsetreg
 12012              	.LVL1172:
4938:Core/Src/deca_device.c **** }
 12013              		.loc 1 4938 1 view .LVU3126
 12014 0014 08BD     		pop	{r3, pc}
 12015              	.L855:
 12016 0016 00BF     		.align	2
 12017              	.L854:
 12018 0018 14000100 		.word	65556
 12019              		.cfi_endproc
 12020              	.LFE139:
 12022              		.global	sts_length_factors
 12023              		.section	.bss.DW3000local,"aw",%nobits
 12024              		.align	2
 12025              		.set	.LANCHOR1,. + 0
 12028              	DW3000local:
 12029 0000 00000000 		.space	64
 12029      00000000 
 12029      00000000 
 12029      00000000 
 12029      00000000 
 12030              		.section	.bss.crcTable,"aw",%nobits
 12031              		.align	2
 12032              		.set	.LANCHOR0,. + 0
 12035              	crcTable:
ARM GAS  /tmp/cctZ3fzX.s 			page 347


 12036 0000 00000000 		.space	256
 12036      00000000 
 12036      00000000 
 12036      00000000 
 12036      00000000 
 12037              		.section	.data.pdw3000local,"aw"
 12038              		.align	2
 12039              		.set	.LANCHOR2,. + 0
 12042              	pdw3000local:
 12043 0000 00000000 		.word	DW3000local
 12044              		.section	.rodata.__func__.0,"a"
 12045              		.align	2
 12046              		.set	.LANCHOR5,. + 0
 12049              	__func__.0:
 12050 0000 6477745F 		.ascii	"dwt_readaccdata\000"
 12050      72656164 
 12050      61636364 
 12050      61746100 
 12051              		.section	.rodata.__func__.1,"a"
 12052              		.align	2
 12053              		.set	.LANCHOR3,. + 0
 12056              	__func__.1:
 12057 0000 6477745F 		.ascii	"dwt_xfer3000\000"
 12057      78666572 
 12057      33303030 
 12057      00
 12058              		.section	.rodata.sts_length_factors,"a"
 12059              		.align	2
 12060              		.set	.LANCHOR4,. + 0
 12063              	sts_length_factors:
 12064 0000 0004     		.short	1024
 12065 0002 A805     		.short	1448
 12066 0004 0008     		.short	2048
 12067 0006 500B     		.short	2896
 12068 0008 0010     		.short	4096
 12069 000a A116     		.short	5793
 12070 000c 0020     		.short	8192
 12071              		.text
 12072              	.Letext0:
 12073              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 12074              		.file 3 "Core/Inc/deca_device_api.h"
 12075              		.file 4 "/usr/include/newlib/assert.h"
ARM GAS  /tmp/cctZ3fzX.s 			page 348


DEFINED SYMBOLS
                            *ABS*:0000000000000000 deca_device.c
     /tmp/cctZ3fzX.s:18     .text._dwt_crc8init:0000000000000000 $t
     /tmp/cctZ3fzX.s:25     .text._dwt_crc8init:0000000000000000 _dwt_crc8init
     /tmp/cctZ3fzX.s:114    .text._dwt_crc8init:0000000000000030 $d
     /tmp/cctZ3fzX.s:119    .text.get_sts_mnth:0000000000000000 $t
     /tmp/cctZ3fzX.s:125    .text.get_sts_mnth:0000000000000000 get_sts_mnth
     /tmp/cctZ3fzX.s:189    .text.dwt_apiversion:0000000000000000 $t
     /tmp/cctZ3fzX.s:196    .text.dwt_apiversion:0000000000000000 dwt_apiversion
     /tmp/cctZ3fzX.s:211    .text.dwt_setlocaldataptr:0000000000000000 $t
     /tmp/cctZ3fzX.s:218    .text.dwt_setlocaldataptr:0000000000000000 dwt_setlocaldataptr
     /tmp/cctZ3fzX.s:248    .text.dwt_setlocaldataptr:0000000000000014 $d
     /tmp/cctZ3fzX.s:254    .text.dwt_wakeup_ic:0000000000000000 $t
     /tmp/cctZ3fzX.s:261    .text.dwt_wakeup_ic:0000000000000000 dwt_wakeup_ic
     /tmp/cctZ3fzX.s:280    .text.dwt_generatecrc8:0000000000000000 $t
     /tmp/cctZ3fzX.s:287    .text.dwt_generatecrc8:0000000000000000 dwt_generatecrc8
     /tmp/cctZ3fzX.s:335    .text.dwt_generatecrc8:0000000000000024 $d
     /tmp/cctZ3fzX.s:340    .rodata.dwt_xfer3000.str1.4:0000000000000000 $d
     /tmp/cctZ3fzX.s:355    .text.dwt_xfer3000:0000000000000000 $t
     /tmp/cctZ3fzX.s:361    .text.dwt_xfer3000:0000000000000000 dwt_xfer3000
     /tmp/cctZ3fzX.s:1396   .text.dwt_read8bitoffsetreg:0000000000000000 dwt_read8bitoffsetreg
     /tmp/cctZ3fzX.s:669    .text.dwt_xfer3000:000000000000014c $d
     /tmp/cctZ3fzX.s:679    .text.dwt_writetodevice:0000000000000000 $t
     /tmp/cctZ3fzX.s:686    .text.dwt_writetodevice:0000000000000000 dwt_writetodevice
     /tmp/cctZ3fzX.s:714    .text.dwt_write32bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:721    .text.dwt_write32bitoffsetreg:0000000000000000 dwt_write32bitoffsetreg
     /tmp/cctZ3fzX.s:783    .text.dwt_disable_rftx_blocks:0000000000000000 $t
     /tmp/cctZ3fzX.s:789    .text.dwt_disable_rftx_blocks:0000000000000000 dwt_disable_rftx_blocks
     /tmp/cctZ3fzX.s:810    .text.dwt_disable_rftx_blocks:0000000000000010 $d
     /tmp/cctZ3fzX.s:815    .text.dwt_disable_rf_tx:0000000000000000 $t
     /tmp/cctZ3fzX.s:821    .text.dwt_disable_rf_tx:0000000000000000 dwt_disable_rf_tx
     /tmp/cctZ3fzX.s:866    .text.dwt_disable_rf_tx:000000000000002c $d
     /tmp/cctZ3fzX.s:872    .text.dwt_write16bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:879    .text.dwt_write16bitoffsetreg:0000000000000000 dwt_write16bitoffsetreg
     /tmp/cctZ3fzX.s:919    .text.dwt_force_clocks:0000000000000000 $t
     /tmp/cctZ3fzX.s:925    .text.dwt_force_clocks:0000000000000000 dwt_force_clocks
     /tmp/cctZ3fzX.s:981    .text.dwt_force_clocks:000000000000002c $d
     /tmp/cctZ3fzX.s:986    .text.dwt_write8bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:993    .text.dwt_write8bitoffsetreg:0000000000000000 dwt_write8bitoffsetreg
     /tmp/cctZ3fzX.s:1026   .text.dwt_update_nonce_GCM:0000000000000000 $t
     /tmp/cctZ3fzX.s:1032   .text.dwt_update_nonce_GCM:0000000000000000 dwt_update_nonce_GCM
     /tmp/cctZ3fzX.s:1058   .text.dwt_update_nonce_GCM:0000000000000010 $d
     /tmp/cctZ3fzX.s:1063   .text.dwt_update_nonce_CCM:0000000000000000 $t
     /tmp/cctZ3fzX.s:1069   .text.dwt_update_nonce_CCM:0000000000000000 dwt_update_nonce_CCM
     /tmp/cctZ3fzX.s:1167   .text.dwt_update_nonce_CCM:0000000000000074 $d
     /tmp/cctZ3fzX.s:1172   .text.dwt_readfromdevice:0000000000000000 $t
     /tmp/cctZ3fzX.s:1179   .text.dwt_readfromdevice:0000000000000000 dwt_readfromdevice
     /tmp/cctZ3fzX.s:1207   .text.dwt_read32bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:1214   .text.dwt_read32bitoffsetreg:0000000000000000 dwt_read32bitoffsetreg
     /tmp/cctZ3fzX.s:1275   .text._dwt_otpread:0000000000000000 $t
     /tmp/cctZ3fzX.s:1281   .text._dwt_otpread:0000000000000000 _dwt_otpread
     /tmp/cctZ3fzX.s:1331   .text._dwt_otpread:0000000000000030 $d
     /tmp/cctZ3fzX.s:1338   .text.dwt_read16bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:1345   .text.dwt_read16bitoffsetreg:0000000000000000 dwt_read16bitoffsetreg
     /tmp/cctZ3fzX.s:1389   .text.dwt_read8bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:1429   .text.dwt_wait_aes_poll:0000000000000000 $t
     /tmp/cctZ3fzX.s:1435   .text.dwt_wait_aes_poll:0000000000000000 dwt_wait_aes_poll
ARM GAS  /tmp/cctZ3fzX.s 			page 349


     /tmp/cctZ3fzX.s:1474   .text.dwt_wait_aes_poll:0000000000000024 $d
     /tmp/cctZ3fzX.s:1479   .text.dwt_modify32bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:1486   .text.dwt_modify32bitoffsetreg:0000000000000000 dwt_modify32bitoffsetreg
     /tmp/cctZ3fzX.s:1557   .text._dwt_kick_ops_table_on_wakeup:0000000000000000 $t
     /tmp/cctZ3fzX.s:1563   .text._dwt_kick_ops_table_on_wakeup:0000000000000000 _dwt_kick_ops_table_on_wakeup
     /tmp/cctZ3fzX.s:1611   .text._dwt_kick_ops_table_on_wakeup:000000000000003c $d
     /tmp/cctZ3fzX.s:1617   .text._dwt_kick_dgc_on_wakeup:0000000000000000 $t
     /tmp/cctZ3fzX.s:1623   .text._dwt_kick_dgc_on_wakeup:0000000000000000 _dwt_kick_dgc_on_wakeup
     /tmp/cctZ3fzX.s:1675   .text._dwt_kick_dgc_on_wakeup:0000000000000030 $d
     /tmp/cctZ3fzX.s:1680   .text.dwt_enable_rf_tx:0000000000000000 $t
     /tmp/cctZ3fzX.s:1686   .text.dwt_enable_rf_tx:0000000000000000 dwt_enable_rf_tx
     /tmp/cctZ3fzX.s:1761   .text.dwt_enable_rf_tx:0000000000000060 $d
     /tmp/cctZ3fzX.s:1770   .text.dwt_enable_rftx_blocks:0000000000000000 $t
     /tmp/cctZ3fzX.s:1776   .text.dwt_enable_rftx_blocks:0000000000000000 dwt_enable_rftx_blocks
     /tmp/cctZ3fzX.s:1828   .text.dwt_enable_rftx_blocks:000000000000002c $d
     /tmp/cctZ3fzX.s:1835   .text.dwt_modify16bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:1842   .text.dwt_modify16bitoffsetreg:0000000000000000 dwt_modify16bitoffsetreg
     /tmp/cctZ3fzX.s:1893   .text._dwt_prog_ldo_and_bias_tune:0000000000000000 $t
     /tmp/cctZ3fzX.s:1899   .text._dwt_prog_ldo_and_bias_tune:0000000000000000 _dwt_prog_ldo_and_bias_tune
     /tmp/cctZ3fzX.s:1930   .text._dwt_prog_ldo_and_bias_tune:0000000000000028 $d
     /tmp/cctZ3fzX.s:1937   .text.dwt_modify8bitoffsetreg:0000000000000000 $t
     /tmp/cctZ3fzX.s:1944   .text.dwt_modify8bitoffsetreg:0000000000000000 dwt_modify8bitoffsetreg
     /tmp/cctZ3fzX.s:1987   .text.dwt_enablespicrccheck:0000000000000000 $t
     /tmp/cctZ3fzX.s:1994   .text.dwt_enablespicrccheck:0000000000000000 dwt_enablespicrccheck
     /tmp/cctZ3fzX.s:2067   .text.dwt_enablespicrccheck:000000000000003c $d
     /tmp/cctZ3fzX.s:2072   .text.dwt_setdwstate:0000000000000000 $t
     /tmp/cctZ3fzX.s:2079   .text.dwt_setdwstate:0000000000000000 dwt_setdwstate
     /tmp/cctZ3fzX.s:2176   .text.dwt_setdwstate:000000000000007c $d
     /tmp/cctZ3fzX.s:2182   .text.dwt_enablegpioclocks:0000000000000000 $t
     /tmp/cctZ3fzX.s:2189   .text.dwt_enablegpioclocks:0000000000000000 dwt_enablegpioclocks
     /tmp/cctZ3fzX.s:2211   .text.dwt_enablegpioclocks:0000000000000014 $d
     /tmp/cctZ3fzX.s:2216   .text.dwt_otprevision:0000000000000000 $t
     /tmp/cctZ3fzX.s:2223   .text.dwt_otprevision:0000000000000000 dwt_otprevision
     /tmp/cctZ3fzX.s:2240   .text.dwt_otprevision:0000000000000008 $d
     /tmp/cctZ3fzX.s:2245   .text.dwt_setfinegraintxseq:0000000000000000 $t
     /tmp/cctZ3fzX.s:2252   .text.dwt_setfinegraintxseq:0000000000000000 dwt_setfinegraintxseq
     /tmp/cctZ3fzX.s:2293   .text.dwt_setfinegraintxseq:000000000000001c $d
     /tmp/cctZ3fzX.s:2300   .text.dwt_setlnapamode:0000000000000000 $t
     /tmp/cctZ3fzX.s:2307   .text.dwt_setlnapamode:0000000000000000 dwt_setlnapamode
     /tmp/cctZ3fzX.s:2372   .text.dwt_setlnapamode:000000000000003c $d
     /tmp/cctZ3fzX.s:2377   .text.dwt_readpgdelay:0000000000000000 $t
     /tmp/cctZ3fzX.s:2384   .text.dwt_readpgdelay:0000000000000000 dwt_readpgdelay
     /tmp/cctZ3fzX.s:2405   .text.dwt_readpgdelay:000000000000000c $d
     /tmp/cctZ3fzX.s:2410   .text.dwt_geticrefvolt:0000000000000000 $t
     /tmp/cctZ3fzX.s:2417   .text.dwt_geticrefvolt:0000000000000000 dwt_geticrefvolt
     /tmp/cctZ3fzX.s:2434   .text.dwt_geticrefvolt:0000000000000008 $d
     /tmp/cctZ3fzX.s:2439   .text.dwt_geticreftemp:0000000000000000 $t
     /tmp/cctZ3fzX.s:2446   .text.dwt_geticreftemp:0000000000000000 dwt_geticreftemp
     /tmp/cctZ3fzX.s:2463   .text.dwt_geticreftemp:0000000000000008 $d
     /tmp/cctZ3fzX.s:2468   .text.dwt_getpartid:0000000000000000 $t
     /tmp/cctZ3fzX.s:2475   .text.dwt_getpartid:0000000000000000 dwt_getpartid
     /tmp/cctZ3fzX.s:2492   .text.dwt_getpartid:0000000000000008 $d
     /tmp/cctZ3fzX.s:2497   .text.dwt_getlotid:0000000000000000 $t
     /tmp/cctZ3fzX.s:2504   .text.dwt_getlotid:0000000000000000 dwt_getlotid
     /tmp/cctZ3fzX.s:2521   .text.dwt_getlotid:0000000000000008 $d
     /tmp/cctZ3fzX.s:2526   .text.dwt_readdevid:0000000000000000 $t
     /tmp/cctZ3fzX.s:2533   .text.dwt_readdevid:0000000000000000 dwt_readdevid
ARM GAS  /tmp/cctZ3fzX.s 			page 350


     /tmp/cctZ3fzX.s:2555   .text.dwt_configurestskey:0000000000000000 $t
     /tmp/cctZ3fzX.s:2562   .text.dwt_configurestskey:0000000000000000 dwt_configurestskey
     /tmp/cctZ3fzX.s:2608   .text.dwt_configurestskey:0000000000000030 $d
     /tmp/cctZ3fzX.s:2616   .text.dwt_configurestsiv:0000000000000000 $t
     /tmp/cctZ3fzX.s:2623   .text.dwt_configurestsiv:0000000000000000 dwt_configurestsiv
     /tmp/cctZ3fzX.s:2669   .text.dwt_configurestsiv:0000000000000030 $d
     /tmp/cctZ3fzX.s:2677   .text.dwt_configurestsloadiv:0000000000000000 $t
     /tmp/cctZ3fzX.s:2684   .text.dwt_configurestsloadiv:0000000000000000 dwt_configurestsloadiv
     /tmp/cctZ3fzX.s:2706   .text.dwt_configurestsloadiv:0000000000000010 $d
     /tmp/cctZ3fzX.s:2711   .text.dwt_configmrxlut:0000000000000000 $t
     /tmp/cctZ3fzX.s:2718   .text.dwt_configmrxlut:0000000000000000 dwt_configmrxlut
     /tmp/cctZ3fzX.s:2835   .text.dwt_configmrxlut:000000000000008c $d
     /tmp/cctZ3fzX.s:2863   .text.dwt_restoreconfig:0000000000000000 $t
     /tmp/cctZ3fzX.s:2870   .text.dwt_restoreconfig:0000000000000000 dwt_restoreconfig
     /tmp/cctZ3fzX.s:2972   .text.dwt_restoreconfig:000000000000006c $d
     /tmp/cctZ3fzX.s:2981   .text.dwt_configurestsmode:0000000000000000 $t
     /tmp/cctZ3fzX.s:2988   .text.dwt_configurestsmode:0000000000000000 dwt_configurestsmode
     /tmp/cctZ3fzX.s:3044   .text.dwt_configurestsmode:000000000000003c $d
     /tmp/cctZ3fzX.s:3052   .text.dwt_run_pgfcal:0000000000000000 $t
     /tmp/cctZ3fzX.s:3059   .text.dwt_run_pgfcal:0000000000000000 dwt_run_pgfcal
     /tmp/cctZ3fzX.s:3216   .text.dwt_run_pgfcal:000000000000009c $d
     /tmp/cctZ3fzX.s:3225   .text.dwt_pgf_cal:0000000000000000 $t
     /tmp/cctZ3fzX.s:3232   .text.dwt_pgf_cal:0000000000000000 dwt_pgf_cal
     /tmp/cctZ3fzX.s:3309   .text.dwt_pgf_cal:0000000000000044 $d
     /tmp/cctZ3fzX.s:3314   .text.dwt_setrxantennadelay:0000000000000000 $t
     /tmp/cctZ3fzX.s:3321   .text.dwt_setrxantennadelay:0000000000000000 dwt_setrxantennadelay
     /tmp/cctZ3fzX.s:3347   .text.dwt_settxantennadelay:0000000000000000 $t
     /tmp/cctZ3fzX.s:3354   .text.dwt_settxantennadelay:0000000000000000 dwt_settxantennadelay
     /tmp/cctZ3fzX.s:3379   .text.dwt_settxantennadelay:0000000000000010 $d
     /tmp/cctZ3fzX.s:3384   .text.dwt_writetxdata:0000000000000000 $t
     /tmp/cctZ3fzX.s:3391   .text.dwt_writetxdata:0000000000000000 dwt_writetxdata
     /tmp/cctZ3fzX.s:3480   .text.dwt_writetxdata:0000000000000050 $d
     /tmp/cctZ3fzX.s:3486   .text.dwt_writetxfctrl:0000000000000000 $t
     /tmp/cctZ3fzX.s:3493   .text.dwt_writetxfctrl:0000000000000000 dwt_writetxfctrl
     /tmp/cctZ3fzX.s:3561   .text.dwt_writetxfctrl:000000000000003c $d
     /tmp/cctZ3fzX.s:3566   .text.dwt_setplenfine:0000000000000000 $t
     /tmp/cctZ3fzX.s:3573   .text.dwt_setplenfine:0000000000000000 dwt_setplenfine
     /tmp/cctZ3fzX.s:3599   .text.dwt_configure:0000000000000000 $t
     /tmp/cctZ3fzX.s:3606   .text.dwt_configure:0000000000000000 dwt_configure
     /tmp/cctZ3fzX.s:3672   .text.dwt_configure:0000000000000032 $d
     /tmp/cctZ3fzX.s:3680   .text.dwt_configure:0000000000000040 $t
     /tmp/cctZ3fzX.s:4237   .text.dwt_configure:0000000000000330 $d
     /tmp/cctZ3fzX.s:4263   .text.dwt_read_rx_scratch_data:0000000000000000 $t
     /tmp/cctZ3fzX.s:4270   .text.dwt_read_rx_scratch_data:0000000000000000 dwt_read_rx_scratch_data
     /tmp/cctZ3fzX.s:4301   .text.dwt_readrxdata:0000000000000000 $t
     /tmp/cctZ3fzX.s:4308   .text.dwt_readrxdata:0000000000000000 dwt_readrxdata
     /tmp/cctZ3fzX.s:4400   .text.dwt_readrxdata:0000000000000058 $d
     /tmp/cctZ3fzX.s:4407   .rodata.dwt_readaccdata.str1.4:0000000000000000 $d
     /tmp/cctZ3fzX.s:4411   .text.dwt_readaccdata:0000000000000000 $t
     /tmp/cctZ3fzX.s:4418   .text.dwt_readaccdata:0000000000000000 dwt_readaccdata
     /tmp/cctZ3fzX.s:4509   .text.dwt_readaccdata:0000000000000078 $d
     /tmp/cctZ3fzX.s:4519   .text.dwt_readclockoffset:0000000000000000 $t
     /tmp/cctZ3fzX.s:4526   .text.dwt_readclockoffset:0000000000000000 dwt_readclockoffset
     /tmp/cctZ3fzX.s:4602   .text.dwt_readclockoffset:0000000000000048 $d
     /tmp/cctZ3fzX.s:4609   .text.dwt_readcarrierintegrator:0000000000000000 $t
     /tmp/cctZ3fzX.s:4616   .text.dwt_readcarrierintegrator:0000000000000000 dwt_readcarrierintegrator
     /tmp/cctZ3fzX.s:4685   .text.dwt_readcarrierintegrator:0000000000000040 $d
ARM GAS  /tmp/cctZ3fzX.s 			page 351


     /tmp/cctZ3fzX.s:4690   .text.dwt_readstsquality:0000000000000000 $t
     /tmp/cctZ3fzX.s:4697   .text.dwt_readstsquality:0000000000000000 dwt_readstsquality
     /tmp/cctZ3fzX.s:4749   .text.dwt_readstsquality:000000000000002c $d
     /tmp/cctZ3fzX.s:4755   .text.dwt_readstsstatus:0000000000000000 $t
     /tmp/cctZ3fzX.s:4762   .text.dwt_readstsstatus:0000000000000000 dwt_readstsstatus
     /tmp/cctZ3fzX.s:4883   .text.dwt_readstsstatus:0000000000000060 $d
     /tmp/cctZ3fzX.s:4892   .text.dwt_readdiagnostics:0000000000000000 $t
     /tmp/cctZ3fzX.s:4899   .text.dwt_readdiagnostics:0000000000000000 dwt_readdiagnostics
     /tmp/cctZ3fzX.s:5108   .text.dwt_readdiagnostics:0000000000000104 $d
     /tmp/cctZ3fzX.s:5114   .text.dwt_readdiagnostics:000000000000010c $t
     /tmp/cctZ3fzX.s:6116   .text.dwt_readdiagnostics:0000000000000744 $d
     /tmp/cctZ3fzX.s:6121   .text.dwt_readtxtimestamp:0000000000000000 $t
     /tmp/cctZ3fzX.s:6128   .text.dwt_readtxtimestamp:0000000000000000 dwt_readtxtimestamp
     /tmp/cctZ3fzX.s:6155   .text.dwt_readtxtimestamphi32:0000000000000000 $t
     /tmp/cctZ3fzX.s:6162   .text.dwt_readtxtimestamphi32:0000000000000000 dwt_readtxtimestamphi32
     /tmp/cctZ3fzX.s:6184   .text.dwt_readtxtimestamplo32:0000000000000000 $t
     /tmp/cctZ3fzX.s:6191   .text.dwt_readtxtimestamplo32:0000000000000000 dwt_readtxtimestamplo32
     /tmp/cctZ3fzX.s:6213   .text.dwt_readpdoa:0000000000000000 $t
     /tmp/cctZ3fzX.s:6220   .text.dwt_readpdoa:0000000000000000 dwt_readpdoa
     /tmp/cctZ3fzX.s:6299   .text.dwt_readpdoa:0000000000000050 $d
     /tmp/cctZ3fzX.s:6306   .text.dwt_readtdoa:0000000000000000 $t
     /tmp/cctZ3fzX.s:6313   .text.dwt_readtdoa:0000000000000000 dwt_readtdoa
     /tmp/cctZ3fzX.s:6347   .text.dwt_readtdoa:000000000000001c $d
     /tmp/cctZ3fzX.s:6352   .text.dwt_readrxtimestamp:0000000000000000 $t
     /tmp/cctZ3fzX.s:6359   .text.dwt_readrxtimestamp:0000000000000000 dwt_readrxtimestamp
     /tmp/cctZ3fzX.s:6422   .text.dwt_readrxtimestamp:0000000000000038 $d
     /tmp/cctZ3fzX.s:6428   .text.dwt_readrxtimestampunadj:0000000000000000 $t
     /tmp/cctZ3fzX.s:6435   .text.dwt_readrxtimestampunadj:0000000000000000 dwt_readrxtimestampunadj
     /tmp/cctZ3fzX.s:6465   .text.dwt_readrxtimestamp_ipatov:0000000000000000 $t
     /tmp/cctZ3fzX.s:6472   .text.dwt_readrxtimestamp_ipatov:0000000000000000 dwt_readrxtimestamp_ipatov
     /tmp/cctZ3fzX.s:6535   .text.dwt_readrxtimestamp_ipatov:000000000000003c $d
     /tmp/cctZ3fzX.s:6541   .text.dwt_readrxtimestamp_sts:0000000000000000 $t
     /tmp/cctZ3fzX.s:6548   .text.dwt_readrxtimestamp_sts:0000000000000000 dwt_readrxtimestamp_sts
     /tmp/cctZ3fzX.s:6611   .text.dwt_readrxtimestamp_sts:0000000000000038 $d
     /tmp/cctZ3fzX.s:6618   .text.dwt_readrxtimestamphi32:0000000000000000 $t
     /tmp/cctZ3fzX.s:6625   .text.dwt_readrxtimestamphi32:0000000000000000 dwt_readrxtimestamphi32
     /tmp/cctZ3fzX.s:6647   .text.dwt_readrxtimestamplo32:0000000000000000 $t
     /tmp/cctZ3fzX.s:6654   .text.dwt_readrxtimestamplo32:0000000000000000 dwt_readrxtimestamplo32
     /tmp/cctZ3fzX.s:6676   .text.dwt_readsystimestamphi32:0000000000000000 $t
     /tmp/cctZ3fzX.s:6683   .text.dwt_readsystimestamphi32:0000000000000000 dwt_readsystimestamphi32
     /tmp/cctZ3fzX.s:6705   .text.dwt_readsystime:0000000000000000 $t
     /tmp/cctZ3fzX.s:6712   .text.dwt_readsystime:0000000000000000 dwt_readsystime
     /tmp/cctZ3fzX.s:6739   .text.dwt_configureframefilter:0000000000000000 $t
     /tmp/cctZ3fzX.s:6746   .text.dwt_configureframefilter:0000000000000000 dwt_configureframefilter
     /tmp/cctZ3fzX.s:6808   .text.dwt_setpanid:0000000000000000 $t
     /tmp/cctZ3fzX.s:6815   .text.dwt_setpanid:0000000000000000 dwt_setpanid
     /tmp/cctZ3fzX.s:6841   .text.dwt_setaddress16:0000000000000000 $t
     /tmp/cctZ3fzX.s:6848   .text.dwt_setaddress16:0000000000000000 dwt_setaddress16
     /tmp/cctZ3fzX.s:6874   .text.dwt_seteui:0000000000000000 $t
     /tmp/cctZ3fzX.s:6881   .text.dwt_seteui:0000000000000000 dwt_seteui
     /tmp/cctZ3fzX.s:6908   .text.dwt_geteui:0000000000000000 $t
     /tmp/cctZ3fzX.s:6915   .text.dwt_geteui:0000000000000000 dwt_geteui
     /tmp/cctZ3fzX.s:6942   .text.dwt_aon_read:0000000000000000 $t
     /tmp/cctZ3fzX.s:6949   .text.dwt_aon_read:0000000000000000 dwt_aon_read
     /tmp/cctZ3fzX.s:6993   .text.dwt_aon_read:000000000000002c $d
     /tmp/cctZ3fzX.s:7000   .text.dwt_aon_write:0000000000000000 $t
     /tmp/cctZ3fzX.s:7007   .text.dwt_aon_write:0000000000000000 dwt_aon_write
ARM GAS  /tmp/cctZ3fzX.s 			page 352


     /tmp/cctZ3fzX.s:7071   .text.dwt_aon_write:000000000000003c $d
     /tmp/cctZ3fzX.s:7078   .text.dwt_otpread:0000000000000000 $t
     /tmp/cctZ3fzX.s:7085   .text.dwt_otpread:0000000000000000 dwt_otpread
     /tmp/cctZ3fzX.s:7137   .text.__dwt_otp_write_wdata_id_reg:0000000000000000 $t
     /tmp/cctZ3fzX.s:7144   .text.__dwt_otp_write_wdata_id_reg:0000000000000000 __dwt_otp_write_wdata_id_reg
     /tmp/cctZ3fzX.s:7178   .text._dwt_otpprogword32:0000000000000000 $t
     /tmp/cctZ3fzX.s:7184   .text._dwt_otpprogword32:0000000000000000 _dwt_otpprogword32
     /tmp/cctZ3fzX.s:7404   .text._dwt_otpprogword32:0000000000000148 $d
     /tmp/cctZ3fzX.s:7410   .text.dwt_otpwriteandverify:0000000000000000 $t
     /tmp/cctZ3fzX.s:7417   .text.dwt_otpwriteandverify:0000000000000000 dwt_otpwriteandverify
     /tmp/cctZ3fzX.s:7458   .text.dwt_entersleep:0000000000000000 $t
     /tmp/cctZ3fzX.s:7465   .text.dwt_entersleep:0000000000000000 dwt_entersleep
     /tmp/cctZ3fzX.s:7513   .text.dwt_entersleep:000000000000002c $d
     /tmp/cctZ3fzX.s:7519   .text.dwt_configuresleepcnt:0000000000000000 $t
     /tmp/cctZ3fzX.s:7526   .text.dwt_configuresleepcnt:0000000000000000 dwt_configuresleepcnt
     /tmp/cctZ3fzX.s:7557   .text.dwt_calibratesleepcnt:0000000000000000 $t
     /tmp/cctZ3fzX.s:7564   .text.dwt_calibratesleepcnt:0000000000000000 dwt_calibratesleepcnt
     /tmp/cctZ3fzX.s:7639   .text.dwt_calibratesleepcnt:000000000000005c $d
     /tmp/cctZ3fzX.s:7644   .text.dwt_configuresleep:0000000000000000 $t
     /tmp/cctZ3fzX.s:7651   .text.dwt_configuresleep:0000000000000000 dwt_configuresleep
     /tmp/cctZ3fzX.s:7692   .text.dwt_configuresleep:0000000000000028 $d
     /tmp/cctZ3fzX.s:7698   .text.dwt_clearaonconfig:0000000000000000 $t
     /tmp/cctZ3fzX.s:7705   .text.dwt_clearaonconfig:0000000000000000 dwt_clearaonconfig
     /tmp/cctZ3fzX.s:7745   .text.dwt_clearaonconfig:0000000000000030 $d
     /tmp/cctZ3fzX.s:7751   .text.dwt_entersleepaftertx:0000000000000000 $t
     /tmp/cctZ3fzX.s:7758   .text.dwt_entersleepaftertx:0000000000000000 dwt_entersleepaftertx
     /tmp/cctZ3fzX.s:7801   .text.dwt_entersleepaftertx:0000000000000028 $d
     /tmp/cctZ3fzX.s:7806   .text.dwt_check_dev_id:0000000000000000 $t
     /tmp/cctZ3fzX.s:7813   .text.dwt_check_dev_id:0000000000000000 dwt_check_dev_id
     /tmp/cctZ3fzX.s:7860   .text.dwt_check_dev_id:0000000000000020 $d
     /tmp/cctZ3fzX.s:7865   .text.dwt_initialise:0000000000000000 $t
     /tmp/cctZ3fzX.s:7872   .text.dwt_initialise:0000000000000000 dwt_initialise
     /tmp/cctZ3fzX.s:8153   .text.dwt_initialise:0000000000000114 $d
     /tmp/cctZ3fzX.s:8160   .text.dwt_configciadiag:0000000000000000 $t
     /tmp/cctZ3fzX.s:8167   .text.dwt_configciadiag:0000000000000000 dwt_configciadiag
     /tmp/cctZ3fzX.s:8223   .text.dwt_configciadiag:000000000000003c $d
     /tmp/cctZ3fzX.s:8229   .text.dwt_enableautoack:0000000000000000 $t
     /tmp/cctZ3fzX.s:8236   .text.dwt_enableautoack:0000000000000000 dwt_enableautoack
     /tmp/cctZ3fzX.s:8286   .text.dwt_enableautoack:0000000000000034 $d
     /tmp/cctZ3fzX.s:8291   .text.dwt_signal_rx_buff_free:0000000000000000 $t
     /tmp/cctZ3fzX.s:8298   .text.dwt_signal_rx_buff_free:0000000000000000 dwt_signal_rx_buff_free
     /tmp/cctZ3fzX.s:8339   .text.dwt_signal_rx_buff_free:0000000000000024 $d
     /tmp/cctZ3fzX.s:8344   .text.dwt_setdblrxbuffmode:0000000000000000 $t
     /tmp/cctZ3fzX.s:8351   .text.dwt_setdblrxbuffmode:0000000000000000 dwt_setdblrxbuffmode
     /tmp/cctZ3fzX.s:8441   .text.dwt_setdblrxbuffmode:0000000000000050 $d
     /tmp/cctZ3fzX.s:8448   .text.dwt_setrxaftertxdelay:0000000000000000 $t
     /tmp/cctZ3fzX.s:8455   .text.dwt_setrxaftertxdelay:0000000000000000 dwt_setrxaftertxdelay
     /tmp/cctZ3fzX.s:8505   .text.dwt_setrxaftertxdelay:0000000000000024 $d
     /tmp/cctZ3fzX.s:8510   .text.dwt_setcallbacks:0000000000000000 $t
     /tmp/cctZ3fzX.s:8517   .text.dwt_setcallbacks:0000000000000000 dwt_setcallbacks
     /tmp/cctZ3fzX.s:8564   .text.dwt_setcallbacks:000000000000001c $d
     /tmp/cctZ3fzX.s:8569   .text.dwt_checkirq:0000000000000000 $t
     /tmp/cctZ3fzX.s:8576   .text.dwt_checkirq:0000000000000000 dwt_checkirq
     /tmp/cctZ3fzX.s:8599   .text.dwt_checkidlerc:0000000000000000 $t
     /tmp/cctZ3fzX.s:8606   .text.dwt_checkidlerc:0000000000000000 dwt_checkidlerc
     /tmp/cctZ3fzX.s:8632   .text.dwt_isr:0000000000000000 $t
     /tmp/cctZ3fzX.s:8639   .text.dwt_isr:0000000000000000 dwt_isr
ARM GAS  /tmp/cctZ3fzX.s 			page 353


     /tmp/cctZ3fzX.s:9161   .text.dwt_isr:0000000000000298 $d
     /tmp/cctZ3fzX.s:9168   .text.dwt_setleds:0000000000000000 $t
     /tmp/cctZ3fzX.s:9175   .text.dwt_setleds:0000000000000000 dwt_setleds
     /tmp/cctZ3fzX.s:9267   .text.dwt_setleds:0000000000000074 $d
     /tmp/cctZ3fzX.s:9274   .text.dwt_setreferencetrxtime:0000000000000000 $t
     /tmp/cctZ3fzX.s:9281   .text.dwt_setreferencetrxtime:0000000000000000 dwt_setreferencetrxtime
     /tmp/cctZ3fzX.s:9307   .text.dwt_setdelayedtrxtime:0000000000000000 $t
     /tmp/cctZ3fzX.s:9314   .text.dwt_setdelayedtrxtime:0000000000000000 dwt_setdelayedtrxtime
     /tmp/cctZ3fzX.s:9340   .text.dwt_starttx:0000000000000000 $t
     /tmp/cctZ3fzX.s:9347   .text.dwt_starttx:0000000000000000 dwt_starttx
     /tmp/cctZ3fzX.s:9619   .text.dwt_starttx:0000000000000138 $d
     /tmp/cctZ3fzX.s:9624   .text.dwt_forcetrxoff:0000000000000000 $t
     /tmp/cctZ3fzX.s:9631   .text.dwt_forcetrxoff:0000000000000000 dwt_forcetrxoff
     /tmp/cctZ3fzX.s:9668   .text.dwt_setsniffmode:0000000000000000 $t
     /tmp/cctZ3fzX.s:9675   .text.dwt_setsniffmode:0000000000000000 dwt_setsniffmode
     /tmp/cctZ3fzX.s:9729   .text.dwt_setsniffmode:0000000000000024 $d
     /tmp/cctZ3fzX.s:9734   .text.dwt_rxenable:0000000000000000 $t
     /tmp/cctZ3fzX.s:9741   .text.dwt_rxenable:0000000000000000 dwt_rxenable
     /tmp/cctZ3fzX.s:9767   .text.dwt_rxenable:0000000000000014 $d
     /tmp/cctZ3fzX.s:9783   .text.dwt_rxenable:0000000000000024 $t
     /tmp/cctZ3fzX.s:9905   .text.dwt_setrxtimeout:0000000000000000 $t
     /tmp/cctZ3fzX.s:9912   .text.dwt_setrxtimeout:0000000000000000 dwt_setrxtimeout
     /tmp/cctZ3fzX.s:9962   .text.dwt_setpreambledetecttimeout:0000000000000000 $t
     /tmp/cctZ3fzX.s:9969   .text.dwt_setpreambledetecttimeout:0000000000000000 dwt_setpreambledetecttimeout
     /tmp/cctZ3fzX.s:9994   .text.dwt_setpreambledetecttimeout:0000000000000010 $d
     /tmp/cctZ3fzX.s:9999   .text.dwt_setinterrupt:0000000000000000 $t
     /tmp/cctZ3fzX.s:10006  .text.dwt_setinterrupt:0000000000000000 dwt_setinterrupt
     /tmp/cctZ3fzX.s:10104  .text.dwt_configeventcounters:0000000000000000 $t
     /tmp/cctZ3fzX.s:10111  .text.dwt_configeventcounters:0000000000000000 dwt_configeventcounters
     /tmp/cctZ3fzX.s:10152  .text.dwt_readeventcounters:0000000000000000 $t
     /tmp/cctZ3fzX.s:10159  .text.dwt_readeventcounters:0000000000000000 dwt_readeventcounters
     /tmp/cctZ3fzX.s:10291  .text.dwt_readeventcounters:0000000000000080 $d
     /tmp/cctZ3fzX.s:10302  .text.dwt_softreset:0000000000000000 $t
     /tmp/cctZ3fzX.s:10309  .text.dwt_softreset:0000000000000000 dwt_softreset
     /tmp/cctZ3fzX.s:10359  .text.dwt_softreset:0000000000000038 $d
     /tmp/cctZ3fzX.s:10365  .text.dwt_setxtaltrim:0000000000000000 $t
     /tmp/cctZ3fzX.s:10372  .text.dwt_setxtaltrim:0000000000000000 dwt_setxtaltrim
     /tmp/cctZ3fzX.s:10406  .text.dwt_setxtaltrim:0000000000000018 $d
     /tmp/cctZ3fzX.s:10412  .text.dwt_getxtaltrim:0000000000000000 $t
     /tmp/cctZ3fzX.s:10419  .text.dwt_getxtaltrim:0000000000000000 dwt_getxtaltrim
     /tmp/cctZ3fzX.s:10436  .text.dwt_getxtaltrim:0000000000000008 $d
     /tmp/cctZ3fzX.s:10441  .text.dwt_get_dgcdecision:0000000000000000 $t
     /tmp/cctZ3fzX.s:10448  .text.dwt_get_dgcdecision:0000000000000000 dwt_get_dgcdecision
     /tmp/cctZ3fzX.s:10474  .text.dwt_get_dgcdecision:0000000000000010 $d
     /tmp/cctZ3fzX.s:10479  .text.dwt_repeated_cw:0000000000000000 $t
     /tmp/cctZ3fzX.s:10486  .text.dwt_repeated_cw:0000000000000000 dwt_repeated_cw
     /tmp/cctZ3fzX.s:10551  .text.dwt_repeated_cw:0000000000000038 $d
     /tmp/cctZ3fzX.s:10557  .text.dwt_repeated_frames:0000000000000000 $t
     /tmp/cctZ3fzX.s:10564  .text.dwt_repeated_frames:0000000000000000 dwt_repeated_frames
     /tmp/cctZ3fzX.s:10607  .text.dwt_repeated_frames:0000000000000024 $d
     /tmp/cctZ3fzX.s:10612  .text.dwt_configcwmode:0000000000000000 $t
     /tmp/cctZ3fzX.s:10619  .text.dwt_configcwmode:0000000000000000 dwt_configcwmode
     /tmp/cctZ3fzX.s:10655  .text.dwt_configcontinuousframemode:0000000000000000 $t
     /tmp/cctZ3fzX.s:10662  .text.dwt_configcontinuousframemode:0000000000000000 dwt_configcontinuousframemode
     /tmp/cctZ3fzX.s:10706  .text.dwt_disablecontinuousframemode:0000000000000000 $t
     /tmp/cctZ3fzX.s:10713  .text.dwt_disablecontinuousframemode:0000000000000000 dwt_disablecontinuousframemode
     /tmp/cctZ3fzX.s:10735  .text.dwt_disablecontinuousframemode:0000000000000010 $d
ARM GAS  /tmp/cctZ3fzX.s 			page 354


     /tmp/cctZ3fzX.s:10740  .text.dwt_readtempvbat:0000000000000000 $t
     /tmp/cctZ3fzX.s:10747  .text.dwt_readtempvbat:0000000000000000 dwt_readtempvbat
     /tmp/cctZ3fzX.s:10848  .text.dwt_readtempvbat:0000000000000078 $d
     /tmp/cctZ3fzX.s:10855  .text.dwt_convertrawtemperature:0000000000000000 $t
     /tmp/cctZ3fzX.s:10862  .text.dwt_convertrawtemperature:0000000000000000 dwt_convertrawtemperature
     /tmp/cctZ3fzX.s:10894  .text.dwt_convertrawtemperature:0000000000000024 $d
     /tmp/cctZ3fzX.s:10900  .text.dwt_convertrawvoltage:0000000000000000 $t
     /tmp/cctZ3fzX.s:10907  .text.dwt_convertrawvoltage:0000000000000000 dwt_convertrawvoltage
     /tmp/cctZ3fzX.s:10946  .text.dwt_convertrawvoltage:0000000000000034 $d
     /tmp/cctZ3fzX.s:10953  .text.dwt_readwakeuptemp:0000000000000000 $t
     /tmp/cctZ3fzX.s:10960  .text.dwt_readwakeuptemp:0000000000000000 dwt_readwakeuptemp
     /tmp/cctZ3fzX.s:10982  .text.dwt_readwakeupvbat:0000000000000000 $t
     /tmp/cctZ3fzX.s:10989  .text.dwt_readwakeupvbat:0000000000000000 dwt_readwakeupvbat
     /tmp/cctZ3fzX.s:11011  .text.dwt_calcbandwidthadj:0000000000000000 $t
     /tmp/cctZ3fzX.s:11018  .text.dwt_calcbandwidthadj:0000000000000000 dwt_calcbandwidthadj
     /tmp/cctZ3fzX.s:11099  .text.dwt_calcbandwidthadj:0000000000000060 $d
     /tmp/cctZ3fzX.s:11106  .text.dwt_configuretxrf:0000000000000000 $t
     /tmp/cctZ3fzX.s:11113  .text.dwt_configuretxrf:0000000000000000 dwt_configuretxrf
     /tmp/cctZ3fzX.s:11181  .text.dwt_configuretxrf:000000000000003c $d
     /tmp/cctZ3fzX.s:11189  .text.dwt_calcpgcount:0000000000000000 $t
     /tmp/cctZ3fzX.s:11196  .text.dwt_calcpgcount:0000000000000000 dwt_calcpgcount
     /tmp/cctZ3fzX.s:11283  .text.dwt_calcpgcount:0000000000000060 $d
     /tmp/cctZ3fzX.s:11290  .text.dwt_configure_aes:0000000000000000 $t
     /tmp/cctZ3fzX.s:11297  .text.dwt_configure_aes:0000000000000000 dwt_configure_aes
     /tmp/cctZ3fzX.s:11375  .text.dwt_configure_aes:000000000000003c $d
     /tmp/cctZ3fzX.s:11380  .text.dwt_mic_size_from_bytes:0000000000000000 $t
     /tmp/cctZ3fzX.s:11387  .text.dwt_mic_size_from_bytes:0000000000000000 dwt_mic_size_from_bytes
     /tmp/cctZ3fzX.s:11418  .text.dwt_set_keyreg_128:0000000000000000 $t
     /tmp/cctZ3fzX.s:11425  .text.dwt_set_keyreg_128:0000000000000000 dwt_set_keyreg_128
     /tmp/cctZ3fzX.s:11471  .text.dwt_set_keyreg_128:0000000000000030 $d
     /tmp/cctZ3fzX.s:11479  .text.dwt_do_aes:0000000000000000 $t
     /tmp/cctZ3fzX.s:11486  .text.dwt_do_aes:0000000000000000 dwt_do_aes
     /tmp/cctZ3fzX.s:11880  .text.dwt_do_aes:0000000000000178 $d
     /tmp/cctZ3fzX.s:11889  .text.dwt_configure_le_address:0000000000000000 $t
     /tmp/cctZ3fzX.s:11896  .text.dwt_configure_le_address:0000000000000000 dwt_configure_le_address
     /tmp/cctZ3fzX.s:11914  .text.dwt_configure_le_address:000000000000000c $d
     /tmp/cctZ3fzX.s:11918  .text.dwt_configure_le_address:0000000000000010 $t
     /tmp/cctZ3fzX.s:11976  .text.dwt_configure_le_address:0000000000000038 $d
     /tmp/cctZ3fzX.s:11982  .text.dwt_configuresfdtype:0000000000000000 $t
     /tmp/cctZ3fzX.s:11989  .text.dwt_configuresfdtype:0000000000000000 dwt_configuresfdtype
     /tmp/cctZ3fzX.s:12018  .text.dwt_configuresfdtype:0000000000000018 $d
     /tmp/cctZ3fzX.s:12063  .rodata.sts_length_factors:0000000000000000 sts_length_factors
     /tmp/cctZ3fzX.s:12024  .bss.DW3000local:0000000000000000 $d
     /tmp/cctZ3fzX.s:12028  .bss.DW3000local:0000000000000000 DW3000local
     /tmp/cctZ3fzX.s:12031  .bss.crcTable:0000000000000000 $d
     /tmp/cctZ3fzX.s:12035  .bss.crcTable:0000000000000000 crcTable
     /tmp/cctZ3fzX.s:12038  .data.pdw3000local:0000000000000000 $d
     /tmp/cctZ3fzX.s:12042  .data.pdw3000local:0000000000000000 pdw3000local
     /tmp/cctZ3fzX.s:12045  .rodata.__func__.0:0000000000000000 $d
     /tmp/cctZ3fzX.s:12049  .rodata.__func__.0:0000000000000000 __func__.0
     /tmp/cctZ3fzX.s:12052  .rodata.__func__.1:0000000000000000 $d
     /tmp/cctZ3fzX.s:12056  .rodata.__func__.1:0000000000000000 __func__.1
     /tmp/cctZ3fzX.s:12059  .rodata.sts_length_factors:0000000000000000 $d

UNDEFINED SYMBOLS
wakeup_device_with_io
writetospiwithcrc
ARM GAS  /tmp/cctZ3fzX.s 			page 355


__assert_func
writetospi
readfromspi
deca_usleep
deca_sleep
decamutexon
decamutexoff
